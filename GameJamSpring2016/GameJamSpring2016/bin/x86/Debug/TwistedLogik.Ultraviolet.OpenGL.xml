<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TwistedLogik.Ultraviolet.OpenGL</name>
    </assembly>
    <members>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteBatchEffect">
            <summary>
            Represents the OpenGL/SDL2 implementation of the sprite batch custom effect.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteBatchEffect.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLSpriteBatchEffect class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteBatchEffect.CreateEffectImplementation(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the effect implementation.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The effect implementation.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontHelper">
            <summary>
            Contains methods for processing sprite fonts.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontHelper.IdentifyGlyphs(TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface,System.Nullable{TwistedLogik.Ultraviolet.Rectangle})">
            <summary>
            Identifies the positions of the glyphs on the specified surface.
            </summary>
            <param name="surface">The surface on which to identify glyphs.</param>
            <param name="source">The region on the surface in which to look for glyphs, or null to examine the entire surface.</param>
            <returns>A collection of rectangles describing the positions of the glyphs on the specified surface.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor">
            <summary>
            Loads sprite font assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ExportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ImportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.GetTextureName(TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XElement)">
            <summary>
            Reads the texture asset from the specified font face definition.
            </summary>
            <param name="metadata">The content processor's metadata.</param>
            <param name="input">The font face definition element.</param>
            <returns>The texture asset contained by the font face definition.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.GetTextureRegion(System.Xml.Linq.XElement)">
            <summary>
            Gets the region of the specified sprite font's texture that contains the glyph data.
            </summary>
            <param name="input">The font face definition element.</param>
            <returns>The region of the specified sprite font's texture that contains the glyph data, or null to use the entire texture.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.GetFirstChar(System.Xml.Linq.XElement)">
            <summary>
            Gets the font's first character.
            </summary>
            <param name="input">The font face definition element.</param>
            <returns>The font's first character.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.GetSubstitutionChar(System.Xml.Linq.XElement)">
            <summary>
            Gets the font's substitution character.
            </summary>
            <param name="input">The font face definition element.</param>
            <returns>The font's substitution character.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.GetKerningInfo(System.Xml.Linq.XElement,System.Int32@)">
            <summary>
            Reads the kerning information from the specified font face definition.
            </summary>
            <param name="input">The font face definition.</param>
            <param name="defaultAdjustment">The default kerning adjustment.</param>
            <returns>The kerning information contained by the font face definition.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ExportCharacterRegions(System.IO.BinaryWriter,System.Xml.Linq.XDocument)">
            <summary>
            Exports a font's character region data to the specified preprocessed asset stream.
            </summary>
            <param name="writer">A writer on the stream to which to export the asset.</param>
            <param name="input">The asset to export to the stream.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ExportPreprocessedFace(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.String,System.Boolean)">
            <summary>
            Exports a font face to the specified preprocessed asset stream.
            </summary>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="writer">A writer on the stream to which to export the asset.</param>
            <param name="input">The asset to export to the stream.</param>
            <param name="style">The style of the font face to export.</param>
            <param name="delete">A value indicating whether the original file will be deleted after preprocessing is complete.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ImportPreprocessedCharacterRegions(System.IO.BinaryReader)">
            <summary>
            Imports a font's character regions from the specified preprocessed asset stream.
            </summary>
            <param name="reader">A reader on the stream that contains the asset to import.</param>
            <returns>The collection of character regions that were imported, or <c>null</c> if no regions were imported.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ImportPreprocessedFace(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader,System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.Graphics.Graphics2D.CharacterRegion})">
            <summary>
            Imports a font face from the specified preprocessed asset stream.
            </summary>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="reader">A reader on the stream that contains the asset to import.</param>
            <param name="characterRegions">The font's list of character regions.</param>
            <returns>The font face that was imported, or <c>null</c> if no font face was imported.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ProcessCharacterRegions(System.Xml.Linq.XDocument)">
            <summary>
            Processes the specified font's character regions.
            </summary>
            <param name="input">The input data structure to process.</param>
            <returns>A collection of the font's character regions.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontProcessor.ProcessFace(System.Collections.Generic.Dictionary{System.String,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface},TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument,System.String,System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.Graphics.Graphics2D.CharacterRegion})">
            <summary>
            Processes the definition for a single font face.
            </summary>
            <param name="textures">A dictionary containing the textures used by this font.</param>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="input">The input data structure to process.</param>
            <param name="style">The style of the font face to process.</param>
            <param name="characterRegions">The font's list of character regions.</param>
            <returns>The processed font face, or null if the specified style does not exist in the font.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor">
            <summary>
            Loads sprite font assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.ExportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.ImportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLSpriteFontTextureProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect">
            <summary>
            Represents the OpenGL/SDL2 implementation of <see cref="T:TwistedLogik.Ultraviolet.Graphics.BasicEffect"/>.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLSpriteBatchEffect class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.OnVertexColorEnabledChanged">
            <summary>
            Occurs when the value of the VertexColorEnabled property changes.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.OnTextureEnabledChanged">
            <summary>
            Occurs when the value of the TextureEnabled property changes.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.CreateEffectImplementation(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the effect implementation.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The effect implementation.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBasicEffect.UpdateProgramIndex">
            <summary>
            Changes the effect's program index based on its current settings.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect">
            <summary>
            Represents the OpenGL/SDL2 implementation of <see cref="T:TwistedLogik.Ultraviolet.Graphics.BlurEffect"/>.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect"/> class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.OnRadiusChanged">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.OnDirectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.OnTextureSizeChanged">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.IsArbitaryRadiusBlurAvailable">
            <summary>
            Gets a value indicating whether the arbitary-radius blur shader should be loaded.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.UpdateRadius">
            <summary>
            Updates the value of the Radius effect parameter.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.UpdateDirection">
            <summary>
            Updates the value of the Direction effect parameter.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.UpdateResolution">
            <summary>
            Updates the value of the Resolution effect parameter.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.Graphics2D.OpenGLBlurEffect.CreateEffectImplementation(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the effect implementation.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The effect implementation.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.IBindableResource">
            <summary>
            Represents a resource which can be bound to the graphics device.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.IBindableResource.BindRead">
            <summary>
            Binds the resource for reading.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.IBindableResource.BindWrite">
            <summary>
            Binds the resource for writing.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.IBindableResource.UnbindRead">
            <summary>
            Unbinds the resource for reading.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.IBindableResource.UnbindWrite">
            <summary>
            Unbinds the resource for writing.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.IOpenGLResource">
            <summary>
            Represents an OpenGL resource.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.IOpenGLResource.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState">
            <summary>
            Represents the OpenGL/SDL2 implementation of the BlendState class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLBlendState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateOpaque(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates an Opaque blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateAlphaBlend(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates an AlphaBlend blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateAdditive(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates an Additive blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.CreateNonPremultiplied(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates a NonPremultiplied blend state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The blend state that was created.</returns>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.IsSeparateBlend">
            <summary>
            Gets a value indicating whether this state uses separate alpha and color blending.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.Apply">
            <summary>
            Applies the blend state to the device.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.GetBlendFunctionGL(TwistedLogik.Ultraviolet.Graphics.BlendFunction)">
            <summary>
            Converts an Ultraviolet BlendFunction value to the equivalent OpenGL value.
            </summary>
            <param name="fn">The Ultraviolet BlendFunction value to convert.</param>
            <returns>The converted OpenGL value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLBlendState.GetBlendGL(TwistedLogik.Ultraviolet.Graphics.Blend,System.Boolean)">
            <summary>
            Converts an Ultraviolet Blend value to the equivalent OpenGL value.
            </summary>
            <param name="blend">The Ultraviolet Blend value to convert.</param>
            <param name="alpha">A value indicating whether alpha blending is enabled.</param>
            <returns>The converted OpenGL value.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState">
            <summary>
            Represents the OpenGL/SDL2 implementation of the DepthStencilState class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLDepthStencilState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.CreateDefault(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the Default depth/stencil state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The depth/stencil state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.CreateDepthRead(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the DepthRead depth/stencil state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The depth/stencil state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.CreateNone(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the None depth/stencil state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The depth/stencil state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.Apply">
            <summary>
            Applies the depth/stencil state to the device.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.GetCompareFunctionGL(TwistedLogik.Ultraviolet.Graphics.CompareFunction)">
            <summary>
            Gets the OpenGL enum value that corresponds to the specified CompareFunction value.
            </summary>
            <param name="func">The CompareFunction value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLDepthStencilState.GetStencilOpGL(TwistedLogik.Ultraviolet.Graphics.StencilOperation)">
            <summary>
            Gets the OpenGL enum value that corresponds to the specified StencilOperation value.
            </summary>
            <param name="op">The StencilOperation value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation">
            <summary>
            Represents the OpenGL/SDL2 implementation of EffectImplementation.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.Collections.Generic.ICollection{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique})">
            <summary>
            Initializes a new instance of the OpenGLEffect class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="techniques">The effect's techniques.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.Parameters">
            <summary>
            Gets the effect's collection of parameters.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.Techniques">
            <summary>
            Gets the effect's collection of techniques.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.CurrentTechnique">
            <summary>
            Gets the effect's current technique.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementation.CreateEffectParameters(System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique})">
            <summary>
            Creates an effect parameter collection from the specified collection of techniques.
            </summary>
            <param name="techniques">The collection of techniques from which to create an effect parameter collection.</param>
            <returns>The effect parameter collection that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessor">
            <summary>
            Loads shader effect assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessor.ExportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessor.ImportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectImplementationProcessor.GetShader(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the asset path of the specified shader.
            </summary>
            <param name="element">The XML element that defines the shaders for an effect pass.</param>
            <param name="shader">The name of the shader to retrieve.</param>
            <returns>The asset path of the specified shader.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter">
            <summary>
            Represents the OpenGL/SDL2 implementation of the EffectParameter class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the OpenGLEffectParameter class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The effect parameter's name.</param>
            <param name="type">The effect parameter's uniform type.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueBoolean">
            <summary>
            Gets the parameter's value as a Boolean.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Boolean)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueInt32">
            <summary>
            Gets the parameter's value as an Int32.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Int32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueInt32Array">
            <summary>
            Gets the parameter's value as an array of Int32.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Int32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueUInt32">
            <summary>
            Gets the parameter's value as a UInt32.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.UInt32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueUInt32Array">
            <summary>
            Gets the parameter's value as an array of UInt32.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.UInt32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueSingle">
            <summary>
            Gets the parameter's value as a Single.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Single)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueSingleArray">
            <summary>
            Gets the parameter's value as an array of Single.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Single[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueDouble">
            <summary>
            Gets the parameter's value as a Double.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Double)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueDoubleArray">
            <summary>
            Gets the parameter's value as an array of Double.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(System.Double[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector2">
            <summary>
            Gets the parameter's value as a Vector2.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Vector2)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector2Array">
            <summary>
            Gets the parameter's value as an array of Vector2.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Vector2[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector3">
            <summary>
            Gets the parameter's value as a Vector3.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Vector3)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector3Array">
            <summary>
            Gets the parameter's value as an array of Vector3.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Vector3[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector4">
            <summary>
            Gets the parameter's value as a Vector4.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Vector4)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueVector4Array">
            <summary>
            Gets the parameter's value as an array of Vector4.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Vector4[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueColor">
            <summary>
            Gets the parameter's value as a Color.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Color)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueMatrix">
            <summary>
            Gets the parameter's value as a Matrix.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Matrix)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.GetValueTexture2D">
            <summary>
            Gets the parameter's value as a Texture2D.
            </summary>
            <returns>The parameter's value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.SetValue(TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.Name">
            <summary>
            Gets the effect parameter's name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter.Data">
            <summary>
            Gets the parameter's data container.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterCollection">
            <summary>
            Represents the OpenGL/SDL2 implementation of the EffectParameterCollection class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterCollection.#ctor(System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameter})">
            <summary>
            Initializes a new instance of the OpenGLEffectParameterCollection class.
            </summary>
            <param name="parameters">The set of parameters to add to the collection.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData">
            <summary>
            Contains the data for an effect parameter.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.#ctor">
            <summary>
            Initializes a new instance of the OpenGLEffectParameterData class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Clear">
            <summary>
            Clears the data buffer.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Boolean)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Int32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Int32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.UInt32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.UInt32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Single)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Single[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Double)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(System.Double[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Vector2)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Vector2[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Vector3)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Vector3[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Vector4)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Vector4[])">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Color)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Matrix)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.Set(TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <summary>
            Sets a value into the buffer.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetBoolean">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetInt32">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetInt32Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetUInt32">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetUInt32Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetSingle">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetSingleArray">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetDouble">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetDoubleArray">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector2">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector2Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector3">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector3Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector4">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetVector4Array">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetColor">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetMatrix">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.GetTexture2D">
            <summary>
            Gets the value that is set into the buffer.
            </summary>
            <returns>The value that is set into the buffer.</returns>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData.DataType">
            <summary>
            Gets the type of data currently stored in this buffer.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType">
            <summary>
            Represents the types of data that can be set on an effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.None">
            <summary>
            No data is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Boolean">
            <summary>
            A Boolean value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Int32">
            <summary>
            An Int32 value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Int32Array">
            <summary>
            An array of Int32 values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.UInt32">
            <summary>
            A UInt32 value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.UInt32Array">
            <summary>
            An array of UInt32 values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Single">
            <summary>
            A Single value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.SingleArray">
            <summary>
            An array of Single values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Double">
            <summary>
            A Double value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.DoubleArray">
            <summary>
            An array of Double values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector2">
            <summary>
            A Vector2 value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector2Array">
            <summary>
            An array of Vector2 values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector3">
            <summary>
            A Vector3 value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector3Array">
            <summary>
            An array of Vector3 values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector4">
            <summary>
            A Vector4 value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Vector4Array">
            <summary>
            An array of Vector3 values is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Color">
            <summary>
            A Color value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Matrix">
            <summary>
            A Matrix value is set on the effect.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterDataType.Texture2D">
            <summary>
            A Texture2D value is set on the effect.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass">
            <summary>
            Represents the OpenGL/SDL2 implementation of the EffectPass class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String,System.Collections.Generic.ICollection{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram})">
            <summary>
            Initializes a new instance of the OpenGLEffectPass class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The effect pass' name.</param>
            <param name="programs">The effect pass' collection of shader programs.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.Apply">
            <summary>
            Applies the effect pass state to the device.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.Name">
            <summary>
            Gets the effect pass's name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.ProgramIndex">
            <summary>
            Gets or sets the effect pass' current program index.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.ProgramCount">
            <summary>
            Gets or sets the effect pass' program count.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass.Programs">
            <summary>
            Gets the effect pass' collection of shader programs.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPassCollection">
            <summary>
            Represents the OpenGL/SDL2 implementation of the EffectPassCollection class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPassCollection.#ctor(System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass})">
            <summary>
            Initializes a new instance of the OpenGLEffectPassCollection class.
            </summary>
            <param name="passes">The collection of effect passes to add to the collection.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessor">
            <summary>
            Loads shader effect assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessor.ExportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,System.Xml.Linq.XDocument,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessor.ImportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.Xml.Linq.XDocument)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique">
            <summary>
            Represents the OpenGL/SDL2 implementation of the EffectTechnique class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String,System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectPass})">
            <summary>
            Initializes a new instance of the OpenGLEffectTechnique class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The technique's name.</param>
            <param name="passes">The technique's effect passes.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique.Name">
            <summary>
            Gets the effect pass's name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique.Passes">
            <summary>
            Gets the effect technique's collection of passes.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechniqueCollection">
            <summary>
            Represents the OpenGL/SDL2 implementation of the EffectTechniqueCollection class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechniqueCollection.#ctor(System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectTechnique})">
            <summary>
            Initializes a new instance of the OpenGLEffectTechniqueCollection class.
            </summary>
            <param name="techniques">A collection of effect techniques to add to the collection.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader">
            <summary>
            Represents a fragment shader.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String[])">
            <summary>
            Initializes a new instance of the OpenGLFragmentShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String)">
            <summary>
            Initializes a new instance of the OpenGLFragmentShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.OpenGLName">
            <summary>
            Gets the OpenGL shader handle.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShaderImporter">
            <summary>
            Imports .frag files.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShaderImporter.Import(TwistedLogik.Ultraviolet.Content.IContentImporterMetadata,System.IO.Stream)">
            <summary>
            Imports the data from the specified file.
            </summary>
            <param name="metadata">The asset metadata for the asset to import.</param>
            <param name="stream">The stream that contains the data to import.</param>
            <returns>The data structure that was imported from the file.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.FragmentShaderProcessor">
            <summary>
            Loads fragment shader assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.FragmentShaderProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <summary>
            Processes the specified data structure into a game asset.
            </summary>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="input">The input data structure to process.</param>
            <returns>The game asset that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream">
            <summary>
            Represents the OpenGL/SDL2 implementation of the GeometryStream class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.#cctor">
            <summary>
            Initializes the OpenGLGeometryStream type.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLGeometryStream class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Attach(TwistedLogik.Ultraviolet.Graphics.VertexBuffer)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Attach(TwistedLogik.Ultraviolet.Graphics.VertexBuffer,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Attach(TwistedLogik.Ultraviolet.Graphics.IndexBuffer)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Apply">
            <summary>
            Applies the geometry stream to the graphics device.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.ApplyAttributes(System.UInt32)">
            <summary>
            Applies the geometry stream's vertex attributes to the specified program.
            </summary>
            <param name="program">The OpenGL identifier of the shader program being used to render.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.IsUsingVertexArrayObject">
            <summary>
            Gets a value indicating whether this geometry stream is implemented using a vertex array object (VAO).
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.SupportsInstancedRendering">
            <summary>
            Gets a value indicating whether the geometry stream supports instanced rendering.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.HasMultipleSources">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.HasVertices">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.HasIndices">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.IndexBufferElementType">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.GetVertexFormatGL(TwistedLogik.Ultraviolet.Graphics.VertexFormat,System.Int32@,System.Int32@,System.Boolean@,System.Boolean@)">
            <summary>
            Gets the OpenGL vertex format that corresponds to the specified Ultraviolet vertex format.
            </summary>
            <param name="format">The vertex format to convert.</param>
            <param name="size">The number of components in the element.</param>
            <param name="stride">The vertex stride in bytes.</param>
            <param name="normalize">A value indicating whether to normalize the attribute's values.</param>
            <param name="integer">A value indicating whether to upload the attribute as an integer type.</param>
            <returns>The converted vertex format.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.GetVertexAttributeNameFromUsage(TwistedLogik.Ultraviolet.Graphics.VertexUsage,System.Int32)">
            <summary>
            Gets the name of the shader attribute which corresponds to the specified Ultraviolet vertex usage.
            </summary>
            <param name="usage">The vertex usage for which to retrieve a name.</param>
            <param name="index">The vertex usage index for which to retrieve a name.</param>
            <returns>The name of the specified shader attribute.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.SwitchCachedProgram(System.UInt32)">
            <summary>
            Attempts to associate this geometry stream with the specified OpenGL program.
            </summary>
            <param name="program">The OpenGL name of the program with which to associate this stream.</param>
            <returns><c>true</c> if the stream's cached program was changed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.DisableVertexAttributesOnCachedProgram">
            <summary>
            Disables all of the active vertex attributes for the currently cached program.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.BindBuffers">
            <summary>
            Binds the geometry stream's buffers to the device in preparation for rendering.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.BindVertexAttributesForBuffer(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer,System.Int32)">
            <summary>
            Binds the specified buffer's vertex attributes to the currently cached program.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.AttachInternal(TwistedLogik.Ultraviolet.Graphics.VertexBuffer,System.Int32)">
            <summary>
            Attaches the specified vertex buffer to the geometry stream.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding">
            <summary>
            Represents a vertex buffer which has been bound to a geometry stream.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding.#ctor(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding"/> structure.
            </summary>
            <param name="vbuffer">The vertex buffer which is bound to the geometry stream.</param>
            <param name="instanceFrequency">The number of instances which are drawn for each
            set of data in the vertex buffer.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding.VertexBuffer">
            <summary>
            Gets the vertex buffer which is bound to the geometry stream.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGeometryStream.VertexBufferBinding.InstanceFrequency">
            <summary>
            Gets the number of instances which are drawn for each set of data
            in the vertex buffer.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities"/> class.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsDepthStencilTextures">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsInstancedRendering">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsNonZeroBaseInstance">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.SupportsPreservingRenderTargetContentInHardware">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MaximumTextureSize">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MaximumViewportWidth">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLGraphicsCapabilities.MaximumViewportHeight">
            <inheritdoc/>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IndexBuffer class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.Graphics.IndexBufferElementType,System.Int32,System.UInt32)">
            <summary>
            Initializes a new instance of the OpenGLIndexBuffer.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="itype">The index element type.</param>
            <param name="icount">The index element count.</param>
            <param name="usage">The buffer's usage type.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetData``1(``0[])">
            <summary>
            Sets the data contained by the index buffer.
            </summary>
            <param name="data">An array containing the data to set in the index buffer.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.SetData``1(``0[],System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Sets the data contained by the index buffer.
            </summary>
            <param name="data">An array containing the data to set in the index buffer.</param>
            <param name="offset">The offset into <paramref name="data"/> at which to begin setting elements into the buffer.</param>
            <param name="count">The number of elements from <paramref name="data"/> to set into the buffer.</param>
            <param name="options">A hint to the underlying driver indicating whether data will be overwritten by this operation.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.IsContentLost">
            <summary>
            Gets a value indicating whether the buffer's content has been lost.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLIndexBuffer.GetElementSize">
            <summary>
            Gets the size of one of the buffer's elements, in bytes.
            </summary>
            <returns>The size of one of the buffer's elements.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState">
            <summary>
            Represents the OpenGL/SDL2 implementation of the RasterizerState class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLRasterizerState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.CreateCullClockwise(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the CullClockwise rasterizer state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The rasterizer state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.CreateCullCounterClockwise(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the CullCounterClockwise rasterizer state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The rasterizer state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.CreateCullNone(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the CullNone rasterizer state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The rasterizer state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.Apply">
            <summary>
            Applies the rasterizer state to the device.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.GetFrontFaceGL(TwistedLogik.Ultraviolet.Graphics.CullMode)">
            <summary>
            Gets the OpenGL face mode that corresponds to the specified CullMode value.
            </summary>
            <param name="mode">The CullMode value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRasterizerState.GetFillModeGL(TwistedLogik.Ultraviolet.Graphics.FillMode)">
            <summary>
            Gets the OpenGL fill mode value that corresponds to the specified FillMode value.
            </summary>
            <param name="mode">The FillMode value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D">
            <summary>
            Represents the OpenGL/SDL2 implementation of the RenderBuffer2D class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.Graphics.RenderBufferFormat,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.RenderBufferOptions)">
            <summary>
            Initializes a new instance of the OpenGLRenderBuffer2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="format">The render buffer's format.</param>
            <param name="width">The render buffer's width in pixels.</param>
            <param name="height">The render buffer's height in pixels.</param>
            <param name="options">The render buffer's configuration options.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.CompareTo(TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(``0[],TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(``0[],System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},``0[],System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData``1(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},``0[],System.Int32,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.SetData(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.TextureDataFormat,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.MarkAttached">
            <summary>
            Marks the render buffer as being attached to a render target.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Format">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Attached">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.ResizeInternal(System.Int32,System.Int32)">
            <summary>
            Resizes the render buffer. This method should only be called by the render target
            to which this buffer is attached.
            </summary>
            <param name="width">The render buffer's new width in pixels.</param>
            <param name="height">The render target's new width in pixels.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D.AllocateRenderbufferStorage(System.Int32,System.Int32)">
            <summary>
            Reallocates the renderbuffer's storage.
            </summary>
            <param name="width">The renderbuffer's width in pixels.</param>
            <param name="height">The renderbuffer's height in pixels.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D">
            <summary>
            Represents the OpenGL/SDL2 implementation of the RenderTarget2D class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.RenderTargetUsage,System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.Graphics.RenderBuffer2D})">
            <summary>
            Initializes a new instance of the OpenGLRenderTarget2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The render target's width in pixels.</param>
            <param name="height">The render target's height in pixels.</param>
            <param name="usage">A <see cref="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.RenderTargetUsage"/> value specifying whether the 
            render target's data is discarded or preserved when it is bound to the graphics device.</param>
            <param name="buffers">The collection of render buffers to attach to the target.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Attach(TwistedLogik.Ultraviolet.Graphics.RenderBuffer2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.GetData(TwistedLogik.Ultraviolet.Color[])">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.GetData(TwistedLogik.Ultraviolet.Color[],TwistedLogik.Ultraviolet.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.ValidateStatus">
            <summary>
            Validates that the framebuffer is in a state which is ready for rendering.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BindRead">
            <summary>
            Binds the resource for reading.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BindWrite">
            <summary>
            Binds the resource for writing.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.UnbindRead">
            <summary>
            Unbinds the resource for reading.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.UnbindWrite">
            <summary>
            Unbinds the resource for reading.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Size">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.RenderTargetUsage">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachRenderBuffer(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a render buffer to the render target.
            </summary>
            <param name="buffer">The render buffer to attach to the render target.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachColorBuffer(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a color buffer to the render target.
            </summary>
            <param name="buffer">The color buffer to attach to the render target.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachDepthBuffer(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a depth buffer to the render target.
            </summary>
            <param name="buffer">The depth buffer to attach to the render target.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachDepthStencilBuffer(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a depth/stencil buffer to the render target.
            </summary>
            <param name="buffer">The depth/stencil buffer to attach to the render target.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.AttachStencilBuffer(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderBuffer2D)">
            <summary>
            Attaches a stencil buffer to the render target.
            </summary>
            <param name="buffer">The stencil buffer to attach to the render target.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLRenderTarget2D.GetDataInternal(TwistedLogik.Ultraviolet.Color[],TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Gets the render target's data.
            </summary>
            <param name="data">An array to populate with the render target's data.</param>
            <param name="region">The region of the render target from which to retrieve data.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState">
            <summary>
            Represents the OpenGL/SDL2 implementation of the SamplerState class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.#ctor(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Initializes a new instance of the OpenGLSamplerState class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreatePointClamp(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the PointClamp sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreatePointWrap(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the PointWrap sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateLinearClamp(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the LinearClamp sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateLinearWrap(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the LinearWrap sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateAnisotropicClamp(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the AnisotropicClamp sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.CreateAnisotropicWrap(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Creates the AnisotropicWrap sampler state.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The sampler state that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.Apply(System.Int32)">
            <summary>
            Applies the sampler state to the device.
            </summary>
            <param name="sampler">The sampler index on which to set the state.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSamplerState.GetTextureAddressModeGL(TwistedLogik.Ultraviolet.Graphics.TextureAddressMode)">
            <summary>
            Converts the specified TextureAddressMode value to the equivalent OpenGL value.
            </summary>
            <param name="mode">The TextureAddressMode value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram">
            <summary>
            Represents an OpenGL shader program.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShader,TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLFragmentShader,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLShaderProgram class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="vertexShader">The program's vertex shader.</param>
            <param name="fragmentShader">The program's fragment shader.</param>
            <param name="programOwnsShaders">A value indicating whether the program owns the shader objects.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.VertexShader">
            <summary>
            Gets the program's vertex shader.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.FragmentShader">
            <summary>
            Gets the program's fragment shader.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.Uniforms">
            <summary>
            Gets the program's collection of uniforms.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram.CreateUniformCollection">
            <summary>
            Creates the effect pass' collection of uniforms.
            </summary>
            <returns>The collection of uniforms that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgramCollection">
            <summary>
            Represents an effect pass' collection of shader programs.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgramCollection.#ctor">
            <summary>
            Initializes a new instance of the OpenGLShaderProgramCollection class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgramCollection.#ctor(System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderProgram})">
            <summary>
            Initializes a new instance of the OpenGLShaderProgramCollection class.
            </summary>
            <param name="programs">The collection whose elements are copied to this collection.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform">
            <summary>
            Represents a shader uniform.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String,System.UInt32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the OpenGLShaderUniform class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="name">The effect parameter's name.</param>
            <param name="type">The effect parameter's uniform type.</param>
            <param name="program">The effect parameter's associated program identifier.</param>
            <param name="location">The effect parameter's uniform location.</param>
            <param name="sampler">The effect's corresponding texture sampler, if any.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Apply">
            <summary>
            Applies the shader uniform.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetDataSource(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLEffectParameterData)">
            <summary>
            Sets the effect parameter which the uniform uses as its data source.
            </summary>
            <param name="source">The effect parameter which the uniform will use as its data source.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Boolean)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Int32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Int32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.UInt32)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.UInt32[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Single)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Single[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Double)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(System.Double[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Vector2)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Vector2[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Vector3)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Vector3[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Vector4)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Vector4[])">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Color)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Matrix)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.SetValue(TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Name">
            <summary>
            Gets the shader uniform's name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Type">
            <summary>
            Gets the shader uniform's type.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform.Program">
            <summary>
            Gets the shader program identifier.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniformCollection">
            <summary>
            Represents a collection of shader uniforms.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniformCollection.#ctor(System.Collections.Generic.IEnumerable{TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform})">
            <summary>
            Initializes a new instance of the OpenGLShaderUniformCollection class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniformCollection.GetName(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLShaderUniform)">
            <summary>
            Gets the specified item's name.
            </summary>
            <param name="item">The item for which to retrieve a name.</param>
            <returns>The specified item's name.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState">
            <summary>
            Represents a collection of states to apply to the OpenGL context.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.OpenGLStateType">
            <summary>
            Represents the type of a <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> object, which determines how it modifies the OpenGL context.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.#cctor">
            <summary>
            Initializes the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> type.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ResetCache">
            <summary>
            Resets the values that are stored in the OpenGL state cache to their defaults.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.VerifyCache">
            <summary>
            Verifies that the values that are stored in the OpenGL state cache accurately
            reflect the current state of the OpenGL context.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindTexture2D(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a 2D texture to the context.
            </summary>
            <param name="texture">The texture to bind to the context.</param>
            <param name="force">A value indicating whether to force-bind the texture, even if DSA is available.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.Texture2DImmediate(System.UInt32)">
            <summary>
            Immediately binds a 2D texture to the OpenGL context and updates the state cache.
            </summary>
            <param name="texture">The texture to bind to the context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindVertexArrayObject(System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a vertex array object to the context.
            </summary>
            <param name="vertexArrayObject">The vertex array object to bind to the context.</param>
            <param name="arrayBuffer">The vertex array's associated array buffer.</param>
            <param name="elementArrayBuffer">The vertex array's associated element array buffer.</param>
            <param name="force">A value indicating whether to force-bind the vertex array object, even if DSA is available.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.BindVertexArrayObject(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Immediately binds a vertex array object to the OpenGL context and updates the state cache.
            </summary>
            <param name="vertexArrayObject">The vertex array object to bind to the context.</param>
            <param name="arrayBuffer">The vertex array's associated array buffer.</param>
            <param name="elementArrayBuffer">The vertex array's associated element array buffer.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindArrayBuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds an array buffer to the context.
            </summary>
            <param name="arrayBuffer">The array buffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the array buffer, even if DSA is available.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.BindArrayBuffer(System.UInt32)">
            <summary>
            Immediately binds an array buffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="arrayBuffer">The array buffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindElementArrayBuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds an element array buffer to the context.
            </summary>
            <param name="elementArrayBuffer">The element array buffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the array buffer, even if DSA is available.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.BindElementArrayBuffer(System.UInt32)">
            <summary>
            Immediately binds an element array buffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="elementArrayBuffer">The element array buffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindFramebuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a framebuffer to the context.
            </summary>
            <param name="framebuffer">The framebuffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the framebuffer, even if DSA is available.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.BindFramebuffer(System.UInt32)">
            <summary>
            Immediately binds a framebuffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="framebuffer">The framebuffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedBindRenderbuffer(System.UInt32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which binds a renderbuffer to the context.
            </summary>
            <param name="renderbuffer">The renderbuffer to bind to the OpenGL context.</param>
            <param name="force">A value indicating whether to force-bind the renderbuffer, even if DSA is available.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.BindRenderbuffer(System.UInt32)">
            <summary>
            Immediately binds a renderbuffer to the OpenGL context and updates the state cache.
            </summary>
            <param name="renderbuffer">The renderbuffer to bind to the OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedUseProgram(System.UInt32)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which activates a shader program.
            </summary>
            <param name="program">The program to bind to the OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.UseProgram(System.UInt32)">
            <summary>
            Immediately activates a shader program and updates the state cache.
            </summary>
            <param name="program">The program to bind to the OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.CreateArrayBuffer(System.UInt32@)">
            <summary>
            Immediately creates an array buffer and updates the state cache.
            </summary>
            <param name="buffer">The identifier of the buffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateArrayBuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates an array buffer.
            </summary>
            <param name="buffer">The identifier of the buffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.CreateElementArrayBuffer(System.UInt32@)">
            <summary>
            Immediately creates an element array buffer and updates the state cache.
            </summary>
            <param name="buffer">The identifier of the buffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateElementArrayBuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates an element array buffer.
            </summary>
            <param name="buffer">The identifier of the buffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.CreateTexture2D(System.UInt32@)">
            <summary>
            Immediately creates a 2D texture and updates the state cache.
            </summary>
            <param name="texture">The identifier of the texture that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateTexture2D(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a 2D texture.
            </summary>
            <param name="texture">The identifier of the texture that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.CreateFramebuffer(System.UInt32@)">
            <summary>
            Immediately creates a framebuffer and updates the state cache.
            </summary>
            <param name="framebuffer">The identifier of the framebuffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateFramebuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a framebuffer.
            </summary>
            <param name="framebuffer">The identifier of the framebuffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.CreateRenderbuffer(System.UInt32@)">
            <summary>
            Immediately creates a renderbuffer and updates the state cache.
            </summary>
            <param name="renderbuffer">The identifier of the renderbuffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.ScopedCreateRenderbuffer(System.UInt32@)">
            <summary>
            Creates an instance of <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState"/> which creates a renderbuffer.
            </summary>
            <param name="renderbuffer">The identifier of the renderbuffer that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.DeleteTexture2D(System.UInt32)">
            <summary>
            Indicates that the specified texture has been deleted and updates the OpenGL state accordingly.
            </summary>
            <param name="texture">The texture to delete.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.DeleteVertexArrayObject(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Indicates that the specified vertex array object has been deleted and updates the OpenGL state accordingly.
            </summary>
            <param name="vertexArrayObject">The vertex array object to delete.</param>
            <param name="arrayBuffer">The array buffer to delete.</param>
            <param name="elementArrayBuffer">The element array buffer to delete.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.Apply">
            <summary>
            Applies the state object's values to the OpenGL context.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.Dispose">
            <summary>
            Resets the OpenGL context to its values prior to this object's application.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_TEXTURE_BINDING_2D">
            <summary>
            Gets the cached value of GL_TEXTURE_BINDING_2D.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_VERTEX_ARRAY_BINDING">
            <summary>
            Gets the cached value of GL_VERTEX_ARRAY_BINDING.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_ARRAY_BUFFER_BINDING">
            <summary>
            Gets the cached value of GL_ARRAY_BUFFER_BINDING.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_ELEMENT_ARRAY_BUFFER_BINDING">
            <summary>
            Gets the cached value of GL_ELEMENT_ARRAY_BUFFER_BINDING.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_FRAMEBUFFER_BINDING">
            <summary>
            Gets the cached value of GL_FRAMEBUFFER_BINDING.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_RENDERBUFFER_BINDING">
            <summary>
            Gets the cached value of GL_RENDERBUFFER_BINDING.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.GL_CURRENT_PROGRAM">
            <summary>
            Gets the cached value of GL_CURRENT_PROGRAM.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.SupportsVertexArrayObjects">
            <summary>
            Gets a value indicating whether the current OpenGL context has support for vertex array objects (VAOs).
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLState.SupportsDirectStateAccessCreateFunctions">
            <summary>
            Gets a value indicating whether the current OpenGL context has support for the glCreateX() functions provided by
            ARB_direct_state_access or OpenGL 4.5.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger">
            <summary>
            Represents a value associated with an OpenGL context that is cached by the OpenGL/SDL2 implementation
            of Ultraviolet in order to avoid costly calls to glGet() functions.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger"/> class.
            </summary>
            <param name="name">The human-readable name of this value.</param>
            <param name="pname">The property name of this value when retrieved via glGet().</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.op_Implicit(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger)~System.Int32">
            <summary>
            Implicitly converts a cached value to an integer.
            </summary>
            <param name="value">The cached value to convert.</param>
            <returns>The converted integer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.op_Implicit(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger)~System.UInt32">
            <summary>
            Implicitly converts a cached value to an integer.
            </summary>
            <param name="value">The cached value to convert.</param>
            <returns>The converted integer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Reset">
            <summary>
            Resets the state of the cached integer.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Verify">
            <summary>
            Verifies that the cached value matches the value that is currently
            set on the current OpenGL context.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Update(System.Int32)">
            <summary>
            Updates the cached value.
            </summary>
            <param name="value">The new value.</param>
            <returns>The old value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Update(System.UInt32)">
            <summary>
            Updates the cached value.
            </summary>
            <param name="value">The new value.</param>
            <returns>The old value.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.ToString">
            <summary>
            Converts the object to a human-readable string.
            </summary>
            <returns>A human-readable string that represents the object.</returns>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLStateInteger.Name">
            <summary>
            Gets the value's human-readable name.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D">
            <summary>
            Represents the OpenGL/SDL2 implementation of the Surface2D class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.Graphics.SurfaceSource)">
            <summary>
            Initializes a new instance of the OpenGLSurface2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The surface source from which to create the surface.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface)">
            <summary>
            Initializes a new instance of the OpenGLSurface2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="nativesurf">The native SDL surface that this object represents.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the OpenGLSurface2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The width of the surface in pixels.</param>
            <param name="height">The height of the surface in pixels.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.PrepareForTextureExport(System.Boolean)">
            <summary>
            Modifies the surface's pixel data so that it can be written to disk as preprocessed texture data.
            </summary>
            <param name="premultiplyAlpha">A value indicating whether to premultiply the surface's alpha.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.GetData(TwistedLogik.Ultraviolet.Color[])">
            <summary>
            Gets the surface's data.
            </summary>
            <param name="data">An array to populate with the surface's data.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.GetData(TwistedLogik.Ultraviolet.Color[],TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Gets the surface's data.
            </summary>
            <param name="data">An array to populate with the surface's data.</param>
            <param name="region">The region of the surface from which to retrieve data.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.SetData(TwistedLogik.Ultraviolet.Color[])">
            <summary>
            Sets the surface's data.
            </summary>
            <param name="data">An array containing the data to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.SetData(TwistedLogik.Ultraviolet.Color[],TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Sets the surface's data in the specified region of the surface.
            </summary>
            <param name="data">An array containing the data to set.</param>
            <param name="region">The region of the surface to populate with data.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Blit(TwistedLogik.Ultraviolet.Graphics.Surface2D)">
            <summary>
            Blits the surface onto the specified destination surface.
            </summary>
            <param name="dst">The destination surface.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Blit(TwistedLogik.Ultraviolet.Graphics.Surface2D,TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Blits the surface onto the specified destination surface.
            </summary>
            <param name="dst">The destination surface.</param>
            <param name="dstRect">The area on the destination surface to which this surface will be copied.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Blit(TwistedLogik.Ultraviolet.Rectangle,TwistedLogik.Ultraviolet.Graphics.Surface2D,TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Blits the surface onto the specified destination surface.
            </summary>
            <param name="srcRect">The area of this surface that will be copied to the destination surface.</param>
            <param name="dst">The destination surface.</param>
            <param name="dstRect">The area on the destination surface to which this surface will be copied.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.CreateSurface">
            <summary>
            Creates a copy of the surface.
            </summary>
            <returns>A new surface which is a copy of this surface.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.CreateSurface(TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Creates a copy of a region of this surface.
            </summary>
            <param name="region">The region of this surface to copy.</param>
            <returns>A new surface which is a copy of the specified region of this surface.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.CreateTexture(System.Boolean)">
            <summary>
            Creates a texture from the surface.
            </summary>
            <param name="premultiplyAlpha">A value indicating whether to premultiply the surface's alpha when creating the texture.</param>
            <returns>The texture that was created from the surface.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.SaveAsJpeg(System.IO.Stream)">
            <summary>
            Saves the surface as a JPEG image to the specified stream.
            </summary>
            <param name="stream">The stream to which to save the image data.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.SaveAsPng(System.IO.Stream)">
            <summary>
            Saves the surface as a PNG image to the specified stream.
            </summary>
            <param name="stream">The stream to which to save the image data.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Width">
            <summary>
            Gets the surface's width in pixels.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Height">
            <summary>
            Gets the surface's height in pixels.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Pitch">
            <summary>
            Gets the length of a surface scanline in bytes.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.BytesPerPixel">
            <summary>
            Gets the number of bytes used to represent a single pixel on this surface.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Native">
            <summary>
            Gets a pointer to the native SDL surface that is encapsulated by this object.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D.BlitInternal(TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D,TwistedLogik.Ultraviolet.Rectangle,TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2D,TwistedLogik.Ultraviolet.Rectangle)">
            <summary>
            Blits the surface onto the specified destination surface.
            </summary>
            <param name="src">The source surface.</param>
            <param name="srcRect">The area of this surface that will be copied to the destination surface.</param>
            <param name="dst">The destination surface.</param>
            <param name="dstRect">The area on the destination surface to which this surface will be copied.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2DProcessor">
            <summary>
            Loads 2D surface assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLSurface2DProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface)">
            <summary>
            Processes the specified data structure into a game asset.
            </summary>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="input">The input data structure to process.</param>
            <returns>The game asset that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D">
            <summary>
            Represents the OpenGL/SDL2 implementation of the Texture2D class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="surface">The SDL surface from which to create the texture.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
            <returns>The instance of Texture2D that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLTexture2D class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texture's texel format.</param>
            <param name="type">The texture's texel type.</param>
            <param name="data">The texture's data.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
            <returns>The instance of Texture2D that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.CompareTo(TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Resize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(``0[],TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(``0[],System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},``0[],System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData``1(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},``0[],System.Int32,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetData(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.TextureDataFormat,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BindRead">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BindWrite">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.UnbindRead">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.UnbindWrite">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.OpenGLName">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Width">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Height">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BoundForReading">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.BoundForWriting">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.ImmutableStorage">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.WillNotBeSampled">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.GetOpenGLTextureFormat(TwistedLogik.Ultraviolet.Graphics.TextureDataFormat)">
            <summary>
            Gets the OpenGL texture format flag that corresponds to the specified texture data format.
            </summary>
            <param name="format">The texture data format to convert.</param>
            <returns>The converted texture data format.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.GetBaseInternalFormat(System.UInt32)">
            <summary>
            Converts the specified OpenGL sized texture format to its base format.
            </summary>
            <param name="internalformat">The sized internal texture format to convert.</param>
            <returns>The converted base internal texture format.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.CreateNativeTexture(TwistedLogik.Ultraviolet.UltravioletContext,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Void*,System.Boolean)">
            <summary>
            Creates the underlying native OpenGL texture with the specified format and data.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="internalformat">The texture's internal format.</param>
            <param name="width">The texture's width in pixels.</param>
            <param name="height">The texture's height in pixels.</param>
            <param name="format">The texel format.</param>
            <param name="type">The texel data type.</param>
            <param name="pixels">A pointer to the beginning of the texture's pixel data.</param>
            <param name="immutable">A value indicating whether to use immutable texture storage.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.ProcessResize">
            <summary>
            Processes a resize operation for this texture.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2D.SetDataInternal(System.Int32,System.Nullable{TwistedLogik.Ultraviolet.Rectangle},System.IntPtr,System.Int32,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.TextureDataFormat,TwistedLogik.Ultraviolet.Graphics.SetDataOrigin)">
            <summary>
            Sets the texture's data.
            </summary>
            <param name="level">The mipmap level for which to set data.</param>
            <param name="rect">A rectangle describing the position and size of the data to set.</param>
            <param name="data">A pointer to the data to set.</param>
            <param name="offset">The index of the first element to set.</param>
            <param name="count">The number of elements to set.</param>
            <param name="stride">The number of elements in one row of data.</param>
            <param name="format">The format of the data being set.</param>
            <param name="origin">A <see cref="T:TwistedLogik.Ultraviolet.Graphics.SetDataOrigin"/> value specifying the origin of the texture data in <paramref name="data"/>.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor">
            <summary>
            Loads 2D texture assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.ExportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryWriter,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.ImportPreprocessed(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessor.SupportsPreprocessing">
            <inheritdoc/>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata">
            <summary>
            Contains metadata for OpenGLTexture2DProcessor.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.#ctor">
            <summary>
            Initializes a new instance of the OpenGLTexture2DProcessorMetadata class.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLTexture2DProcessorMetadata.PremultiplyAlpha">
            <summary>
            Gets or sets a value indicating whether to premultiply the texture's alpha.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer">
            <summary>
            Represents the OpenGL/SDL2 implementation of the VertexBuffer class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.Graphics.VertexDeclaration,System.Int32,System.UInt32)">
            <summary>
            Initializes a new instance of the OpenGLVertexBuffer.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="vdecl">The vertex declaration for this buffer.</param>
            <param name="vcount">The number of vertices in the buffer.</param>
            <param name="usage">The buffer's usage type.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetData``1(``0[])">
            <summary>
            Sets the data contained by the vertex buffer.
            </summary>
            <param name="data">An array containing the data to set in the vertex buffer.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.SetData``1(``0[],System.Int32,System.Int32,TwistedLogik.Ultraviolet.Graphics.SetDataOptions)">
            <summary>
            Sets the data contained by the vertex buffer.
            </summary>
            <param name="data">An array containing the data to set in the vertex buffer.</param>
            <param name="offset">The offset into <paramref name="data"/> at which to begin setting elements into the buffer.</param>
            <param name="count">The number of elements from <paramref name="data"/> to set into the buffer.</param>
            <param name="options">A hint to the underlying driver indicating whether data will be overwritten by this operation.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.OpenGLName">
            <summary>
            Gets the resource's OpenGL name.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.IsContentLost">
            <summary>
            Gets a value indicating whether the buffer's content has been lost.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexBuffer.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShader">
            <summary>
            Represents a vertex shader.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String[])">
            <summary>
            Initializes a new instance of the OpenGLVertexShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,System.String)">
            <summary>
            Initializes a new instance of the OpenGLVertexShader class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="source">The shader source.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.OpenGLName">
            <summary>
            Gets the OpenGL shader handle.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShader.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with this object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderImporter">
            <summary>
            Imports .vert files.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderImporter.Import(TwistedLogik.Ultraviolet.Content.IContentImporterMetadata,System.IO.Stream)">
            <summary>
            Imports the data from the specified file.
            </summary>
            <param name="metadata">The asset metadata for the asset to import.</param>
            <param name="stream">The stream that contains the data to import.</param>
            <returns>The data structure that was imported from the file.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderProcessor">
            <summary>
            Loads vertex shader assets.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.OpenGLVertexShaderProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,System.String)">
            <summary>
            Processes the specified data structure into a game asset.
            </summary>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="input">The input data structure to process.</param>
            <returns>The game asset that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Graphics.ShaderCompiler">
            <summary>
            Represents the base class for shaders.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Graphics.ShaderCompiler.Compile(System.UInt32,System.String[],System.String@)">
            <summary>
            Compiles the specified shader.
            </summary>
            <param name="shader">The shader handle.</param>
            <param name="source">The shader source.</param>
            <param name="log">The compiler log.</param>
            <returns>true if the shader compiled; otherwise, false.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor">
            <summary>
            Represents the OpenGL/SDL2 implementation of the Cursor class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.Graphics.Surface2D,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the OpenGLCursor class.
            </summary>
            <param name="uv">The UltravioletContext class.</param>
            <param name="surface">The surface that contains the cursor image.</param>
            <param name="hx">The x-coordinate of the cursor's hotspot.</param>
            <param name="hy">The y-coordinate of the cursor's hotspot.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor.AreCursorsSupported(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Gets a value indicating whether cursors are supported on the current platform.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns><c>true</c> if cursors are supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor.Width">
            <inhertidoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor.Height">
            <inhertidoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor.Native">
            <summary>
            Gets a pointer to the native SDL2 cursor.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursor.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursorProcessor">
            <summary>
            Loads a cursor from an image.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLCursorProcessor.Process(TwistedLogik.Ultraviolet.Content.ContentManager,TwistedLogik.Ultraviolet.Content.IContentProcessorMetadata,TwistedLogik.Ultraviolet.SDL2.Native.SDL_Surface)">
            <summary>
            Processes the specified data structure into a game asset.
            </summary>
            <param name="manager">The content manager with which the asset is being processed.</param>
            <param name="metadata">The asset's metadata.</param>
            <param name="input">The input data structure to process.</param>
            <returns>The game asset that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLInitializer">
            <summary>
            Represents an object capable of querying the OpenGL driver for information 
            required by the Gluon initialization process.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLInitializer.GetProcAddress(System.String)">
            <summary>
            Gets a pointer to the OpenGL function with the specified name.
            All valid OpenGL functions must return a valid pointer on all platforms.
            </summary>
            <param name="name">The name of the OpenGL function to retrieve.</param>
            <returns>A function pointer representing the specified OpenGL function.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLStrings">
            <summary>
            Contains the implementation's string resources.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLStrings.#cctor">
            <summary>
            Initializes the OpenGLStrings type.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration">
            <summary>
            Represents the Ultraviolet Framework's configuration settings under the OpenGL/SDL2 implementation.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.#ctor">
            <summary>
            Initializes a new instance of the OpenGLUltravioletConfiguration class.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.AudioSubsystemAssembly">
            <summary>
            Gets or sets the name of the assembly that implements the audio subsystem.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MinimumOpenGLVersion">
            <summary>
            Gets or sets the minimum OpenGL version that is required by the application.
            This cannot be lower than the minimum version required by Ultraviolet itself.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.BackBufferDepthSize">
            <summary>
            Gets or sets the minimum number of bits in the depth buffer.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.BackBufferStencilSize">
            <summary>
            Gets or sets the minimum number of bits in the stencil buffer.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MultiSampleBuffers">
            <summary>
            Gets the number of buffers used for multisample anti-aliasing.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.MultiSampleSamples">
            <summary>
            Gets the number of samples around the current pixel used for multisample anti-aliasing.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.IsHardwareInputDisabled">
            <summary>
            Gets or sets a value indicating whether the context will disable hardware input by default.
            </summary>
        </member>
        <member name="F:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration.Default">
            <summary>
            The default configuration for the OpenGL/SDL2 implementation.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext">
            <summary>
            Represents the OpenGL/SDL2 implementation of the Ultraviolet context.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.#ctor(TwistedLogik.Ultraviolet.IUltravioletHost)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletContext class.
            </summary>
            <param name="host">The object that is hosting the Ultraviolet context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.#ctor(TwistedLogik.Ultraviolet.IUltravioletHost,TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletContext class.
            </summary>
            <param name="host">The object that is hosting the Ultraviolet context.</param>
            <param name="configuration">The Ultraviolet Framework configuration settings for this context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.UpdateSuspended">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.Update(TwistedLogik.Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.Draw(TwistedLogik.Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.GetPlatform">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.GetContent">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.GetGraphics">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.GetAudio">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.GetInput">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.GetUI">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.OnShutdown">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.InitializeAudioSubsystem(TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes the context's audio subsystem.
            </summary>
            <param name="configuration">The Ultraviolet Framework configuration settings for this context.</param>
            <returns>The audio subsystem.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext.PumpEvents">
            <summary>
            Pumps the SDL2 event queue.
            </summary>
            <returns><c>true</c> if the context should continue processing the frame; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics">
            <summary>
            Represents the OpenGL/SDL2 implementation of the Ultraviolet Graphics subsystem.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.#ctor(TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletContext,TwistedLogik.Ultraviolet.UltravioletConfiguration)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletGraphics class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="configuration">The Ultraviolet Framework configuration settings for the current context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Update(TwistedLogik.Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Clear(TwistedLogik.Ultraviolet.Color)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Clear(TwistedLogik.Ultraviolet.Color,System.Double,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Clear(TwistedLogik.Ultraviolet.ClearOptions,TwistedLogik.Ultraviolet.Color,System.Double,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTarget(TwistedLogik.Ultraviolet.Graphics.RenderTarget2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTargetToBackBuffer">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetRenderTarget">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetViewport(TwistedLogik.Ultraviolet.Graphics.Viewport)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetViewport">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetTexture(System.Int32,TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetTexture(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetGeometryStream(TwistedLogik.Ultraviolet.Graphics.GeometryStream)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetGeometryStream">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetBlendState(TwistedLogik.Ultraviolet.Graphics.BlendState)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetBlendState">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetDepthStencilState(TwistedLogik.Ultraviolet.Graphics.DepthStencilState)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetDepthStencilState">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRasterizerState(TwistedLogik.Ultraviolet.Graphics.RasterizerState)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetRasterizerState">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetSamplerState(System.Int32,TwistedLogik.Ultraviolet.Graphics.SamplerState)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetSamplerState(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetScissorRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetScissorRectangle(System.Nullable{TwistedLogik.Ultraviolet.Rectangle})">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetScissorRectangle">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawPrimitives(TwistedLogik.Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawIndexedPrimitives(TwistedLogik.Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.DrawInstancedPrimitives(TwistedLogik.Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.UpdateFrameRate">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.FrameRate">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Capabilities">
            <inheritdoc/>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Updating">
            <summary>
            Occurs when the subsystem is updating its state.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.ReleaseReferences(TwistedLogik.Ultraviolet.Graphics.Texture2D)">
            <summary>
            Releases any references to the specified texture.
            </summary>
            <param name="texture">The texture to which to release references.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.OpenGLContext">
            <summary>
            Gets the OpenGL context.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the object.
            </summary>
            <param name="disposing">true if the object is being disposed; false if the object is being finalized.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.VerifyCapabilities">
            <summary>
            Verifies that the graphics device supports all of the functionality required by Ultraviolet.
            </summary>
            <returns>true if the graphics device is supported; otherwise, false.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetIndexFormatGL(TwistedLogik.Ultraviolet.Graphics.IndexBufferElementType,System.Int32@)">
            <summary>
            Gets the OpenGL index element format that corresponds to the specified Ultraviolet index element type.
            </summary>
            <param name="type">The index element type to convert.</param>
            <param name="size">The index element size in bytes.</param>
            <returns>The converted index element format.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.GetPrimitiveTypeGL(TwistedLogik.Ultraviolet.Graphics.PrimitiveType,System.Int32,System.Int32@)">
            <summary>
            Gets the OpenGL primitive type that corresponds to the specified Ultraviolet primitive type.
            </summary>
            <param name="type">The primitive type to convert.</param>
            <param name="count">The number of polygons to render.</param>
            <param name="vertices">The number of vertices to render.</param>
            <returns>The converted primitive type.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.InitializeDebugOutput(TwistedLogik.Ultraviolet.UltravioletConfiguration)">
            <summary>
            Initializes debug output for this context.
            </summary>
            <param name="configuration">The Ultraviolet Framework configuration settings for the current context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.ResetDeviceStates">
            <summary>
            Resets the device states to their initial values.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.OnUpdating(TwistedLogik.Ultraviolet.UltravioletTime)">
            <summary>
            Raises the Updating event.
            </summary>
            <param name="time">Time elapsed since the last call to Update.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.ConvertScreenRegionUvToGL(System.Int32@,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Converts an Ultraviolet screen region to OpenGL coordinates.
            </summary>
            <param name="x">The x-coordinate of the region to convert.</param>
            <param name="y">The y-coordinate of the region to convert.</param>
            <param name="width">The width of the region to convert.</param>
            <param name="height">The height of the region to convert.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphics.SetRenderTargetInternal(TwistedLogik.Ultraviolet.Graphics.RenderTarget2D)">
            <summary>
            Sets the current render target.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphicsFactoryInitializer">
            <summary>
            Initializes factory methods for the OpenGL/SDL2 implementation of the graphics subsystem.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletGraphicsFactoryInitializer.Initialize(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.UltravioletFactory)">
            <summary>
            Initializes the specified factory.
            </summary>
            <param name="owner">The Ultraviolet context that owns the initializer.</param>
            <param name="factory">The factory to initialize.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IUltravioletPlatform interface.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletPlatform class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="configuration">The Ultraviolet Framework configuration settings for the current context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Update(TwistedLogik.Ultraviolet.UltravioletTime)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Cursor">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Clipboard">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Windows">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Displays">
            <inheritdoc/>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Updating">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletPlatform.OnUpdating(TwistedLogik.Ultraviolet.UltravioletTime)">
            <summary>
            Raises the Updating event.
            </summary>
            <param name="time">Time elapsed since the last call to Update.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletClipboardInfo">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IUltravioletClipboardInfo interface.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletClipboardInfo.Text">
            <inheritdoc/>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IUltravioletDisplay interface.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletDisplay class.
            </summary>
            <param name="displayIndex">The SDL2 display index that this object represents.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.GetSupportedDisplayModes">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToPixels(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToInches(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToPixels(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToDips(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToDips(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToInches(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToPixels(TwistedLogik.Ultraviolet.Point2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToInches(TwistedLogik.Ultraviolet.Point2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToPixels(TwistedLogik.Ultraviolet.Point2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToDips(TwistedLogik.Ultraviolet.Point2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToDips(TwistedLogik.Ultraviolet.Point2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToInches(TwistedLogik.Ultraviolet.Point2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToPixels(TwistedLogik.Ultraviolet.Size2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToInches(TwistedLogik.Ultraviolet.Size2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToPixels(TwistedLogik.Ultraviolet.Size2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToDips(TwistedLogik.Ultraviolet.Size2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToDips(TwistedLogik.Ultraviolet.Size2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToInches(TwistedLogik.Ultraviolet.Size2D)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToPixels(TwistedLogik.Ultraviolet.RectangleD)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToInches(TwistedLogik.Ultraviolet.RectangleD)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToPixels(TwistedLogik.Ultraviolet.RectangleD)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToDips(TwistedLogik.Ultraviolet.RectangleD)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToDips(TwistedLogik.Ultraviolet.RectangleD)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToInches(TwistedLogik.Ultraviolet.RectangleD)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToPixels(TwistedLogik.Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToInches(TwistedLogik.Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToPixels(TwistedLogik.Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.PixelsToDips(TwistedLogik.Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.InchesToDips(TwistedLogik.Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DipsToInches(TwistedLogik.Ultraviolet.Vector2)">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.Index">
            inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.Bounds">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DensityScale">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DpiX">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DpiY">
            <inheritdoc/>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.DensityBucket">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplay.CreateDisplayModeFromSDL(System.Int32,System.Int32)">
            <summary>
            Creates an Ultraviolet DisplayMode object from the specified SDL2 display mode.
            </summary>
            <param name="displayIndex">The display index.</param>
            <param name="modeIndex">The mode index.</param>
            <returns>The Ultraviolet DisplayMode object that was created.</returns>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplayInfo">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IUltravioletDisplayInfo interface.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplayInfo.#ctor">
            <summary>
            Initializes a new instance of the OpenGLUltravioletDisplayInfo class.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplayInfo.PrimaryDisplay">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplayInfo.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplayInfo.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletDisplayInfo.System#Collections#Generic#IEnumerable{TwistedLogik#Ultraviolet#Platform#IUltravioletDisplay}#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IUltravioletWindow interface.
            </summary>    
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletWindow class.
            </summary>
            <param name="ptr">The SDL2 pointer that represents the window.</param>
            <param name="native">A value indicating whether the window was created from a native pointer.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.op_Explicit(TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow)~System.IntPtr">
            <summary>
            Explicitly converts an Ultraviolet window to its underlying SDL2 pointer.
            </summary>
            <param name="window">The Ultraviolet window to convert.</param>
            <returns>The window's underlying SDL2 pointer.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.TwistedLogik#Nucleus#Messages#IMessageSubscriber{TwistedLogik#Ultraviolet#UltravioletMessageID}#ReceiveMessage(TwistedLogik.Ultraviolet.UltravioletMessageID,TwistedLogik.Nucleus.Messages.MessageData)">
            <summary>
            Receives a message that has been published to a queue.
            </summary>
            <param name="type">The type of message that was received.</param>
            <param name="data">The data for the message that was received.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Dispose">
            <summary>
            Releases resources associated with the window.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SetFullscreenDisplayMode(TwistedLogik.Ultraviolet.Platform.DisplayMode)">
            <summary>
            Sets the window's fullscreen display mode.
            </summary>
            <param name="displayMode">The fullscreen display mode to set, or null to use the desktop display mode.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SetFullscreenDisplayMode(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the window's fullscreen display mode.
            </summary>
            <param name="width">The display mode's width.</param>
            <param name="height">The display mode's height.</param>
            <param name="bpp">The display mode's bit depth.</param>
            <param name="refresh">The display mode's refresh rate in hertz.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.GetFullscreenDisplayMode">
            <summary>
            Gets the window's fullscreen display mode.
            </summary>
            <returns>The window's fullscreen display mode, or null if the window is using the desktop display mode.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SetWindowMode(TwistedLogik.Ultraviolet.Platform.WindowMode)">
            <summary>
            Sets the window's fullscreen/windowed mode.
            </summary>
            <param name="mode">The window mode to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.GetWindowMode">
            <summary>
            Gets the fullscreen/windowed mode for this window.
            </summary>
            <returns>The window's current fullscreen/windowed mode.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SetWindowState(TwistedLogik.Ultraviolet.Platform.WindowState)">
            <summary>
            Sets the window's maximization/minimization state.
            </summary>
            <param name="state">The window state to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.GetWindowState">
            <summary>
            Gets the window's maximization/minimization state.
            </summary>
            <returns>The window's current maximization/minimization state.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.ChangeCompositor(TwistedLogik.Ultraviolet.Graphics.Compositor)">
            <inheritdoc/>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Draw(TwistedLogik.Ultraviolet.UltravioletTime)">
            <summary>
            Draws the window.
            </summary>
            <param name="time">Time elapsed since the last call to Draw.</param>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.ID">
            <summary>
            Gets the window's identifier within its windowing system.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Caption">
            <summary>
            Gets or sets the window's caption.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Position">
            <summary>
            Gets or sets the window's position.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.WindowedPosition">
            <summary>
            Gets or sets the position to which the window will be restored upon entering non-maximized windowed mode.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.ClientSize">
            <summary>
            Gets the window's client size.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.WindowedClientSize">
            <summary>
            Gets or sets the client size to which the window will be restored upon entering non-maximized windowed mode.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.MaximumClientSize">
            <summary>
            Gets the window's maximum client size.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SynchronizeWithVerticalRetrace">
            <summary>
            Gets or sets a value indicating whether this window's rendering is synchronized
            with the vertical retrace (i.e, whether vsync is enabled).
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Active">
            <summary>
            Gets a value indicating whether the window is currently active.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Visible">
            <summary>
            Gets or sets a value indicating whether this window is visible.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Resizable">
            <summary>
            Gets a value indicating whether this window is resizable.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Borderless">
            <summary>
            Gets a value indicating whether this window is borderless.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Native">
            <summary>
            Gets a value indicating whether this window was created from a native window.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Icon">
            <summary>
            Gets or sets the window's icon.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Compositor">
            <inheritdoc/>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Shown">
            <summary>
            Occurs when the window is shown.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Hidden">
            <summary>
            Occurs when the window is hidden.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Minimized">
            <summary>
            Occurs when the window is minimized.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Maximized">
            <summary>
            Occurs when the window is maximized.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Restored">
            <summary>
            Occurs when the window is restored.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Drawing">
            <summary>
            Occurs when the window is rendered.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.DrawingUI">
            <summary>
            Occurs when the window is drawing its UI layer.
            </summary>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.IsCurrentWindow">
            <summary>
            Gets or sets a value indicating whether this is the current window.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.LoadDefaultWindowIcon(TwistedLogik.Ultraviolet.UltravioletContext)">
            <summary>
            Loads the default window icon.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <returns>The default window icon.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.FixPlatformSpecificIssues">
            <summary>
            Fixes issues specific to the current platform.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.FixPlatformSpecificIssues_Windows(TwistedLogik.Ultraviolet.SDL2.Native.SDL_SysWMinfo@)">
            <summary>
            Fixes issues specific to the Windows platform.
            </summary>
            <param name="sysinfo">The current system information.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SetFullscreenDisplayModeInternal(TwistedLogik.Ultraviolet.Platform.DisplayMode)">
            <summary>
            Sets the window's fullscreen display mode.
            </summary>
            <param name="displayMode">The fullscreen display mode to set, or null to use the desktop display mode.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.SetIcon(TwistedLogik.Ultraviolet.Graphics.Surface2D)">
            <summary>
            Sets the window's icon.
            </summary>
            <param name="surface">The surface that contains the icon to set.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnDrawing(TwistedLogik.Ultraviolet.UltravioletTime)">
            <summary>
            Raises the Drawing event.
            </summary>
            <param name="time">Time elapsed since the last call to Draw.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnDrawingUI(TwistedLogik.Ultraviolet.UltravioletTime)">
            <summary>
            Raises the DrawingUI event.
            </summary>
            <param name="time">Time elapsed since the last call to Draw.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnShown">
            <summary>
            Raises the Shown event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnHidden">
            <summary>
            Raises the Hidden event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnMaximized">
            <summary>
            Raises the Maximized event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnMinimized">
            <summary>
            Raises the Minimized event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.OnRestored">
            <summary>
            Raises the Restored event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.UpdateWindowedPosition(TwistedLogik.Ultraviolet.Point2)">
            <summary>
            Updates the window's windowed position, if it is currently in the correct mode and state.
            </summary>
            <param name="position">The new windowed position.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.UpdateWindowedClientSize(TwistedLogik.Ultraviolet.Size2)">
            <summary>
            Updates the window's windowed client size, if it is currently in the correct mode and state.
            </summary>
            <param name="size">The new windowed client size.</param>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindow.Win32Native">
            <summary>
            Contains Win32 p/invoke functions.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo">
            <summary>
            Represents the OpenGL/SDL2 implementation of the IUltravioletWindowInfo interface.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.#ctor(TwistedLogik.Ultraviolet.UltravioletContext,TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes a new instance of the OpenGLUltravioletWindowInfo class.
            </summary>
            <param name="uv">The Ultraviolet context.</param>
            <param name="configuration">The Ultraviolet Framework configuration settings for the current context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.Draw(TwistedLogik.Ultraviolet.UltravioletTime)">
            <summary>
            Draws the current window.
            </summary>
            <param name="time">Time elapsed since the last call to Draw.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.Swap">
            <summary>
            Swaps the back buffer and the front buffer.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.DesignatePrimary(TwistedLogik.Ultraviolet.Platform.IUltravioletWindow)">
            <summary>
            Designates the specified window as the primary window.
            </summary>
            <param name="window">The window to designate as the primary window, or null to clear the primary window.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.DesignateCurrent(TwistedLogik.Ultraviolet.Platform.IUltravioletWindow,System.IntPtr)">
            <summary>
            Makes the specified window the current window.
            </summary>
            <param name="window">The window to make current.</param>
            <param name="context">The OpenGL context.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetByID(System.Int32)">
            <summary>
            Gets the window with the specified identifier.
            </summary>
            <returns>The window with the specified identifier, or null if no such window exists.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetPtrByID(System.Int32)">
            <summary>
            Gets a pointer to the SDL2 window object encapsulated by the window with the specified identifier.
            </summary>
            <returns>A pointer to the SDL2 window object encapsulated by the window with the specified identifier.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetMaster">
            <summary>
            Gets the context's master window, which is used to create the OpenGL context.
            </summary>
            <returns>The context's master window.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetMasterPointer">
            <summary>
            Gets a pointer to the SDL2 window object encapsulated by the master window.
            </summary>
            <returns>A pointer to the SDL2 window object encapsulated by the master window.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetPrimary">
            <summary>
            Gets the context's primary window.
            </summary>
            <returns>The context's primary window, or null if the context is headless.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetPrimaryPointer">
            <summary>
            Gets a pointer to the SDL2 window object encapsulated by the primary window.
            </summary>
            <returns>A pointer to the SDL2 window object encapsulated by the primary window.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetCurrent">
            <summary>
            Gets the context's current window.
            </summary>
            <returns>The context's current window.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetCurrentPointer">
            <summary>
            Gets a pointer to the SDL2 window object encapsulated by the current window.
            </summary>
            <returns>A pointer to the SDL2 window object encapsulated by the current window.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.Create(System.String,System.Int32,System.Int32,System.Int32,System.Int32,TwistedLogik.Ultraviolet.Platform.WindowFlags)">
            <summary>
            Creates a new window and attaches it to the current context.
            </summary>
            <param name="caption">The window's caption text.</param>
            <param name="x">The x-coordinate at which to position the window's top-left corner.</param>
            <param name="y">The y-coordinate at which to position the window's top-left corner.</param>
            <param name="width">The width of the window's client area in pixels.</param>
            <param name="height">The height of the window's client area in pixels.</param>
            <param name="flags">A set of WindowFlags values indicating how to create the window.</param>
            <returns>The Ultraviolet window that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.CreateFromNativePointer(System.IntPtr)">
            <summary>
            Creates a new Ultraviolet window from the specified native window and attaches it to the current context.
            </summary>
            <param name="ptr">A pointer that represents the native window to attach to the context.</param>
            <returns>The Ultraviolet window that was created.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.Destroy(TwistedLogik.Ultraviolet.Platform.IUltravioletWindow)">
            <summary>
            Destroys the specified window.
            </summary>
            <remarks>Windows which were created from native pointers are disassociated from the current context,
            but are not actually destroyed.  To destroy such windows, use the native framework which created them.</remarks>
            <param name="window">The Ultraviolet window to destroy.</param>
            <returns>true if the window was destroyed; false if the window was closed.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.DestroyByID(System.Int32)">
            <summary>
            Destroys the window with the specified identifier.
            </summary>
            <param name="windowID">The identifier of the window to destroy.</param>
            <returns>true if the window was destroyed; false if the window was closed.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.GetEnumerator">
            <summary>
            Gets the collection's enumerator.
            </summary>
            <returns>The collection's enumerator.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.System#Collections#Generic#IEnumerable{TwistedLogik#Ultraviolet#Platform#IUltravioletWindow}#GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The collection's enumerator.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The collection's enumerator.</returns>
        </member>
        <member name="P:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.Ultraviolet">
            <summary>
            Gets the Ultraviolet context.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.WindowCreated">
            <summary>
            Occurs after a window has been created.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.WindowDestroyed">
            <summary>
            Occurs when a window is about to be destroyed.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.PrimaryWindowChanging">
            <summary>
            Occurs when the primary window is about to change.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.PrimaryWindowChanged">
            <summary>
            Occurs when the primary window changes.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.CurrentWindowChanged">
            <summary>
            Occurs when the current window is about to change.
            </summary>
        </member>
        <member name="E:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.CurrentWindowChanging">
            <summary>
            Occurs when the current window changes.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.InitializePrimaryWindow(TwistedLogik.Ultraviolet.OpenGL.OpenGLUltravioletConfiguration)">
            <summary>
            Initializes the context's primary window.
            </summary>
            <param name="configuration">The Ultraviolet Framg</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.OnWindowCreated(TwistedLogik.Ultraviolet.Platform.IUltravioletWindow)">
            <summary>
            Raises the WindowCreated event.
            </summary>
            <param name="window">The window that was created.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.OnWindowDestroyed(TwistedLogik.Ultraviolet.Platform.IUltravioletWindow)">
            <summary>
            Raises the WindowDestroyed event.
            </summary>
            <param name="window">The window that is being destroyed.</param>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.OnPrimaryWindowChanging">
            <summary>
            Raises the PrimaryWindowChanging event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.OnPrimaryWindowChanged">
            <summary>
            Raises the PrimaryWindowChanged event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.OnCurrentWindowChanging">
            <summary>
            Raises the CurrentWindowChanging event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.OnCurrentWindowChanged">
            <summary>
            Raises the CurrentWindowChanged event.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.Platform.OpenGLUltravioletWindowInfo.DesignateCurrentOpenGLWindow(TwistedLogik.Ultraviolet.Platform.IUltravioletWindow,System.IntPtr)">
            <summary>
            Binds the OpenGL context to the specified window.
            </summary>
        </member>
        <member name="T:TwistedLogik.Ultraviolet.OpenGL.ResourceUtil">
            <summary>
            Contains utility methods for accessing the library's resource files.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.ResourceUtil.#cctor">
            <summary>
            Initializes the <see cref="T:TwistedLogik.Ultraviolet.OpenGL.ResourceUtil"/> class.
            </summary>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.ResourceUtil.ReadResourceString(System.String)">
            <summary>
            Reads a resource file as a string of text.
            </summary>
            <param name="name">The name of the file to read.</param>
            <returns>A string of text that contains the file data.</returns>
        </member>
        <member name="M:TwistedLogik.Ultraviolet.OpenGL.ResourceUtil.ReadShaderResourceString(System.String)">
            <summary>
            Reads a resource file containing a shader program's source code.
            </summary>
            <param name="name">The name of the file to read.</param>
            <returns>A string of text that contains the file data.</returns>
        </member>
    </members>
</doc>
