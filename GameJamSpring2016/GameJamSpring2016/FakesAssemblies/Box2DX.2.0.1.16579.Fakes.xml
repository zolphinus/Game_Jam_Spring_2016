<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Box2DX.2.0.1.16579.Fakes</name>
    </assembly>
    <members>
        <member name="T:Box2DX.Collision.Fakes.ShimAABB">
            <summary>Shim type of Box2DX.Collision.AABB</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimAABB.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimAABB.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimAABB.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimAABB.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimAABB.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBound">
            <summary>Shim type of Box2DX.Collision.Bound</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBound.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBound.#ctor(Box2DX.Collision.Bound)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBound.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBound.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.Clone">
            <summary>Sets the shim of Bound.Clone()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.Constructor">
            <summary>Sets the shim of Bound.Bound()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.IsLowerGet">
            <summary>Sets the shim of Bound.get_IsLower()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.IsUpperGet">
            <summary>Sets the shim of Bound.get_IsUpper()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBound.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.AllInstances.Clone">
            <summary>Sets the shim of Bound.Clone()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.AllInstances.IsLowerGet">
            <summary>Sets the shim of Bound.get_IsLower()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBound.AllInstances.IsUpperGet">
            <summary>Sets the shim of Bound.get_IsUpper()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBoundValues">
            <summary>Shim type of Box2DX.Collision.BoundValues</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBoundValues.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBoundValues.#ctor(Box2DX.Collision.BoundValues)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBoundValues.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBoundValues.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBoundValues.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBoundValues.Constructor">
            <summary>Sets the shim of BoundValues.BoundValues()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBoundValues.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBroadPhase">
            <summary>Shim type of Box2DX.Collision.BroadPhase</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBroadPhase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBroadPhase.#ctor(Box2DX.Collision.BroadPhase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBroadPhase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBroadPhase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AddProxyResultUInt16ProxyInt32SortKeyFunc">
            <summary>Sets the shim of BroadPhase.AddProxyResult(UInt16 proxyId, Proxy proxy, Int32 maxCount, SortKeyFunc sortKey)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.BinarySearchBoundArrayInt32UInt16">
            <summary>Sets the shim of BroadPhase.BinarySearch(Bound[] bounds, Int32 count, UInt16 value)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.Commit">
            <summary>Sets the shim of BroadPhase.Commit()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.ConstructorAABBPairCallback">
            <summary>Sets the shim of BroadPhase.BroadPhase(AABB worldAABB, PairCallback callback)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.CreateProxyAABBObject">
            <summary>Sets the shim of BroadPhase.CreateProxy(AABB aabb, Object userData)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.DestroyProxyInt32">
            <summary>Sets the shim of BroadPhase.DestroyProxy(Int32 proxyId)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.GetProxyInt32">
            <summary>Sets the shim of BroadPhase.GetProxy(Int32 proxyId)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.InRangeAABB">
            <summary>Sets the shim of BroadPhase.InRange(AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.IncrementOverlapCountInt32">
            <summary>Sets the shim of BroadPhase.IncrementOverlapCount(Int32 proxyId)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.IncrementTimeStamp">
            <summary>Sets the shim of BroadPhase.IncrementTimeStamp()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.MoveProxyInt32AABB">
            <summary>Sets the shim of BroadPhase.MoveProxy(Int32 proxyId, AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.QueryAABBObjectArrayInt32">
            <summary>Sets the shim of BroadPhase.Query(AABB aabb, Object[] userData, Int32 maxCount)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.QuerySegmentSegmentObjectArrayInt32SortKeyFunc">
            <summary>Sets the shim of BroadPhase.QuerySegment(Segment segment, Object[] userData, Int32 maxCount, SortKeyFunc sortKey)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.StaticConstructor">
            <summary>Sets the shim of BroadPhase.BroadPhase()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.TestOverlapBoundValuesProxy">
            <summary>Sets the shim of BroadPhase.TestOverlap(BoundValues b, Proxy p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.TestOverlapProxyProxy">
            <summary>Sets the shim of BroadPhase.TestOverlap(Proxy p1, Proxy p2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.Validate">
            <summary>Sets the shim of BroadPhase.Validate()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.AddProxyResultUInt16ProxyInt32SortKeyFunc">
            <summary>Sets the shim of BroadPhase.AddProxyResult(UInt16 proxyId, Proxy proxy, Int32 maxCount, SortKeyFunc sortKey)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.Commit">
            <summary>Sets the shim of BroadPhase.Commit()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.ComputeBoundsUInt16ArrayOutUInt16ArrayOutAABB">
            <summary>Sets the shim of BroadPhase.ComputeBounds(UInt16[]&amp; lowerValues, UInt16[]&amp; upperValues, AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.CreateProxyAABBObject">
            <summary>Sets the shim of BroadPhase.CreateProxy(AABB aabb, Object userData)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.DestroyProxyInt32">
            <summary>Sets the shim of BroadPhase.DestroyProxy(Int32 proxyId)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.GetProxyInt32">
            <summary>Sets the shim of BroadPhase.GetProxy(Int32 proxyId)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.InRangeAABB">
            <summary>Sets the shim of BroadPhase.InRange(AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.IncrementOverlapCountInt32">
            <summary>Sets the shim of BroadPhase.IncrementOverlapCount(Int32 proxyId)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.IncrementTimeStamp">
            <summary>Sets the shim of BroadPhase.IncrementTimeStamp()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.MoveProxyInt32AABB">
            <summary>Sets the shim of BroadPhase.MoveProxy(Int32 proxyId, AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.QueryAABBObjectArrayInt32">
            <summary>Sets the shim of BroadPhase.Query(AABB aabb, Object[] userData, Int32 maxCount)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.QueryInt32OutInt32OutUInt16UInt16BoundArrayInt32Int32">
            <summary>Sets the shim of BroadPhase.Query(Int32&amp; lowerQueryOut, Int32&amp; upperQueryOut, UInt16 lowerValue, UInt16 upperValue, Bound[] bounds, Int32 boundCount, Int32 axis)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.QuerySegmentSegmentObjectArrayInt32SortKeyFunc">
            <summary>Sets the shim of BroadPhase.QuerySegment(Segment segment, Object[] userData, Int32 maxCount, SortKeyFunc sortKey)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.TestOverlapBoundValuesProxy">
            <summary>Sets the shim of BroadPhase.TestOverlap(BoundValues b, Proxy p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.TestOverlapProxyProxy">
            <summary>Sets the shim of BroadPhase.TestOverlap(Proxy p1, Proxy p2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBroadPhase.AllInstances.Validate">
            <summary>Sets the shim of BroadPhase.Validate()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBufferedPair">
            <summary>Shim type of Box2DX.Collision.BufferedPair</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBufferedPair.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBufferedPair.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimBufferedPair.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimBufferedPair.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimBufferedPair.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimCircleShape">
            <summary>Shim type of Box2DX.Collision.CircleShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCircleShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCircleShape.#ctor(Box2DX.Collision.CircleShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCircleShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCircleShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCircleShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the shim of CircleShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.ComputeSweepRadiusVec2">
            <summary>Sets the shim of CircleShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.Constructor">
            <summary>Sets the shim of CircleShape.CircleShape()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.GetSupportVec2">
            <summary>Sets the shim of CircleShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.GetSupportVertexVec2">
            <summary>Sets the shim of CircleShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.GetVertexInt32">
            <summary>Sets the shim of CircleShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.TestPointXFormVec2">
            <summary>Sets the shim of CircleShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.VertexCountGet">
            <summary>Sets the shim of CircleShape.get_VertexCount()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.ComputeAABBAABBOutXForm">
            <summary>Sets the shim of CircleShape.ComputeAABB(AABB&amp; aabb, XForm transform)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.ComputeMassMassDataOutSingle">
            <summary>Sets the shim of CircleShape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the shim of CircleShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.ComputeSweepRadiusVec2">
            <summary>Sets the shim of CircleShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.GetSupportVec2">
            <summary>Sets the shim of CircleShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.GetSupportVertexVec2">
            <summary>Sets the shim of CircleShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.GetVertexInt32">
            <summary>Sets the shim of CircleShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.TestPointXFormVec2">
            <summary>Sets the shim of CircleShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the shim of CircleShape.TestSegment(XForm transform, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCircleShape.AllInstances.VertexCountGet">
            <summary>Sets the shim of CircleShape.get_VertexCount()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimClipVertex">
            <summary>Shim type of Box2DX.Collision.ClipVertex</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimClipVertex.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimClipVertex.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimClipVertex.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimClipVertex.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimClipVertex.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimCollision">
            <summary>Shim type of Box2DX.Collision.Collision</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCollision.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCollision.#ctor(Box2DX.Collision.Collision)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCollision.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimCollision.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.ClipSegmentToLineClipVertexArrayOutClipVertexArrayVec2Single">
            <summary>Sets the shim of Collision.ClipSegmentToLine(ClipVertex[]&amp; vOut, ClipVertex[] vIn, Vec2 normal, Single offset)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.CollideCirclesManifoldRefCircleShapeXFormCircleShapeXForm">
            <summary>Sets the shim of Collision.CollideCircles(Manifold&amp; manifold, CircleShape circle1, XForm xf1, CircleShape circle2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.CollideEdgeAndCircleManifoldRefEdgeShapeXFormCircleShapeXForm">
            <summary>Sets the shim of Collision.CollideEdgeAndCircle(Manifold&amp; manifold, EdgeShape edge, XForm transformA, CircleShape circle, XForm transformB)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.CollidePolyAndEdgeManifoldRefPolygonShapeXFormEdgeShapeXForm">
            <summary>Sets the shim of Collision.CollidePolyAndEdge(Manifold&amp; manifold, PolygonShape polygon, XForm transformA, EdgeShape edge, XForm transformB)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.CollidePolygonAndCircleManifoldRefPolygonShapeXFormCircleShapeXForm">
            <summary>Sets the shim of Collision.CollidePolygonAndCircle(Manifold&amp; manifold, PolygonShape polygon, XForm xf1, CircleShape circle, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.CollidePolygonsManifoldRefPolygonShapeXFormPolygonShapeXForm">
            <summary>Sets the shim of Collision.CollidePolygons(Manifold&amp; manifold, PolygonShape polyA, XForm xfA, PolygonShape polyB, XForm xfB)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.Constructor">
            <summary>Sets the shim of Collision.Collision()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.DistanceDistanceOutputOutSimplexCacheRefDistanceInputRefShapeShape">
            <summary>Sets the shim of Collision.Distance(DistanceOutput&amp; output, SimplexCache&amp; cache, DistanceInput&amp; input, Shape shapeA, Shape shapeB)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.EdgeSeparationPolygonShapeXFormInt32PolygonShapeXForm">
            <summary>Sets the shim of Collision.EdgeSeparation(PolygonShape poly1, XForm xf1, Int32 edge1, PolygonShape poly2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.FindIncidentEdgeClipVertexArrayOutPolygonShapeXFormInt32PolygonShapeXForm">
            <summary>Sets the shim of Collision.FindIncidentEdge(ClipVertex[]&amp; c, PolygonShape poly1, XForm xf1, Int32 edge1, PolygonShape poly2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.FindMaxSeparationInt32RefPolygonShapeXFormPolygonShapeXForm">
            <summary>Sets the shim of Collision.FindMaxSeparation(Int32&amp; edgeIndex, PolygonShape poly1, XForm xf1, PolygonShape poly2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.GetPointStatesPointStateArrayPointStateArrayManifoldManifold">
            <summary>Sets the shim of Collision.GetPointStates(PointState[] state1, PointState[] state2, Manifold manifold1, Manifold manifold2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.StaticConstructor">
            <summary>Sets the shim of Collision.Collision()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.TestOverlapAABBAABB">
            <summary>Sets the shim of Collision.TestOverlap(AABB a, AABB b)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimCollision.TimeOfImpactTOIInputShapeShape">
            <summary>Sets the shim of Collision.TimeOfImpact(TOIInput input, Shape shapeA, Shape shapeB)</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimCollision.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimContactID">
            <summary>Shim type of Box2DX.Collision.ContactID</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimContactID.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimContactID.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimContactID.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimContactID.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimContactID.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimDistanceInput">
            <summary>Shim type of Box2DX.Collision.DistanceInput</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimDistanceInput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimDistanceInput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimDistanceInput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimDistanceInput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimDistanceInput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimDistanceOutput">
            <summary>Shim type of Box2DX.Collision.DistanceOutput</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimDistanceOutput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimDistanceOutput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimDistanceOutput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimDistanceOutput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimDistanceOutput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimEdgeShape">
            <summary>Shim type of Box2DX.Collision.EdgeShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimEdgeShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimEdgeShape.#ctor(Box2DX.Collision.EdgeShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimEdgeShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimEdgeShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimEdgeShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the shim of EdgeShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.ComputeSweepRadiusVec2">
            <summary>Sets the shim of EdgeShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Constructor">
            <summary>Sets the shim of EdgeShape.EdgeShape()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Corner1IsConvexGet">
            <summary>Sets the shim of EdgeShape.get_Corner1IsConvex()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Corner1VectorGet">
            <summary>Sets the shim of EdgeShape.get_Corner1Vector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Corner2IsConvexGet">
            <summary>Sets the shim of EdgeShape.get_Corner2IsConvex()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Corner2VectorGet">
            <summary>Sets the shim of EdgeShape.get_Corner2Vector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.DirectionVectorGet">
            <summary>Sets the shim of EdgeShape.get_DirectionVector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Dispose">
            <summary>Sets the shim of EdgeShape.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.GetSupportVec2">
            <summary>Sets the shim of EdgeShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.GetSupportVertexVec2">
            <summary>Sets the shim of EdgeShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.GetVertexInt32">
            <summary>Sets the shim of EdgeShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.LengthGet">
            <summary>Sets the shim of EdgeShape.get_Length()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.NormalVectorGet">
            <summary>Sets the shim of EdgeShape.get_NormalVector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.SetNextEdgeEdgeShapeVec2Boolean">
            <summary>Sets the shim of EdgeShape.SetNextEdge(EdgeShape edge, Vec2 cornerDir, Boolean convex)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.SetPrevEdgeEdgeShapeVec2Boolean">
            <summary>Sets the shim of EdgeShape.SetPrevEdge(EdgeShape edge, Vec2 cornerDir, Boolean convex)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.SetVec2Vec2">
            <summary>Sets the shim of EdgeShape.Set(Vec2 v1, Vec2 v2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.TestPointXFormVec2">
            <summary>Sets the shim of EdgeShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Vertex1Get">
            <summary>Sets the shim of EdgeShape.get_Vertex1()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.Vertex2Get">
            <summary>Sets the shim of EdgeShape.get_Vertex2()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.ComputeAABBAABBOutXForm">
            <summary>Sets the shim of EdgeShape.ComputeAABB(AABB&amp; aabb, XForm transform)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.ComputeMassMassDataOutSingle">
            <summary>Sets the shim of EdgeShape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the shim of EdgeShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.ComputeSweepRadiusVec2">
            <summary>Sets the shim of EdgeShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Corner1IsConvexGet">
            <summary>Sets the shim of EdgeShape.get_Corner1IsConvex()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Corner1VectorGet">
            <summary>Sets the shim of EdgeShape.get_Corner1Vector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Corner2IsConvexGet">
            <summary>Sets the shim of EdgeShape.get_Corner2IsConvex()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Corner2VectorGet">
            <summary>Sets the shim of EdgeShape.get_Corner2Vector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.DirectionVectorGet">
            <summary>Sets the shim of EdgeShape.get_DirectionVector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Dispose">
            <summary>Sets the shim of EdgeShape.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.GetSupportVec2">
            <summary>Sets the shim of EdgeShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.GetSupportVertexVec2">
            <summary>Sets the shim of EdgeShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.GetVertexInt32">
            <summary>Sets the shim of EdgeShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.LengthGet">
            <summary>Sets the shim of EdgeShape.get_Length()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.NormalVectorGet">
            <summary>Sets the shim of EdgeShape.get_NormalVector()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.SetNextEdgeEdgeShapeVec2Boolean">
            <summary>Sets the shim of EdgeShape.SetNextEdge(EdgeShape edge, Vec2 cornerDir, Boolean convex)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.SetPrevEdgeEdgeShapeVec2Boolean">
            <summary>Sets the shim of EdgeShape.SetPrevEdge(EdgeShape edge, Vec2 cornerDir, Boolean convex)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.SetVec2Vec2">
            <summary>Sets the shim of EdgeShape.Set(Vec2 v1, Vec2 v2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.TestPointXFormVec2">
            <summary>Sets the shim of EdgeShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the shim of EdgeShape.TestSegment(XForm transform, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Vertex1Get">
            <summary>Sets the shim of EdgeShape.get_Vertex1()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimEdgeShape.AllInstances.Vertex2Get">
            <summary>Sets the shim of EdgeShape.get_Vertex2()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimFeatures">
            <summary>Shim type of Box2DX.Collision.Features</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimFeatures.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimFeatures.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimFeatures.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimFeatures.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimFeatures.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimIndexArray">
            <summary>Shim type of Box2DX.Collision.IndexArray</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimIndexArray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimIndexArray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimIndexArray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimIndexArray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimIndexArray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimManifold">
            <summary>Shim type of Box2DX.Collision.Manifold</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifold.#ctor(Box2DX.Collision.Manifold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifold.Clone">
            <summary>Sets the shim of Manifold.Clone()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifold.Constructor">
            <summary>Sets the shim of Manifold.Manifold()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimManifold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifold.AllInstances.Clone">
            <summary>Sets the shim of Manifold.Clone()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimManifoldPoint">
            <summary>Shim type of Box2DX.Collision.ManifoldPoint</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifoldPoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifoldPoint.#ctor(Box2DX.Collision.ManifoldPoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifoldPoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimManifoldPoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifoldPoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifoldPoint.Clone">
            <summary>Sets the shim of ManifoldPoint.Clone()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifoldPoint.Constructor">
            <summary>Sets the shim of ManifoldPoint.ManifoldPoint()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimManifoldPoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimManifoldPoint.AllInstances.Clone">
            <summary>Sets the shim of ManifoldPoint.Clone()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimMassData">
            <summary>Shim type of Box2DX.Collision.MassData</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimMassData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimMassData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimMassData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimMassData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimMassData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPair">
            <summary>Shim type of Box2DX.Collision.Pair</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPair.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPair.#ctor(Box2DX.Collision.Pair)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPair.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPair.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.ClearBuffered">
            <summary>Sets the shim of Pair.ClearBuffered()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.ClearRemoved">
            <summary>Sets the shim of Pair.ClearRemoved()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.Constructor">
            <summary>Sets the shim of Pair.Pair()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.IsBuffered">
            <summary>Sets the shim of Pair.IsBuffered()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.IsFinal">
            <summary>Sets the shim of Pair.IsFinal()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.IsRemoved">
            <summary>Sets the shim of Pair.IsRemoved()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.SetBuffered">
            <summary>Sets the shim of Pair.SetBuffered()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.SetFinal">
            <summary>Sets the shim of Pair.SetFinal()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.SetRemoved">
            <summary>Sets the shim of Pair.SetRemoved()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPair.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.ClearBuffered">
            <summary>Sets the shim of Pair.ClearBuffered()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.ClearRemoved">
            <summary>Sets the shim of Pair.ClearRemoved()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.IsBuffered">
            <summary>Sets the shim of Pair.IsBuffered()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.IsFinal">
            <summary>Sets the shim of Pair.IsFinal()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.IsRemoved">
            <summary>Sets the shim of Pair.IsRemoved()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.SetBuffered">
            <summary>Sets the shim of Pair.SetBuffered()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.SetFinal">
            <summary>Sets the shim of Pair.SetFinal()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPair.AllInstances.SetRemoved">
            <summary>Sets the shim of Pair.SetRemoved()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPairCallback">
            <summary>Shim type of Box2DX.Collision.PairCallback</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairCallback.#ctor(Box2DX.Collision.PairCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairCallback.Constructor">
            <summary>Sets the shim of PairCallback.PairCallback()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPairCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPairManager">
            <summary>Shim type of Box2DX.Collision.PairManager</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairManager.#ctor(Box2DX.Collision.PairManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPairManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AddBufferedPairInt32Int32">
            <summary>Sets the shim of PairManager.AddBufferedPair(Int32 id1, Int32 id2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AddPairInt32Int32">
            <summary>Sets the shim of PairManager.AddPair(Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.BufferedPairSortPredicateBufferedPairBufferedPair">
            <summary>Sets the shim of PairManager.BufferedPairSortPredicate(BufferedPair pair1, BufferedPair pair2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.Commit">
            <summary>Sets the shim of PairManager.Commit()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.Constructor">
            <summary>Sets the shim of PairManager.PairManager()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.EqualsBufferedPairRefBufferedPairRef">
            <summary>Sets the shim of PairManager.Equals(BufferedPair&amp; pair1, BufferedPair&amp; pair2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.EqualsPairInt32Int32">
            <summary>Sets the shim of PairManager.Equals(Pair pair, Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.FindInt32Int32">
            <summary>Sets the shim of PairManager.Find(Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.FindInt32Int32UInt32">
            <summary>Sets the shim of PairManager.Find(Int32 proxyId1, Int32 proxyId2, UInt32 hash)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.HashUInt32UInt32">
            <summary>Sets the shim of PairManager.Hash(UInt32 proxyId1, UInt32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.InitializeBroadPhasePairCallback">
            <summary>Sets the shim of PairManager.Initialize(BroadPhase broadPhase, PairCallback callback)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.RemoveBufferedPairInt32Int32">
            <summary>Sets the shim of PairManager.RemoveBufferedPair(Int32 id1, Int32 id2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.RemovePairInt32Int32">
            <summary>Sets the shim of PairManager.RemovePair(Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.StaticConstructor">
            <summary>Sets the shim of PairManager.PairManager()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.ValidateBuffer">
            <summary>Sets the shim of PairManager.ValidateBuffer()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.ValidateTable">
            <summary>Sets the shim of PairManager.ValidateTable()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPairManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.AddBufferedPairInt32Int32">
            <summary>Sets the shim of PairManager.AddBufferedPair(Int32 id1, Int32 id2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.AddPairInt32Int32">
            <summary>Sets the shim of PairManager.AddPair(Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.Commit">
            <summary>Sets the shim of PairManager.Commit()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.EqualsBufferedPairRefBufferedPairRef">
            <summary>Sets the shim of PairManager.Equals(BufferedPair&amp; pair1, BufferedPair&amp; pair2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.EqualsPairInt32Int32">
            <summary>Sets the shim of PairManager.Equals(Pair pair, Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.FindInt32Int32">
            <summary>Sets the shim of PairManager.Find(Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.FindInt32Int32UInt32">
            <summary>Sets the shim of PairManager.Find(Int32 proxyId1, Int32 proxyId2, UInt32 hash)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.HashUInt32UInt32">
            <summary>Sets the shim of PairManager.Hash(UInt32 proxyId1, UInt32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.InitializeBroadPhasePairCallback">
            <summary>Sets the shim of PairManager.Initialize(BroadPhase broadPhase, PairCallback callback)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.RemoveBufferedPairInt32Int32">
            <summary>Sets the shim of PairManager.RemoveBufferedPair(Int32 id1, Int32 id2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.RemovePairInt32Int32">
            <summary>Sets the shim of PairManager.RemovePair(Int32 proxyId1, Int32 proxyId2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.ValidateBuffer">
            <summary>Sets the shim of PairManager.ValidateBuffer()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPairManager.AllInstances.ValidateTable">
            <summary>Sets the shim of PairManager.ValidateTable()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPolygonShape">
            <summary>Shim type of Box2DX.Collision.PolygonShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPolygonShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPolygonShape.#ctor(Box2DX.Collision.PolygonShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPolygonShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPolygonShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimPolygonShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.ComputeCentroidVec2ArrayInt32">
            <summary>Sets the shim of PolygonShape.ComputeCentroid(Vec2[] vs, Int32 count)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the shim of PolygonShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.ComputeSweepRadiusVec2">
            <summary>Sets the shim of PolygonShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.Constructor">
            <summary>Sets the shim of PolygonShape.PolygonShape()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.GetSupportVec2">
            <summary>Sets the shim of PolygonShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.GetSupportVertexVec2">
            <summary>Sets the shim of PolygonShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.GetVertexInt32">
            <summary>Sets the shim of PolygonShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.SetAsBoxSingleSingle">
            <summary>Sets the shim of PolygonShape.SetAsBox(Single hx, Single hy)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.SetAsBoxSingleSingleVec2Single">
            <summary>Sets the shim of PolygonShape.SetAsBox(Single hx, Single hy, Vec2 center, Single angle)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.SetAsEdgeVec2Vec2">
            <summary>Sets the shim of PolygonShape.SetAsEdge(Vec2 v1, Vec2 v2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.SetVec2ArrayInt32">
            <summary>Sets the shim of PolygonShape.Set(Vec2[] vertices, Int32 count)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.TestPointXFormVec2">
            <summary>Sets the shim of PolygonShape.TestPoint(XForm xf, Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.VertexCountGet">
            <summary>Sets the shim of PolygonShape.get_VertexCount()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.VerticesGet">
            <summary>Sets the shim of PolygonShape.get_Vertices()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.ComputeAABBAABBOutXForm">
            <summary>Sets the shim of PolygonShape.ComputeAABB(AABB&amp; aabb, XForm xf)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.ComputeMassMassDataOutSingle">
            <summary>Sets the shim of PolygonShape.ComputeMass(MassData&amp; massData, Single denstity)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the shim of PolygonShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.ComputeSweepRadiusVec2">
            <summary>Sets the shim of PolygonShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.GetSupportVec2">
            <summary>Sets the shim of PolygonShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.GetSupportVertexVec2">
            <summary>Sets the shim of PolygonShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.GetVertexInt32">
            <summary>Sets the shim of PolygonShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.SetAsBoxSingleSingle">
            <summary>Sets the shim of PolygonShape.SetAsBox(Single hx, Single hy)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.SetAsBoxSingleSingleVec2Single">
            <summary>Sets the shim of PolygonShape.SetAsBox(Single hx, Single hy, Vec2 center, Single angle)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.SetAsEdgeVec2Vec2">
            <summary>Sets the shim of PolygonShape.SetAsEdge(Vec2 v1, Vec2 v2)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.SetVec2ArrayInt32">
            <summary>Sets the shim of PolygonShape.Set(Vec2[] vertices, Int32 count)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.TestPointXFormVec2">
            <summary>Sets the shim of PolygonShape.TestPoint(XForm xf, Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the shim of PolygonShape.TestSegment(XForm xf, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.VertexCountGet">
            <summary>Sets the shim of PolygonShape.get_VertexCount()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimPolygonShape.AllInstances.VerticesGet">
            <summary>Sets the shim of PolygonShape.get_Vertices()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimProxy">
            <summary>Shim type of Box2DX.Collision.Proxy</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimProxy.#ctor(Box2DX.Collision.Proxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.Constructor">
            <summary>Sets the shim of Proxy.Proxy()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.IsValidGet">
            <summary>Sets the shim of Proxy.get_IsValid()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.NextGet">
            <summary>Sets the shim of Proxy.get_Next()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.NextSetUInt16">
            <summary>Sets the shim of Proxy.set_Next(UInt16 value)</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.AllInstances.IsValidGet">
            <summary>Sets the shim of Proxy.get_IsValid()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.AllInstances.NextGet">
            <summary>Sets the shim of Proxy.get_Next()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimProxy.AllInstances.NextSetUInt16">
            <summary>Sets the shim of Proxy.set_Next(UInt16 value)</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimRayCastInput">
            <summary>Shim type of Box2DX.Collision.RayCastInput</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimRayCastInput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimRayCastInput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimRayCastInput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimRayCastInput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimRayCastInput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimRayCastOutput">
            <summary>Shim type of Box2DX.Collision.RayCastOutput</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimRayCastOutput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimRayCastOutput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimRayCastOutput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimRayCastOutput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimRayCastOutput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimSegment">
            <summary>Shim type of Box2DX.Collision.Segment</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimSegment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimSegment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimSegment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimSegment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimSegment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimShape">
            <summary>Shim type of Box2DX.Collision.Shape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimShape.#ctor(Box2DX.Collision.Shape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimShape.Constructor">
            <summary>Sets the shim of Shape.Shape()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimShape.Dispose">
            <summary>Sets the shim of Shape.Dispose()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimShape.AllInstances.Dispose">
            <summary>Sets the shim of Shape.Dispose()</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimSimplexCache">
            <summary>Shim type of Box2DX.Collision.SimplexCache</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimSimplexCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimSimplexCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimSimplexCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimSimplexCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimSimplexCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimTOIInput">
            <summary>Shim type of Box2DX.Collision.TOIInput</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimTOIInput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimTOIInput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimTOIInput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimTOIInput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimTOIInput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimWorldManifold">
            <summary>Shim type of Box2DX.Collision.WorldManifold</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimWorldManifold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimWorldManifold.#ctor(Box2DX.Collision.WorldManifold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimWorldManifold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.ShimWorldManifold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimWorldManifold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimWorldManifold.Clone">
            <summary>Sets the shim of WorldManifold.Clone()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimWorldManifold.Constructor">
            <summary>Sets the shim of WorldManifold.WorldManifold()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimWorldManifold.InitializeManifoldXFormSingleXFormSingle">
            <summary>Sets the shim of WorldManifold.Initialize(Manifold manifold, XForm xfA, Single radiusA, XForm xfB, Single radiusB)</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.ShimWorldManifold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimWorldManifold.AllInstances.Clone">
            <summary>Sets the shim of WorldManifold.Clone()</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.ShimWorldManifold.AllInstances.InitializeManifoldXFormSingleXFormSingle">
            <summary>Sets the shim of WorldManifold.Initialize(Manifold manifold, XForm xfA, Single radiusA, XForm xfB, Single radiusB)</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubBound">
            <summary>Stub type of Box2DX.Collision.Bound</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubBound.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubBound.InitializeStub">
            <summary>Initializes a new instance of type StubBound</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBound.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBound.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBound.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubBoundValues">
            <summary>Stub type of Box2DX.Collision.BoundValues</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubBoundValues.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubBoundValues.InitializeStub">
            <summary>Initializes a new instance of type StubBoundValues</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBoundValues.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBoundValues.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBoundValues.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubBroadPhase">
            <summary>Stub type of Box2DX.Collision.BroadPhase</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubBroadPhase.#ctor(Box2DX.Collision.AABB,Box2DX.Collision.PairCallback)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubBroadPhase.InitializeStub">
            <summary>Initializes a new instance of type StubBroadPhase</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBroadPhase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBroadPhase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubBroadPhase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubCircleShape">
            <summary>Stub type of Box2DX.Collision.CircleShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.ComputeAABB(Box2DX.Collision.AABB@,Box2DX.Common.XForm)">
            <summary>Sets the stub of CircleShape.ComputeAABB(AABB&amp; aabb, XForm transform)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.ComputeAABBAABBOutXForm">
            <summary>Sets the stub of CircleShape.ComputeAABB(AABB&amp; aabb, XForm transform)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.ComputeMass(Box2DX.Collision.MassData@,System.Single)">
            <summary>Sets the stub of CircleShape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.ComputeMassMassDataOutSingle">
            <summary>Sets the stub of CircleShape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.ComputeSubmergedArea(Box2DX.Common.Vec2,System.Single,Box2DX.Common.XForm,Box2DX.Common.Vec2@)">
            <summary>Sets the stub of CircleShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the stub of CircleShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.ComputeSweepRadius(Box2DX.Common.Vec2)">
            <summary>Sets the stub of CircleShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.ComputeSweepRadiusVec2">
            <summary>Sets the stub of CircleShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.Dispose">
            <summary>Sets the stub of Shape.Dispose()</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.Dispose01">
            <summary>Sets the stub of Shape.Dispose()</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.GetSupport(Box2DX.Common.Vec2)">
            <summary>Sets the stub of CircleShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.GetSupportVec2">
            <summary>Sets the stub of CircleShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.GetSupportVertex(Box2DX.Common.Vec2)">
            <summary>Sets the stub of CircleShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.GetSupportVertexVec2">
            <summary>Sets the stub of CircleShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.GetVertex(System.Int32)">
            <summary>Sets the stub of CircleShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.GetVertexInt32">
            <summary>Sets the stub of CircleShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.InitializeStub">
            <summary>Initializes a new instance of type StubCircleShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.TestPoint(Box2DX.Common.XForm,Box2DX.Common.Vec2)">
            <summary>Sets the stub of CircleShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.TestPointXFormVec2">
            <summary>Sets the stub of CircleShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCircleShape.TestSegment(Box2DX.Common.XForm,System.Single@,Box2DX.Common.Vec2@,Box2DX.Collision.Segment,System.Single)">
            <summary>Sets the stub of CircleShape.TestSegment(XForm transform, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubCircleShape.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the stub of CircleShape.TestSegment(XForm transform, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubCircleShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubCircleShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubCircleShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubCollision">
            <summary>Stub type of Box2DX.Collision.Collision</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCollision.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubCollision.InitializeStub">
            <summary>Initializes a new instance of type StubCollision</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubCollision.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubCollision.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubCollision.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubEdgeShape">
            <summary>Stub type of Box2DX.Collision.EdgeShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.ComputeAABB(Box2DX.Collision.AABB@,Box2DX.Common.XForm)">
            <summary>Sets the stub of EdgeShape.ComputeAABB(AABB&amp; aabb, XForm transform)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.ComputeAABBAABBOutXForm">
            <summary>Sets the stub of EdgeShape.ComputeAABB(AABB&amp; aabb, XForm transform)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.ComputeMass(Box2DX.Collision.MassData@,System.Single)">
            <summary>Sets the stub of EdgeShape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.ComputeMassMassDataOutSingle">
            <summary>Sets the stub of EdgeShape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.ComputeSubmergedArea(Box2DX.Common.Vec2,System.Single,Box2DX.Common.XForm,Box2DX.Common.Vec2@)">
            <summary>Sets the stub of EdgeShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the stub of EdgeShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.ComputeSweepRadius(Box2DX.Common.Vec2)">
            <summary>Sets the stub of EdgeShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.ComputeSweepRadiusVec2">
            <summary>Sets the stub of EdgeShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.Dispose">
            <summary>Sets the stub of EdgeShape.Dispose()</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.Dispose01">
            <summary>Sets the stub of EdgeShape.Dispose()</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.GetSupport(Box2DX.Common.Vec2)">
            <summary>Sets the stub of EdgeShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.GetSupportVec2">
            <summary>Sets the stub of EdgeShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.GetSupportVertex(Box2DX.Common.Vec2)">
            <summary>Sets the stub of EdgeShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.GetSupportVertexVec2">
            <summary>Sets the stub of EdgeShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.GetVertex(System.Int32)">
            <summary>Sets the stub of EdgeShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.GetVertexInt32">
            <summary>Sets the stub of EdgeShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.InitializeStub">
            <summary>Initializes a new instance of type StubEdgeShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.TestPoint(Box2DX.Common.XForm,Box2DX.Common.Vec2)">
            <summary>Sets the stub of EdgeShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.TestPointXFormVec2">
            <summary>Sets the stub of EdgeShape.TestPoint(XForm transform, Vec2 p)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubEdgeShape.TestSegment(Box2DX.Common.XForm,System.Single@,Box2DX.Common.Vec2@,Box2DX.Collision.Segment,System.Single)">
            <summary>Sets the stub of EdgeShape.TestSegment(XForm transform, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubEdgeShape.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the stub of EdgeShape.TestSegment(XForm transform, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubEdgeShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubEdgeShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubEdgeShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubManifold">
            <summary>Stub type of Box2DX.Collision.Manifold</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubManifold.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubManifold.InitializeStub">
            <summary>Initializes a new instance of type StubManifold</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubManifold.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubManifold.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubManifold.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubManifoldPoint">
            <summary>Stub type of Box2DX.Collision.ManifoldPoint</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubManifoldPoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubManifoldPoint.InitializeStub">
            <summary>Initializes a new instance of type StubManifoldPoint</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubManifoldPoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubManifoldPoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubManifoldPoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubPair">
            <summary>Stub type of Box2DX.Collision.Pair</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPair.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPair.InitializeStub">
            <summary>Initializes a new instance of type StubPair</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPair.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPair.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPair.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubPairCallback">
            <summary>Stub type of Box2DX.Collision.PairCallback</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPairCallback.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPairCallback.InitializeStub">
            <summary>Initializes a new instance of type StubPairCallback</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPairCallback.PairAdded(System.Object,System.Object)">
            <summary>Sets the stub of PairCallback.PairAdded(Object proxyUserData1, Object proxyUserData2)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPairCallback.PairAddedObjectObject">
            <summary>Sets the stub of PairCallback.PairAdded(Object proxyUserData1, Object proxyUserData2)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPairCallback.PairRemoved(System.Object,System.Object,System.Object)">
            <summary>Sets the stub of PairCallback.PairRemoved(Object proxyUserData1, Object proxyUserData2, Object pairUserData)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPairCallback.PairRemovedObjectObjectObject">
            <summary>Sets the stub of PairCallback.PairRemoved(Object proxyUserData1, Object proxyUserData2, Object pairUserData)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPairCallback.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPairCallback.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPairCallback.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubPairManager">
            <summary>Stub type of Box2DX.Collision.PairManager</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPairManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPairManager.InitializeStub">
            <summary>Initializes a new instance of type StubPairManager</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPairManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPairManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPairManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubPolygonShape">
            <summary>Stub type of Box2DX.Collision.PolygonShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.ComputeAABB(Box2DX.Collision.AABB@,Box2DX.Common.XForm)">
            <summary>Sets the stub of PolygonShape.ComputeAABB(AABB&amp; aabb, XForm xf)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.ComputeAABBAABBOutXForm">
            <summary>Sets the stub of PolygonShape.ComputeAABB(AABB&amp; aabb, XForm xf)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.ComputeMass(Box2DX.Collision.MassData@,System.Single)">
            <summary>Sets the stub of PolygonShape.ComputeMass(MassData&amp; massData, Single denstity)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.ComputeMassMassDataOutSingle">
            <summary>Sets the stub of PolygonShape.ComputeMass(MassData&amp; massData, Single denstity)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.ComputeSubmergedArea(Box2DX.Common.Vec2,System.Single,Box2DX.Common.XForm,Box2DX.Common.Vec2@)">
            <summary>Sets the stub of PolygonShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the stub of PolygonShape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.ComputeSweepRadius(Box2DX.Common.Vec2)">
            <summary>Sets the stub of PolygonShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.ComputeSweepRadiusVec2">
            <summary>Sets the stub of PolygonShape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.Dispose">
            <summary>Sets the stub of Shape.Dispose()</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.Dispose01">
            <summary>Sets the stub of Shape.Dispose()</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.GetSupport(Box2DX.Common.Vec2)">
            <summary>Sets the stub of PolygonShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.GetSupportVec2">
            <summary>Sets the stub of PolygonShape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.GetSupportVertex(Box2DX.Common.Vec2)">
            <summary>Sets the stub of PolygonShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.GetSupportVertexVec2">
            <summary>Sets the stub of PolygonShape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.GetVertex(System.Int32)">
            <summary>Sets the stub of PolygonShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.GetVertexInt32">
            <summary>Sets the stub of PolygonShape.GetVertex(Int32 index)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.InitializeStub">
            <summary>Initializes a new instance of type StubPolygonShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.TestPoint(Box2DX.Common.XForm,Box2DX.Common.Vec2)">
            <summary>Sets the stub of PolygonShape.TestPoint(XForm xf, Vec2 p)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.TestPointXFormVec2">
            <summary>Sets the stub of PolygonShape.TestPoint(XForm xf, Vec2 p)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubPolygonShape.TestSegment(Box2DX.Common.XForm,System.Single@,Box2DX.Common.Vec2@,Box2DX.Collision.Segment,System.Single)">
            <summary>Sets the stub of PolygonShape.TestSegment(XForm xf, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubPolygonShape.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the stub of PolygonShape.TestSegment(XForm xf, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPolygonShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPolygonShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubPolygonShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubProxy">
            <summary>Stub type of Box2DX.Collision.Proxy</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubProxy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubProxy.InitializeStub">
            <summary>Initializes a new instance of type StubProxy</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubShape">
            <summary>Stub type of Box2DX.Collision.Shape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.ComputeAABB(Box2DX.Collision.AABB@,Box2DX.Common.XForm)">
            <summary>Sets the stub of Shape.ComputeAABB(AABB&amp; aabb, XForm xf)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.ComputeAABBAABBOutXForm">
            <summary>Sets the stub of Shape.ComputeAABB(AABB&amp; aabb, XForm xf)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.ComputeMass(Box2DX.Collision.MassData@,System.Single)">
            <summary>Sets the stub of Shape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.ComputeMassMassDataOutSingle">
            <summary>Sets the stub of Shape.ComputeMass(MassData&amp; massData, Single density)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.ComputeSubmergedArea(Box2DX.Common.Vec2,System.Single,Box2DX.Common.XForm,Box2DX.Common.Vec2@)">
            <summary>Sets the stub of Shape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.ComputeSubmergedAreaVec2SingleXFormVec2Out">
            <summary>Sets the stub of Shape.ComputeSubmergedArea(Vec2 normal, Single offset, XForm xf, Vec2&amp; c)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.ComputeSweepRadius(Box2DX.Common.Vec2)">
            <summary>Sets the stub of Shape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.ComputeSweepRadiusVec2">
            <summary>Sets the stub of Shape.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.Dispose">
            <summary>Sets the stub of Shape.Dispose()</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.Dispose01">
            <summary>Sets the stub of Shape.Dispose()</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.GetSupport(Box2DX.Common.Vec2)">
            <summary>Sets the stub of Shape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.GetSupportVec2">
            <summary>Sets the stub of Shape.GetSupport(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.GetSupportVertex(Box2DX.Common.Vec2)">
            <summary>Sets the stub of Shape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.GetSupportVertexVec2">
            <summary>Sets the stub of Shape.GetSupportVertex(Vec2 d)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.GetVertex(System.Int32)">
            <summary>Sets the stub of Shape.GetVertex(Int32 index)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.GetVertexInt32">
            <summary>Sets the stub of Shape.GetVertex(Int32 index)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.InitializeStub">
            <summary>Initializes a new instance of type StubShape</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.TestPoint(Box2DX.Common.XForm,Box2DX.Common.Vec2)">
            <summary>Sets the stub of Shape.TestPoint(XForm xf, Vec2 p)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.TestPointXFormVec2">
            <summary>Sets the stub of Shape.TestPoint(XForm xf, Vec2 p)</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubShape.TestSegment(Box2DX.Common.XForm,System.Single@,Box2DX.Common.Vec2@,Box2DX.Collision.Segment,System.Single)">
            <summary>Sets the stub of Shape.TestSegment(XForm xf, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="F:Box2DX.Collision.Fakes.StubShape.TestSegmentXFormSingleOutVec2OutSegmentSingle">
            <summary>Sets the stub of Shape.TestSegment(XForm xf, Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Collision.Fakes.StubWorldManifold">
            <summary>Stub type of Box2DX.Collision.WorldManifold</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubWorldManifold.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Collision.Fakes.StubWorldManifold.InitializeStub">
            <summary>Initializes a new instance of type StubWorldManifold</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubWorldManifold.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubWorldManifold.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Collision.Fakes.StubWorldManifold.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMat22">
            <summary>Shim type of Box2DX.Common.Mat22</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMat22.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMat22.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMat22.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMat22.AdditionOpMat22Mat22">
            <summary>Sets the shim of Mat22.op_Addition(Mat22 A, Mat22 B)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMat22.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMat22.IdentityGet">
            <summary>Sets the shim of Mat22.get_Identity()</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMat22.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMat33">
            <summary>Shim type of Box2DX.Common.Mat33</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMat33.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMat33.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMat33.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMat33.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMat33.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMath">
            <summary>Shim type of Box2DX.Common.Math</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.#ctor(Box2DX.Common.Math)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.SwapOf1M0RefM0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefRefAction{``0,``0})">
            <summary>Sets the shim of Math.Swap(!!0&amp; a, !!0&amp; b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.AbsMat22">
            <summary>Sets the shim of Math.Abs(Mat22 A)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.AbsSingle">
            <summary>Sets the shim of Math.Abs(Single a)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.AbsVec2">
            <summary>Sets the shim of Math.Abs(Vec2 a)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.Atan2SingleSingle">
            <summary>Sets the shim of Math.Atan2(Single y, Single x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.ClampInt32Int32Int32">
            <summary>Sets the shim of Math.Clamp(Int32 a, Int32 low, Int32 high)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.ClampSingleSingleSingle">
            <summary>Sets the shim of Math.Clamp(Single a, Single low, Single high)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.ClampVec2Vec2Vec2">
            <summary>Sets the shim of Math.Clamp(Vec2 a, Vec2 low, Vec2 high)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.Constructor">
            <summary>Sets the shim of Math.Math()</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.InvSqrtSingle">
            <summary>Sets the shim of Math.InvSqrt(Single x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.IsPowerOfTwoUInt32">
            <summary>Sets the shim of Math.IsPowerOfTwo(UInt32 x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.IsValidSingle">
            <summary>Sets the shim of Math.IsValid(Single x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MaxInt32Int32">
            <summary>Sets the shim of Math.Max(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MaxSingleSingle">
            <summary>Sets the shim of Math.Max(Single a, Single b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MaxVec2Vec2">
            <summary>Sets the shim of Math.Max(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MinInt32Int32">
            <summary>Sets the shim of Math.Min(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MinSingleSingle">
            <summary>Sets the shim of Math.Min(Single a, Single b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MinVec2Vec2">
            <summary>Sets the shim of Math.Min(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulMat22Mat22">
            <summary>Sets the shim of Math.Mul(Mat22 A, Mat22 B)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulMat22Vec2">
            <summary>Sets the shim of Math.Mul(Mat22 A, Vec2 v)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulMat33Vec3">
            <summary>Sets the shim of Math.Mul(Mat33 A, Vec3 v)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulTMat22Mat22">
            <summary>Sets the shim of Math.MulT(Mat22 A, Mat22 B)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulTMat22Vec2">
            <summary>Sets the shim of Math.MulT(Mat22 A, Vec2 v)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulTXFormVec2">
            <summary>Sets the shim of Math.MulT(XForm T, Vec2 v)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.MulXFormVec2">
            <summary>Sets the shim of Math.Mul(XForm T, Vec2 v)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.NextPowerOfTwoUInt32">
            <summary>Sets the shim of Math.NextPowerOfTwo(UInt32 x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.Random">
            <summary>Sets the shim of Math.Random()</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.RandomSingleSingle">
            <summary>Sets the shim of Math.Random(Single lo, Single hi)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.SqrtSingle">
            <summary>Sets the shim of Math.Sqrt(Single x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.StaticConstructor">
            <summary>Sets the shim of Math.Math()</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMath.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMath.ShimConvert">
            <summary>Shim type of Box2DX.Common.Math+Convert</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.ShimConvert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.ShimConvert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimMath.ShimConvert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimMath.ShimConvert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimMath.ShimConvert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimSettings">
            <summary>Shim type of Box2DX.Common.Settings</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSettings.#ctor(Box2DX.Common.Settings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.Constructor">
            <summary>Sets the shim of Settings.Settings()</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.FORCE_INV_SCALESingle">
            <summary>Sets the shim of Settings.FORCE_INV_SCALE(Single x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.FORCE_SCALESingle">
            <summary>Sets the shim of Settings.FORCE_SCALE(Single x)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.MixFrictionSingleSingle">
            <summary>Sets the shim of Settings.MixFriction(Single friction1, Single friction2)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.MixRestitutionSingleSingle">
            <summary>Sets the shim of Settings.MixRestitution(Single restitution1, Single restitution2)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSettings.StaticConstructor">
            <summary>Sets the shim of Settings.Settings()</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimSweep">
            <summary>Shim type of Box2DX.Common.Sweep</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSweep.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSweep.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimSweep.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimSweep.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimSweep.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimVec2">
            <summary>Shim type of Box2DX.Common.Vec2</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimVec2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimVec2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimVec2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.AdditionOpVec2Vec2">
            <summary>Sets the shim of Vec2.op_Addition(Vec2 v1, Vec2 v2)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.CrossSingleVec2">
            <summary>Sets the shim of Vec2.Cross(Single s, Vec2 a)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.CrossVec2Single">
            <summary>Sets the shim of Vec2.Cross(Vec2 a, Single s)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.CrossVec2Vec2">
            <summary>Sets the shim of Vec2.Cross(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.DistanceSquaredVec2Vec2">
            <summary>Sets the shim of Vec2.DistanceSquared(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.DistanceVec2Vec2">
            <summary>Sets the shim of Vec2.Distance(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.DotVec2Vec2">
            <summary>Sets the shim of Vec2.Dot(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.EqualityOpVec2Vec2">
            <summary>Sets the shim of Vec2.op_Equality(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.InequalityOpVec2Vec2">
            <summary>Sets the shim of Vec2.op_Inequality(Vec2 a, Vec2 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.MultiplyOpSingleVec2">
            <summary>Sets the shim of Vec2.op_Multiply(Single a, Vec2 v1)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.MultiplyOpVec2Single">
            <summary>Sets the shim of Vec2.op_Multiply(Vec2 v1, Single a)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.SubtractionOpVec2Vec2">
            <summary>Sets the shim of Vec2.op_Subtraction(Vec2 v1, Vec2 v2)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.UnaryNegationOpVec2">
            <summary>Sets the shim of Vec2.op_UnaryNegation(Vec2 v1)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec2.ZeroGet">
            <summary>Sets the shim of Vec2.get_Zero()</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimVec2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimVec3">
            <summary>Shim type of Box2DX.Common.Vec3</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimVec3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimVec3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimVec3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.AdditionOpVec3Vec3">
            <summary>Sets the shim of Vec3.op_Addition(Vec3 v1, Vec3 v2)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.CrossVec3Vec3">
            <summary>Sets the shim of Vec3.Cross(Vec3 a, Vec3 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.DotVec3Vec3">
            <summary>Sets the shim of Vec3.Dot(Vec3 a, Vec3 b)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.MultiplyOpSingleVec3">
            <summary>Sets the shim of Vec3.op_Multiply(Single s, Vec3 v)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.MultiplyOpVec3Single">
            <summary>Sets the shim of Vec3.op_Multiply(Vec3 v, Single s)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.SubtractionOpVec3Vec3">
            <summary>Sets the shim of Vec3.op_Subtraction(Vec3 v1, Vec3 v2)</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimVec3.UnaryNegationOpVec3">
            <summary>Sets the shim of Vec3.op_UnaryNegation(Vec3 v)</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimVec3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimXForm">
            <summary>Shim type of Box2DX.Common.XForm</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimXForm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimXForm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.ShimXForm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimXForm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.ShimXForm.IdentityGet">
            <summary>Sets the shim of XForm.get_Identity()</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.ShimXForm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.StubMath">
            <summary>Stub type of Box2DX.Common.Math</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.StubMath.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.StubMath.InitializeStub">
            <summary>Initializes a new instance of type StubMath</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.StubMath.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.StubMath.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.StubMath.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Common.Fakes.StubSettings">
            <summary>Stub type of Box2DX.Common.Settings</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.StubSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Common.Fakes.StubSettings.InitializeStub">
            <summary>Initializes a new instance of type StubSettings</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.StubSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.StubSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Common.Fakes.StubSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController">
            <summary>Shim type of Box2DX.Dynamics.Controllers.BuoyancyController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.#ctor(Box2DX.Dynamics.Controllers.BuoyancyController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.ConstructorBuoyancyControllerDef">
            <summary>Sets the shim of BuoyancyController.BuoyancyController(BuoyancyControllerDef buoyancyControllerDef)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.DrawDebugDraw">
            <summary>Sets the shim of BuoyancyController.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.StepTimeStep">
            <summary>Sets the shim of BuoyancyController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.AllInstances.DrawDebugDraw">
            <summary>Sets the shim of BuoyancyController.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyController.AllInstances.StepTimeStep">
            <summary>Sets the shim of BuoyancyController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef">
            <summary>Shim type of Box2DX.Dynamics.Controllers.BuoyancyControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.#ctor(Box2DX.Dynamics.Controllers.BuoyancyControllerDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.Constructor">
            <summary>Sets the shim of BuoyancyControllerDef.BuoyancyControllerDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimBuoyancyControllerDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController">
            <summary>Shim type of Box2DX.Dynamics.Controllers.ConstantAccelController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.#ctor(Box2DX.Dynamics.Controllers.ConstantAccelController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.ConstructorConstantAccelControllerDef">
            <summary>Sets the shim of ConstantAccelController.ConstantAccelController(ConstantAccelControllerDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.StepTimeStep">
            <summary>Sets the shim of ConstantAccelController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelController.AllInstances.StepTimeStep">
            <summary>Sets the shim of ConstantAccelController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef">
            <summary>Shim type of Box2DX.Dynamics.Controllers.ConstantAccelControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.#ctor(Box2DX.Dynamics.Controllers.ConstantAccelControllerDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.Constructor">
            <summary>Sets the shim of ConstantAccelControllerDef.ConstantAccelControllerDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantAccelControllerDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController">
            <summary>Shim type of Box2DX.Dynamics.Controllers.ConstantForceController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.#ctor(Box2DX.Dynamics.Controllers.ConstantForceController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.ConstructorConstantForceControllerDef">
            <summary>Sets the shim of ConstantForceController.ConstantForceController(ConstantForceControllerDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.StepTimeStep">
            <summary>Sets the shim of ConstantForceController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceController.AllInstances.StepTimeStep">
            <summary>Sets the shim of ConstantForceController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef">
            <summary>Shim type of Box2DX.Dynamics.Controllers.ConstantForceControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.#ctor(Box2DX.Dynamics.Controllers.ConstantForceControllerDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.Constructor">
            <summary>Sets the shim of ConstantForceControllerDef.ConstantForceControllerDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimConstantForceControllerDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimController">
            <summary>Shim type of Box2DX.Dynamics.Controllers.Controller</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimController.#ctor(Box2DX.Dynamics.Controllers.Controller)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AddBodyBody">
            <summary>Sets the shim of Controller.AddBody(Body body)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.Clear">
            <summary>Sets the shim of Controller.Clear()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.Constructor">
            <summary>Sets the shim of Controller.Controller()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.ConstructorWorld">
            <summary>Sets the shim of Controller.Controller(World world)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.Dispose">
            <summary>Sets the shim of Controller.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.DrawDebugDraw">
            <summary>Sets the shim of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.GetBodyList">
            <summary>Sets the shim of Controller.GetBodyList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.GetNext">
            <summary>Sets the shim of Controller.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.GetWorld">
            <summary>Sets the shim of Controller.GetWorld()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.RemoveBodyBody">
            <summary>Sets the shim of Controller.RemoveBody(Body body)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.AddBodyBody">
            <summary>Sets the shim of Controller.AddBody(Body body)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.Clear">
            <summary>Sets the shim of Controller.Clear()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.Dispose">
            <summary>Sets the shim of Controller.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.DrawDebugDraw">
            <summary>Sets the shim of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.GetBodyList">
            <summary>Sets the shim of Controller.GetBodyList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.GetNext">
            <summary>Sets the shim of Controller.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.GetWorld">
            <summary>Sets the shim of Controller.GetWorld()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimController.AllInstances.RemoveBodyBody">
            <summary>Sets the shim of Controller.RemoveBody(Body body)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge">
            <summary>Shim type of Box2DX.Dynamics.Controllers.ControllerEdge</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.#ctor(Box2DX.Dynamics.Controllers.ControllerEdge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.Constructor">
            <summary>Sets the shim of ControllerEdge.ControllerEdge()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimControllerEdge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController">
            <summary>Shim type of Box2DX.Dynamics.Controllers.GravityController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.#ctor(Box2DX.Dynamics.Controllers.GravityController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.ConstructorGravityControllerDef">
            <summary>Sets the shim of GravityController.GravityController(GravityControllerDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.StepTimeStep">
            <summary>Sets the shim of GravityController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimGravityController.AllInstances.StepTimeStep">
            <summary>Sets the shim of GravityController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef">
            <summary>Shim type of Box2DX.Dynamics.Controllers.GravityControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.#ctor(Box2DX.Dynamics.Controllers.GravityControllerDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.Constructor">
            <summary>Sets the shim of GravityControllerDef.GravityControllerDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimGravityControllerDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController">
            <summary>Shim type of Box2DX.Dynamics.Controllers.TensorDampingController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.#ctor(Box2DX.Dynamics.Controllers.TensorDampingController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.Constructor">
            <summary>Sets the shim of TensorDampingController.TensorDampingController()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.SetAxisAlignedSingleSingle">
            <summary>Sets the shim of TensorDampingController.SetAxisAligned(Single xDamping, Single yDamping)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.StepTimeStep">
            <summary>Sets the shim of TensorDampingController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.AllInstances.SetAxisAlignedSingleSingle">
            <summary>Sets the shim of TensorDampingController.SetAxisAligned(Single xDamping, Single yDamping)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.ShimTensorDampingController.AllInstances.StepTimeStep">
            <summary>Sets the shim of TensorDampingController.Step(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef">
            <summary>Shim type of Box2DX.Dynamics.Controllers.b2TensorDampingControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.#ctor(Box2DX.Dynamics.Controllers.b2TensorDampingControllerDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.Constructor">
            <summary>Sets the shim of b2TensorDampingControllerDef.b2TensorDampingControllerDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.Shimb2TensorDampingControllerDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController">
            <summary>Stub type of Box2DX.Dynamics.Controllers.BuoyancyController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.#ctor(Box2DX.Dynamics.Controllers.BuoyancyControllerDef)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.Draw(Box2DX.Dynamics.DebugDraw)">
            <summary>Sets the stub of BuoyancyController.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.DrawDebugDraw">
            <summary>Sets the stub of BuoyancyController.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.InitializeStub">
            <summary>Initializes a new instance of type StubBuoyancyController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.Step(Box2DX.Dynamics.TimeStep)">
            <summary>Sets the stub of BuoyancyController.Step(TimeStep step)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.StepTimeStep">
            <summary>Sets the stub of BuoyancyController.Step(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyControllerDef">
            <summary>Stub type of Box2DX.Dynamics.Controllers.BuoyancyControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyControllerDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyControllerDef.InitializeStub">
            <summary>Initializes a new instance of type StubBuoyancyControllerDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyControllerDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyControllerDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubBuoyancyControllerDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController">
            <summary>Stub type of Box2DX.Dynamics.Controllers.ConstantAccelController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.#ctor(Box2DX.Dynamics.Controllers.ConstantAccelControllerDef)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.Draw(Box2DX.Dynamics.DebugDraw)">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.DrawDebugDraw">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.InitializeStub">
            <summary>Initializes a new instance of type StubConstantAccelController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.Step(Box2DX.Dynamics.TimeStep)">
            <summary>Sets the stub of ConstantAccelController.Step(TimeStep step)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.StepTimeStep">
            <summary>Sets the stub of ConstantAccelController.Step(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelControllerDef">
            <summary>Stub type of Box2DX.Dynamics.Controllers.ConstantAccelControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelControllerDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelControllerDef.InitializeStub">
            <summary>Initializes a new instance of type StubConstantAccelControllerDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelControllerDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelControllerDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantAccelControllerDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController">
            <summary>Stub type of Box2DX.Dynamics.Controllers.ConstantForceController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.#ctor(Box2DX.Dynamics.Controllers.ConstantForceControllerDef)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.Draw(Box2DX.Dynamics.DebugDraw)">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.DrawDebugDraw">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.InitializeStub">
            <summary>Initializes a new instance of type StubConstantForceController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.Step(Box2DX.Dynamics.TimeStep)">
            <summary>Sets the stub of ConstantForceController.Step(TimeStep step)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.StepTimeStep">
            <summary>Sets the stub of ConstantForceController.Step(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceControllerDef">
            <summary>Stub type of Box2DX.Dynamics.Controllers.ConstantForceControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceControllerDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceControllerDef.InitializeStub">
            <summary>Initializes a new instance of type StubConstantForceControllerDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceControllerDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceControllerDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubConstantForceControllerDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubController">
            <summary>Stub type of Box2DX.Dynamics.Controllers.Controller</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubController.#ctor(Box2DX.Dynamics.World)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubController.Draw(Box2DX.Dynamics.DebugDraw)">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubController.DrawDebugDraw">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubController.InitializeStub">
            <summary>Initializes a new instance of type StubController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubController.Step(Box2DX.Dynamics.TimeStep)">
            <summary>Sets the stub of Controller.Step(TimeStep step)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubController.StepTimeStep">
            <summary>Sets the stub of Controller.Step(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubControllerEdge">
            <summary>Stub type of Box2DX.Dynamics.Controllers.ControllerEdge</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubControllerEdge.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubControllerEdge.InitializeStub">
            <summary>Initializes a new instance of type StubControllerEdge</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubControllerEdge.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubControllerEdge.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubControllerEdge.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubGravityController">
            <summary>Stub type of Box2DX.Dynamics.Controllers.GravityController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.#ctor(Box2DX.Dynamics.Controllers.GravityControllerDef)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.Draw(Box2DX.Dynamics.DebugDraw)">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.DrawDebugDraw">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.InitializeStub">
            <summary>Initializes a new instance of type StubGravityController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.Step(Box2DX.Dynamics.TimeStep)">
            <summary>Sets the stub of GravityController.Step(TimeStep step)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.StepTimeStep">
            <summary>Sets the stub of GravityController.Step(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubGravityController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubGravityControllerDef">
            <summary>Stub type of Box2DX.Dynamics.Controllers.GravityControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubGravityControllerDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubGravityControllerDef.InitializeStub">
            <summary>Initializes a new instance of type StubGravityControllerDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubGravityControllerDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubGravityControllerDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubGravityControllerDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController">
            <summary>Stub type of Box2DX.Dynamics.Controllers.TensorDampingController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.Draw(Box2DX.Dynamics.DebugDraw)">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.DrawDebugDraw">
            <summary>Sets the stub of Controller.Draw(DebugDraw debugDraw)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.InitializeStub">
            <summary>Initializes a new instance of type StubTensorDampingController</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.Step(Box2DX.Dynamics.TimeStep)">
            <summary>Sets the stub of TensorDampingController.Step(TimeStep step)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.StepTimeStep">
            <summary>Sets the stub of TensorDampingController.Step(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.StubTensorDampingController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Controllers.Fakes.Stubb2TensorDampingControllerDef">
            <summary>Stub type of Box2DX.Dynamics.Controllers.b2TensorDampingControllerDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.Stubb2TensorDampingControllerDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Controllers.Fakes.Stubb2TensorDampingControllerDef.InitializeStub">
            <summary>Initializes a new instance of type Stubb2TensorDampingControllerDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.Stubb2TensorDampingControllerDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.Stubb2TensorDampingControllerDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Controllers.Fakes.Stubb2TensorDampingControllerDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimBody">
            <summary>Shim type of Box2DX.Dynamics.Body</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBody.#ctor(Box2DX.Dynamics.Body)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBody.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AdvanceSingle">
            <summary>Sets the shim of Body.Advance(Single t)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllowSleepingBoolean">
            <summary>Sets the shim of Body.AllowSleeping(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.ApplyForceVec2Vec2">
            <summary>Sets the shim of Body.ApplyForce(Vec2 force, Vec2 point)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.ApplyImpulseVec2Vec2">
            <summary>Sets the shim of Body.ApplyImpulse(Vec2 impulse, Vec2 point)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.ApplyTorqueSingle">
            <summary>Sets the shim of Body.ApplyTorque(Single torque)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.ConstructorBodyDefWorld">
            <summary>Sets the shim of Body.Body(BodyDef bd, World world)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.CreateFixtureFixtureDef">
            <summary>Sets the shim of Body.CreateFixture(FixtureDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.DestroyFixtureFixture">
            <summary>Sets the shim of Body.DestroyFixture(Fixture fixture)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.Dispose">
            <summary>Sets the shim of Body.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetAngle">
            <summary>Sets the shim of Body.GetAngle()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetAngularDamping">
            <summary>Sets the shim of Body.GetAngularDamping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetAngularVelocity">
            <summary>Sets the shim of Body.GetAngularVelocity()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetControllerList">
            <summary>Sets the shim of Body.GetControllerList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetFixtureList">
            <summary>Sets the shim of Body.GetFixtureList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetInertia">
            <summary>Sets the shim of Body.GetInertia()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetJointList">
            <summary>Sets the shim of Body.GetJointList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLinearDamping">
            <summary>Sets the shim of Body.GetLinearDamping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLinearVelocity">
            <summary>Sets the shim of Body.GetLinearVelocity()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLinearVelocityFromLocalPointVec2">
            <summary>Sets the shim of Body.GetLinearVelocityFromLocalPoint(Vec2 localPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLinearVelocityFromWorldPointVec2">
            <summary>Sets the shim of Body.GetLinearVelocityFromWorldPoint(Vec2 worldPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLocalCenter">
            <summary>Sets the shim of Body.GetLocalCenter()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLocalPointVec2">
            <summary>Sets the shim of Body.GetLocalPoint(Vec2 worldPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetLocalVectorVec2">
            <summary>Sets the shim of Body.GetLocalVector(Vec2 worldVector)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetMass">
            <summary>Sets the shim of Body.GetMass()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetMassData">
            <summary>Sets the shim of Body.GetMassData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetNext">
            <summary>Sets the shim of Body.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetPosition">
            <summary>Sets the shim of Body.GetPosition()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetUserData">
            <summary>Sets the shim of Body.GetUserData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetWorld">
            <summary>Sets the shim of Body.GetWorld()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetWorldCenter">
            <summary>Sets the shim of Body.GetWorldCenter()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetWorldPointVec2">
            <summary>Sets the shim of Body.GetWorldPoint(Vec2 localPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetWorldVectorVec2">
            <summary>Sets the shim of Body.GetWorldVector(Vec2 localVector)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.GetXForm">
            <summary>Sets the shim of Body.GetXForm()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsAllowSleeping">
            <summary>Sets the shim of Body.IsAllowSleeping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsBullet">
            <summary>Sets the shim of Body.IsBullet()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsConnectedBody">
            <summary>Sets the shim of Body.IsConnected(Body other)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsDynamic">
            <summary>Sets the shim of Body.IsDynamic()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsFixedRotation">
            <summary>Sets the shim of Body.IsFixedRotation()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsFrozen">
            <summary>Sets the shim of Body.IsFrozen()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsSleeping">
            <summary>Sets the shim of Body.IsSleeping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.IsStatic">
            <summary>Sets the shim of Body.IsStatic()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.PutToSleep">
            <summary>Sets the shim of Body.PutToSleep()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetAngleSingle">
            <summary>Sets the shim of Body.SetAngle(Single angle)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetAngularDampingSingle">
            <summary>Sets the shim of Body.SetAngularDamping(Single angularDamping)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetAngularVelocitySingle">
            <summary>Sets the shim of Body.SetAngularVelocity(Single w)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetBulletBoolean">
            <summary>Sets the shim of Body.SetBullet(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetFixedRotationBoolean">
            <summary>Sets the shim of Body.SetFixedRotation(Boolean fixedr)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetLinearDampingSingle">
            <summary>Sets the shim of Body.SetLinearDamping(Single linearDamping)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetLinearVelocityVec2">
            <summary>Sets the shim of Body.SetLinearVelocity(Vec2 v)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetMassFromShapes">
            <summary>Sets the shim of Body.SetMassFromShapes()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetMassMassData">
            <summary>Sets the shim of Body.SetMass(MassData massData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetPositionVec2">
            <summary>Sets the shim of Body.SetPosition(Vec2 position)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetStatic">
            <summary>Sets the shim of Body.SetStatic()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetUserDataObject">
            <summary>Sets the shim of Body.SetUserData(Object data)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetXFormVec2Single">
            <summary>Sets the shim of Body.SetXForm(Vec2 position, Single angle)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SetXFormXForm">
            <summary>Sets the shim of Body.SetXForm(XForm xf)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SynchronizeFixtures">
            <summary>Sets the shim of Body.SynchronizeFixtures()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.SynchronizeTransform">
            <summary>Sets the shim of Body.SynchronizeTransform()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.WakeUp">
            <summary>Sets the shim of Body.WakeUp()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.AdvanceSingle">
            <summary>Sets the shim of Body.Advance(Single t)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.AllowSleepingBoolean">
            <summary>Sets the shim of Body.AllowSleeping(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.ApplyForceVec2Vec2">
            <summary>Sets the shim of Body.ApplyForce(Vec2 force, Vec2 point)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.ApplyImpulseVec2Vec2">
            <summary>Sets the shim of Body.ApplyImpulse(Vec2 impulse, Vec2 point)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.ApplyTorqueSingle">
            <summary>Sets the shim of Body.ApplyTorque(Single torque)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.CreateFixtureFixtureDef">
            <summary>Sets the shim of Body.CreateFixture(FixtureDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.DestroyFixtureFixture">
            <summary>Sets the shim of Body.DestroyFixture(Fixture fixture)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.Dispose">
            <summary>Sets the shim of Body.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetAngle">
            <summary>Sets the shim of Body.GetAngle()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetAngularDamping">
            <summary>Sets the shim of Body.GetAngularDamping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetAngularVelocity">
            <summary>Sets the shim of Body.GetAngularVelocity()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetControllerList">
            <summary>Sets the shim of Body.GetControllerList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetFixtureList">
            <summary>Sets the shim of Body.GetFixtureList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetInertia">
            <summary>Sets the shim of Body.GetInertia()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetJointList">
            <summary>Sets the shim of Body.GetJointList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLinearDamping">
            <summary>Sets the shim of Body.GetLinearDamping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLinearVelocity">
            <summary>Sets the shim of Body.GetLinearVelocity()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLinearVelocityFromLocalPointVec2">
            <summary>Sets the shim of Body.GetLinearVelocityFromLocalPoint(Vec2 localPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLinearVelocityFromWorldPointVec2">
            <summary>Sets the shim of Body.GetLinearVelocityFromWorldPoint(Vec2 worldPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLocalCenter">
            <summary>Sets the shim of Body.GetLocalCenter()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLocalPointVec2">
            <summary>Sets the shim of Body.GetLocalPoint(Vec2 worldPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetLocalVectorVec2">
            <summary>Sets the shim of Body.GetLocalVector(Vec2 worldVector)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetMass">
            <summary>Sets the shim of Body.GetMass()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetMassData">
            <summary>Sets the shim of Body.GetMassData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetNext">
            <summary>Sets the shim of Body.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetPosition">
            <summary>Sets the shim of Body.GetPosition()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetUserData">
            <summary>Sets the shim of Body.GetUserData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetWorld">
            <summary>Sets the shim of Body.GetWorld()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetWorldCenter">
            <summary>Sets the shim of Body.GetWorldCenter()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetWorldPointVec2">
            <summary>Sets the shim of Body.GetWorldPoint(Vec2 localPoint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetWorldVectorVec2">
            <summary>Sets the shim of Body.GetWorldVector(Vec2 localVector)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.GetXForm">
            <summary>Sets the shim of Body.GetXForm()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsAllowSleeping">
            <summary>Sets the shim of Body.IsAllowSleeping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsBullet">
            <summary>Sets the shim of Body.IsBullet()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsConnectedBody">
            <summary>Sets the shim of Body.IsConnected(Body other)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsDynamic">
            <summary>Sets the shim of Body.IsDynamic()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsFixedRotation">
            <summary>Sets the shim of Body.IsFixedRotation()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsFrozen">
            <summary>Sets the shim of Body.IsFrozen()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsSleeping">
            <summary>Sets the shim of Body.IsSleeping()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.IsStatic">
            <summary>Sets the shim of Body.IsStatic()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.PutToSleep">
            <summary>Sets the shim of Body.PutToSleep()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetAngleSingle">
            <summary>Sets the shim of Body.SetAngle(Single angle)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetAngularDampingSingle">
            <summary>Sets the shim of Body.SetAngularDamping(Single angularDamping)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetAngularVelocitySingle">
            <summary>Sets the shim of Body.SetAngularVelocity(Single w)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetBulletBoolean">
            <summary>Sets the shim of Body.SetBullet(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetFixedRotationBoolean">
            <summary>Sets the shim of Body.SetFixedRotation(Boolean fixedr)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetLinearDampingSingle">
            <summary>Sets the shim of Body.SetLinearDamping(Single linearDamping)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetLinearVelocityVec2">
            <summary>Sets the shim of Body.SetLinearVelocity(Vec2 v)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetMassFromShapes">
            <summary>Sets the shim of Body.SetMassFromShapes()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetMassMassData">
            <summary>Sets the shim of Body.SetMass(MassData massData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetPositionVec2">
            <summary>Sets the shim of Body.SetPosition(Vec2 position)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetStatic">
            <summary>Sets the shim of Body.SetStatic()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetUserDataObject">
            <summary>Sets the shim of Body.SetUserData(Object data)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetXFormVec2Single">
            <summary>Sets the shim of Body.SetXForm(Vec2 position, Single angle)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SetXFormXForm">
            <summary>Sets the shim of Body.SetXForm(XForm xf)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SynchronizeFixtures">
            <summary>Sets the shim of Body.SynchronizeFixtures()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.SynchronizeTransform">
            <summary>Sets the shim of Body.SynchronizeTransform()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBody.AllInstances.WakeUp">
            <summary>Sets the shim of Body.WakeUp()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimBodyDef">
            <summary>Shim type of Box2DX.Dynamics.BodyDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBodyDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBodyDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBodyDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBodyDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimBodyDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimBoundaryListener">
            <summary>Shim type of Box2DX.Dynamics.BoundaryListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBoundaryListener.#ctor(Box2DX.Dynamics.BoundaryListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBoundaryListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimBoundaryListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBoundaryListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimBoundaryListener.Constructor">
            <summary>Sets the shim of BoundaryListener.BoundaryListener()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimBoundaryListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimCircleContact">
            <summary>Shim type of Box2DX.Dynamics.CircleContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleContact.#ctor(Box2DX.Dynamics.CircleContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleContact.CollideCirclesManifoldRefShapeXFormShapeXForm">
            <summary>Sets the shim of CircleContact.CollideCircles(Manifold&amp; manifold, Shape shape1, XForm xf1, Shape shape2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleContact.ConstructorFixtureFixture">
            <summary>Sets the shim of CircleContact.CircleContact(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleContact.CreateFixtureFixture">
            <summary>Sets the shim of CircleContact.Create(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleContact.DestroyContactRef">
            <summary>Sets the shim of CircleContact.Destroy(Contact&amp; contact)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimCircleContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimCircleDef">
            <summary>Shim type of Box2DX.Dynamics.CircleDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleDef.#ctor(Box2DX.Dynamics.CircleDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimCircleDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimCircleDef.Constructor">
            <summary>Sets the shim of CircleDef.CircleDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimCircleDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimColor">
            <summary>Shim type of Box2DX.Dynamics.Color</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimColor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimColor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimColor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimColor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimColor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContact">
            <summary>Shim type of Box2DX.Dynamics.Contact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContact.#ctor(Box2DX.Dynamics.Contact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AddTypeContactCreateFcnContactDestroyFcnShapeTypeShapeType">
            <summary>Sets the shim of Contact.AddType(ContactCreateFcn createFcn, ContactDestroyFcn destoryFcn, ShapeType type1, ShapeType type2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AreTouchingGet">
            <summary>Sets the shim of Contact.get_AreTouching()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.ComputeTOISweepSweep">
            <summary>Sets the shim of Contact.ComputeTOI(Sweep sweepA, Sweep sweepB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.Constructor">
            <summary>Sets the shim of Contact.Contact()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.ConstructorFixtureFixture">
            <summary>Sets the shim of Contact.Contact(Fixture fA, Fixture fB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.CreateFixtureFixture">
            <summary>Sets the shim of Contact.Create(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.DestroyContactRef">
            <summary>Sets the shim of Contact.Destroy(Contact&amp; contact)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.Evaluate">
            <summary>Sets the shim of Contact.Evaluate()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.FixtureAGet">
            <summary>Sets the shim of Contact.get_FixtureA()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.FixtureBGet">
            <summary>Sets the shim of Contact.get_FixtureB()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.GetNext">
            <summary>Sets the shim of Contact.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.GetWorldManifoldWorldManifoldOut">
            <summary>Sets the shim of Contact.GetWorldManifold(WorldManifold&amp; worldManifold)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.InitializeRegisters">
            <summary>Sets the shim of Contact.InitializeRegisters()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.IsSolidGet">
            <summary>Sets the shim of Contact.get_IsSolid()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.ManifoldGet">
            <summary>Sets the shim of Contact.get_Manifold()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.StaticConstructor">
            <summary>Sets the shim of Contact.Contact()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.UpdateContactListener">
            <summary>Sets the shim of Contact.Update(ContactListener listener)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.AreTouchingGet">
            <summary>Sets the shim of Contact.get_AreTouching()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.ComputeTOISweepSweep">
            <summary>Sets the shim of Contact.ComputeTOI(Sweep sweepA, Sweep sweepB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.Evaluate">
            <summary>Sets the shim of Contact.Evaluate()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.FixtureAGet">
            <summary>Sets the shim of Contact.get_FixtureA()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.FixtureBGet">
            <summary>Sets the shim of Contact.get_FixtureB()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.GetNext">
            <summary>Sets the shim of Contact.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.GetWorldManifoldWorldManifoldOut">
            <summary>Sets the shim of Contact.GetWorldManifold(WorldManifold&amp; worldManifold)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.IsSolidGet">
            <summary>Sets the shim of Contact.get_IsSolid()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.ManifoldGet">
            <summary>Sets the shim of Contact.get_Manifold()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContact.AllInstances.UpdateContactListener">
            <summary>Sets the shim of Contact.Update(ContactListener listener)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactConstraint">
            <summary>Shim type of Box2DX.Dynamics.ContactConstraint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraint.#ctor(Box2DX.Dynamics.ContactConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactConstraint.Constructor">
            <summary>Sets the shim of ContactConstraint.ContactConstraint()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactConstraintPoint">
            <summary>Shim type of Box2DX.Dynamics.ContactConstraintPoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraintPoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraintPoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactConstraintPoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactConstraintPoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactConstraintPoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactEdge">
            <summary>Shim type of Box2DX.Dynamics.ContactEdge</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactEdge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactEdge.#ctor(Box2DX.Dynamics.ContactEdge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactEdge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactEdge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactEdge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactEdge.Constructor">
            <summary>Sets the shim of ContactEdge.ContactEdge()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactEdge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactFilter">
            <summary>Shim type of Box2DX.Dynamics.ContactFilter</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactFilter.#ctor(Box2DX.Dynamics.ContactFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactFilter.Constructor">
            <summary>Sets the shim of ContactFilter.ContactFilter()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactFilter.RayCollideObjectFixture">
            <summary>Sets the shim of ContactFilter.RayCollide(Object userData, Fixture fixture)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactFilter.ShouldCollideFixtureFixture">
            <summary>Sets the shim of ContactFilter.ShouldCollide(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactFilter.AllInstances.RayCollideObjectFixture">
            <summary>Sets the shim of ContactFilter.RayCollide(Object userData, Fixture fixture)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactFilter.AllInstances.ShouldCollideFixtureFixture">
            <summary>Sets the shim of ContactFilter.ShouldCollide(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactImpulse">
            <summary>Shim type of Box2DX.Dynamics.ContactImpulse</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactImpulse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactImpulse.#ctor(Box2DX.Dynamics.ContactImpulse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactImpulse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactImpulse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactImpulse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactImpulse.Constructor">
            <summary>Sets the shim of ContactImpulse.ContactImpulse()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactImpulse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactManager">
            <summary>Shim type of Box2DX.Dynamics.ContactManager</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactManager.#ctor(Box2DX.Dynamics.ContactManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.Collide">
            <summary>Sets the shim of ContactManager.Collide()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.Constructor">
            <summary>Sets the shim of ContactManager.ContactManager()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.DestroyContact">
            <summary>Sets the shim of ContactManager.Destroy(Contact c)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.PairAddedObjectObject">
            <summary>Sets the shim of ContactManager.PairAdded(Object proxyUserDataA, Object proxyUserDataB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.PairRemovedObjectObjectObject">
            <summary>Sets the shim of ContactManager.PairRemoved(Object proxyUserData1, Object proxyUserData2, Object pairUserData)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.AllInstances.Collide">
            <summary>Sets the shim of ContactManager.Collide()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.AllInstances.DestroyContact">
            <summary>Sets the shim of ContactManager.Destroy(Contact c)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.AllInstances.PairAddedObjectObject">
            <summary>Sets the shim of ContactManager.PairAdded(Object proxyUserDataA, Object proxyUserDataB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactManager.AllInstances.PairRemovedObjectObjectObject">
            <summary>Sets the shim of ContactManager.PairRemoved(Object proxyUserData1, Object proxyUserData2, Object pairUserData)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactRegister">
            <summary>Shim type of Box2DX.Dynamics.ContactRegister</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactRegister.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactRegister.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactRegister.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactRegister.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactRegister.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactSolver">
            <summary>Shim type of Box2DX.Dynamics.ContactSolver</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactSolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactSolver.#ctor(Box2DX.Dynamics.ContactSolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactSolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactSolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimContactSolver.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.ConstructorTimeStepContactArrayInt32">
            <summary>Sets the shim of ContactSolver.ContactSolver(TimeStep step, Contact[] contacts, Int32 contactCount)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.Dispose">
            <summary>Sets the shim of ContactSolver.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.FinalizeVelocityConstraints">
            <summary>Sets the shim of ContactSolver.FinalizeVelocityConstraints()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of ContactSolver.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.SolvePositionConstraintsSingle">
            <summary>Sets the shim of ContactSolver.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.SolveVelocityConstraints">
            <summary>Sets the shim of ContactSolver.SolveVelocityConstraints()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.StaticConstructor">
            <summary>Sets the shim of ContactSolver.ContactSolver()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimContactSolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.AllInstances.Dispose">
            <summary>Sets the shim of ContactSolver.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.AllInstances.FinalizeVelocityConstraints">
            <summary>Sets the shim of ContactSolver.FinalizeVelocityConstraints()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of ContactSolver.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of ContactSolver.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimContactSolver.AllInstances.SolveVelocityConstraints">
            <summary>Sets the shim of ContactSolver.SolveVelocityConstraints()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDebugDraw">
            <summary>Shim type of Box2DX.Dynamics.DebugDraw</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDebugDraw.#ctor(Box2DX.Dynamics.DebugDraw)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDebugDraw.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDebugDraw.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.AppendFlagsDebugDrawDrawFlags">
            <summary>Sets the shim of DebugDraw.AppendFlags(DrawFlags flags)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.ClearFlagsDebugDrawDrawFlags">
            <summary>Sets the shim of DebugDraw.ClearFlags(DrawFlags flags)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.Constructor">
            <summary>Sets the shim of DebugDraw.DebugDraw()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.FlagsGet">
            <summary>Sets the shim of DebugDraw.get_Flags()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.FlagsSetDebugDrawDrawFlags">
            <summary>Sets the shim of DebugDraw.set_Flags(DrawFlags value)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDebugDraw.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.AllInstances.AppendFlagsDebugDrawDrawFlags">
            <summary>Sets the shim of DebugDraw.AppendFlags(DrawFlags flags)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.AllInstances.ClearFlagsDebugDrawDrawFlags">
            <summary>Sets the shim of DebugDraw.ClearFlags(DrawFlags flags)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.AllInstances.FlagsGet">
            <summary>Sets the shim of DebugDraw.get_Flags()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDebugDraw.AllInstances.FlagsSetDebugDrawDrawFlags">
            <summary>Sets the shim of DebugDraw.set_Flags(DrawFlags value)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDestructionListener">
            <summary>Shim type of Box2DX.Dynamics.DestructionListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDestructionListener.#ctor(Box2DX.Dynamics.DestructionListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDestructionListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDestructionListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDestructionListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDestructionListener.Constructor">
            <summary>Sets the shim of DestructionListener.DestructionListener()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDestructionListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDistanceJoint">
            <summary>Shim type of Box2DX.Dynamics.DistanceJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJoint.#ctor(Box2DX.Dynamics.DistanceJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.Anchor1Get">
            <summary>Sets the shim of DistanceJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.Anchor2Get">
            <summary>Sets the shim of DistanceJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.ConstructorDistanceJointDef">
            <summary>Sets the shim of DistanceJoint.DistanceJoint(DistanceJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.GetReactionForceSingle">
            <summary>Sets the shim of DistanceJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of DistanceJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of DistanceJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of DistanceJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of DistanceJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of DistanceJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of DistanceJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of DistanceJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of DistanceJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of DistanceJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of DistanceJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of DistanceJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDistanceJointDef">
            <summary>Shim type of Box2DX.Dynamics.DistanceJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.#ctor(Box2DX.Dynamics.DistanceJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.Constructor">
            <summary>Sets the shim of DistanceJointDef.DistanceJointDef()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.InitializeBodyBodyVec2Vec2">
            <summary>Sets the shim of DistanceJointDef.Initialize(Body body1, Body body2, Vec2 anchor1, Vec2 anchor2)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimDistanceJointDef.AllInstances.InitializeBodyBodyVec2Vec2">
            <summary>Sets the shim of DistanceJointDef.Initialize(Body body1, Body body2, Vec2 anchor1, Vec2 anchor2)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact">
            <summary>Shim type of Box2DX.Dynamics.EdgeAndCircleContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.#ctor(Box2DX.Dynamics.EdgeAndCircleContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.CollideEdgeAndCircleManifoldRefShapeXFormShapeXForm">
            <summary>Sets the shim of EdgeAndCircleContact.CollideEdgeAndCircle(Manifold&amp; manifold, Shape shape1, XForm xf1, Shape shape2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.ConstructorFixtureFixture">
            <summary>Sets the shim of EdgeAndCircleContact.EdgeAndCircleContact(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.CreateFixtureFixture">
            <summary>Sets the shim of EdgeAndCircleContact.Create(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.DestroyContactRef">
            <summary>Sets the shim of EdgeAndCircleContact.Destroy(Contact&amp; contact)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimEdgeAndCircleContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimEdgeDef">
            <summary>Shim type of Box2DX.Dynamics.EdgeDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeDef.#ctor(Box2DX.Dynamics.EdgeDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimEdgeDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimEdgeDef.Constructor">
            <summary>Sets the shim of EdgeDef.EdgeDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimEdgeDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimFilterData">
            <summary>Shim type of Box2DX.Dynamics.FilterData</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFilterData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFilterData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFilterData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFilterData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimFilterData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimFixture">
            <summary>Shim type of Box2DX.Dynamics.Fixture</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixture.#ctor(Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.BodyGet">
            <summary>Sets the shim of Fixture.get_Body()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.ComputeMassMassDataOut">
            <summary>Sets the shim of Fixture.ComputeMass(MassData&amp; massData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.ComputeSubmergedAreaVec2SingleVec2Out">
            <summary>Sets the shim of Fixture.ComputeSubmergedArea(Vec2 normal, Single offset, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.ComputeSweepRadiusVec2">
            <summary>Sets the shim of Fixture.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.Constructor">
            <summary>Sets the shim of Fixture.Fixture()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.CreateBroadPhaseBodyXFormFixtureDef">
            <summary>Sets the shim of Fixture.Create(BroadPhase broadPhase, Body body, XForm xf, FixtureDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.DestroyBroadPhase">
            <summary>Sets the shim of Fixture.Destroy(BroadPhase broadPhase)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.Dispose">
            <summary>Sets the shim of Fixture.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.IsSensorGet">
            <summary>Sets the shim of Fixture.get_IsSensor()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.NextGet">
            <summary>Sets the shim of Fixture.get_Next()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.RefilterProxyBroadPhaseXForm">
            <summary>Sets the shim of Fixture.RefilterProxy(BroadPhase broadPhase, XForm transform)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.ShapeGet">
            <summary>Sets the shim of Fixture.get_Shape()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.ShapeTypeGet">
            <summary>Sets the shim of Fixture.get_ShapeType()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.SynchronizeBroadPhaseXFormXForm">
            <summary>Sets the shim of Fixture.Synchronize(BroadPhase broadPhase, XForm transform1, XForm transform2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.TestPointVec2">
            <summary>Sets the shim of Fixture.TestPoint(Vec2 p)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.BodyGet">
            <summary>Sets the shim of Fixture.get_Body()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.ComputeMassMassDataOut">
            <summary>Sets the shim of Fixture.ComputeMass(MassData&amp; massData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.ComputeSubmergedAreaVec2SingleVec2Out">
            <summary>Sets the shim of Fixture.ComputeSubmergedArea(Vec2 normal, Single offset, Vec2&amp; c)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.ComputeSweepRadiusVec2">
            <summary>Sets the shim of Fixture.ComputeSweepRadius(Vec2 pivot)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.CreateBroadPhaseBodyXFormFixtureDef">
            <summary>Sets the shim of Fixture.Create(BroadPhase broadPhase, Body body, XForm xf, FixtureDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.DestroyBroadPhase">
            <summary>Sets the shim of Fixture.Destroy(BroadPhase broadPhase)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.Dispose">
            <summary>Sets the shim of Fixture.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.IsSensorGet">
            <summary>Sets the shim of Fixture.get_IsSensor()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.NextGet">
            <summary>Sets the shim of Fixture.get_Next()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.RefilterProxyBroadPhaseXForm">
            <summary>Sets the shim of Fixture.RefilterProxy(BroadPhase broadPhase, XForm transform)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.ShapeGet">
            <summary>Sets the shim of Fixture.get_Shape()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.ShapeTypeGet">
            <summary>Sets the shim of Fixture.get_ShapeType()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.SynchronizeBroadPhaseXFormXForm">
            <summary>Sets the shim of Fixture.Synchronize(BroadPhase broadPhase, XForm transform1, XForm transform2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.TestPointVec2">
            <summary>Sets the shim of Fixture.TestPoint(Vec2 p)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixture.AllInstances.TestSegmentSingleOutVec2OutSegmentSingle">
            <summary>Sets the shim of Fixture.TestSegment(Single&amp; lambda, Vec2&amp; normal, Segment segment, Single maxLambda)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimFixtureDef">
            <summary>Shim type of Box2DX.Dynamics.FixtureDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixtureDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixtureDef.#ctor(Box2DX.Dynamics.FixtureDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixtureDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimFixtureDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixtureDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimFixtureDef.Constructor">
            <summary>Sets the shim of FixtureDef.FixtureDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimFixtureDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimGearJoint">
            <summary>Shim type of Box2DX.Dynamics.GearJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJoint.#ctor(Box2DX.Dynamics.GearJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.Anchor1Get">
            <summary>Sets the shim of GearJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.Anchor2Get">
            <summary>Sets the shim of GearJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.ConstructorGearJointDef">
            <summary>Sets the shim of GearJoint.GearJoint(GearJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.GetReactionForceSingle">
            <summary>Sets the shim of GearJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of GearJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of GearJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.RatioGet">
            <summary>Sets the shim of GearJoint.get_Ratio()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of GearJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of GearJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of GearJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of GearJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of GearJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of GearJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of GearJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.RatioGet">
            <summary>Sets the shim of GearJoint.get_Ratio()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of GearJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of GearJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimGearJointDef">
            <summary>Shim type of Box2DX.Dynamics.GearJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJointDef.#ctor(Box2DX.Dynamics.GearJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimGearJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimGearJointDef.Constructor">
            <summary>Sets the shim of GearJointDef.GearJointDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimGearJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimIsland">
            <summary>Shim type of Box2DX.Dynamics.Island</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimIsland.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimIsland.#ctor(Box2DX.Dynamics.Island)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimIsland.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimIsland.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimIsland.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AddBody">
            <summary>Sets the shim of Island.Add(Body body)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AddContact">
            <summary>Sets the shim of Island.Add(Contact contact)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AddJoint">
            <summary>Sets the shim of Island.Add(Joint joint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.Clear">
            <summary>Sets the shim of Island.Clear()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.ConstructorInt32Int32Int32ContactListener">
            <summary>Sets the shim of Island.Island(Int32 bodyCapacity, Int32 contactCapacity, Int32 jointCapacity, ContactListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.Dispose">
            <summary>Sets the shim of Island.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.ReportContactConstraintArray">
            <summary>Sets the shim of Island.Report(ContactConstraint[] constraints)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.SolveTOITimeStepRef">
            <summary>Sets the shim of Island.SolveTOI(TimeStep&amp; subStep)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.SolveTimeStepVec2Boolean">
            <summary>Sets the shim of Island.Solve(TimeStep step, Vec2 gravity, Boolean allowSleep)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.AddBody">
            <summary>Sets the shim of Island.Add(Body body)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.AddContact">
            <summary>Sets the shim of Island.Add(Contact contact)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.AddJoint">
            <summary>Sets the shim of Island.Add(Joint joint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.Clear">
            <summary>Sets the shim of Island.Clear()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.Dispose">
            <summary>Sets the shim of Island.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.ReportContactConstraintArray">
            <summary>Sets the shim of Island.Report(ContactConstraint[] constraints)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.SolveTOITimeStepRef">
            <summary>Sets the shim of Island.SolveTOI(TimeStep&amp; subStep)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimIsland.AllInstances.SolveTimeStepVec2Boolean">
            <summary>Sets the shim of Island.Solve(TimeStep step, Vec2 gravity, Boolean allowSleep)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJacobian">
            <summary>Shim type of Box2DX.Dynamics.Jacobian</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJacobian.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJacobian.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJacobian.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJacobian.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJacobian.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJoint">
            <summary>Shim type of Box2DX.Dynamics.Joint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJoint.#ctor(Box2DX.Dynamics.Joint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.ConstructorJointDef">
            <summary>Sets the shim of Joint.Joint(JointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.CreateJointDef">
            <summary>Sets the shim of Joint.Create(JointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.DestroyJoint">
            <summary>Sets the shim of Joint.Destroy(Joint joint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.GetBody1">
            <summary>Sets the shim of Joint.GetBody1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.GetBody2">
            <summary>Sets the shim of Joint.GetBody2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.GetNext">
            <summary>Sets the shim of Joint.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.GetType">
            <summary>Sets the shim of Joint.GetType()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.UserDataGet">
            <summary>Sets the shim of Joint.get_UserData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.UserDataSetObject">
            <summary>Sets the shim of Joint.set_UserData(Object value)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.ComputeXFormXFormRefVec2Vec2Single">
            <summary>Sets the shim of Joint.ComputeXForm(XForm&amp; xf, Vec2 center, Vec2 localCenter, Single angle)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.GetBody1">
            <summary>Sets the shim of Joint.GetBody1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.GetBody2">
            <summary>Sets the shim of Joint.GetBody2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.GetNext">
            <summary>Sets the shim of Joint.GetNext()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.GetType01">
            <summary>Sets the shim of Joint.GetType()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.UserDataGet">
            <summary>Sets the shim of Joint.get_UserData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJoint.AllInstances.UserDataSetObject">
            <summary>Sets the shim of Joint.set_UserData(Object value)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJointDef">
            <summary>Shim type of Box2DX.Dynamics.JointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointDef.#ctor(Box2DX.Dynamics.JointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJointDef.Constructor">
            <summary>Sets the shim of JointDef.JointDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJointEdge">
            <summary>Shim type of Box2DX.Dynamics.JointEdge</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointEdge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointEdge.#ctor(Box2DX.Dynamics.JointEdge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointEdge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimJointEdge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJointEdge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimJointEdge.Constructor">
            <summary>Sets the shim of JointEdge.JointEdge()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimJointEdge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimLineJoint">
            <summary>Shim type of Box2DX.Dynamics.LineJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJoint.#ctor(Box2DX.Dynamics.LineJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.Anchor1Get">
            <summary>Sets the shim of LineJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.Anchor2Get">
            <summary>Sets the shim of LineJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.ConstructorLineJointDef">
            <summary>Sets the shim of LineJoint.LineJoint(LineJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.EnableLimitBoolean">
            <summary>Sets the shim of LineJoint.EnableLimit(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.EnableMotorBoolean">
            <summary>Sets the shim of LineJoint.EnableMotor(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetJointSpeed">
            <summary>Sets the shim of LineJoint.GetJointSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetJointTranslation">
            <summary>Sets the shim of LineJoint.GetJointTranslation()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetLowerLimit">
            <summary>Sets the shim of LineJoint.GetLowerLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetMotorForce">
            <summary>Sets the shim of LineJoint.GetMotorForce()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetMotorSpeed">
            <summary>Sets the shim of LineJoint.GetMotorSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetReactionForceSingle">
            <summary>Sets the shim of LineJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of LineJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.GetUpperLimit">
            <summary>Sets the shim of LineJoint.GetUpperLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of LineJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.IsLimitEnabled">
            <summary>Sets the shim of LineJoint.IsLimitEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.IsMotorEnabled">
            <summary>Sets the shim of LineJoint.IsMotorEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.SetLimitsSingleSingle">
            <summary>Sets the shim of LineJoint.SetLimits(Single lower, Single upper)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.SetMaxMotorForceSingle">
            <summary>Sets the shim of LineJoint.SetMaxMotorForce(Single force)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.SetMotorSpeedSingle">
            <summary>Sets the shim of LineJoint.SetMotorSpeed(Single speed)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of LineJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of LineJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of LineJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of LineJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.EnableLimitBoolean">
            <summary>Sets the shim of LineJoint.EnableLimit(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.EnableMotorBoolean">
            <summary>Sets the shim of LineJoint.EnableMotor(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetJointSpeed">
            <summary>Sets the shim of LineJoint.GetJointSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetJointTranslation">
            <summary>Sets the shim of LineJoint.GetJointTranslation()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetLowerLimit">
            <summary>Sets the shim of LineJoint.GetLowerLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetMotorForce">
            <summary>Sets the shim of LineJoint.GetMotorForce()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetMotorSpeed">
            <summary>Sets the shim of LineJoint.GetMotorSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of LineJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of LineJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.GetUpperLimit">
            <summary>Sets the shim of LineJoint.GetUpperLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of LineJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.IsLimitEnabled">
            <summary>Sets the shim of LineJoint.IsLimitEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.IsMotorEnabled">
            <summary>Sets the shim of LineJoint.IsMotorEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.SetLimitsSingleSingle">
            <summary>Sets the shim of LineJoint.SetLimits(Single lower, Single upper)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.SetMaxMotorForceSingle">
            <summary>Sets the shim of LineJoint.SetMaxMotorForce(Single force)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.SetMotorSpeedSingle">
            <summary>Sets the shim of LineJoint.SetMotorSpeed(Single speed)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of LineJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of LineJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimLineJointDef">
            <summary>Shim type of Box2DX.Dynamics.LineJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJointDef.#ctor(Box2DX.Dynamics.LineJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimLineJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJointDef.Constructor">
            <summary>Sets the shim of LineJointDef.LineJointDef()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJointDef.InitializeBodyBodyVec2Vec2">
            <summary>Sets the shim of LineJointDef.Initialize(Body body1, Body body2, Vec2 anchor, Vec2 axis)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimLineJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimLineJointDef.AllInstances.InitializeBodyBodyVec2Vec2">
            <summary>Sets the shim of LineJointDef.Initialize(Body body1, Body body2, Vec2 anchor, Vec2 axis)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimMouseJoint">
            <summary>Shim type of Box2DX.Dynamics.MouseJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJoint.#ctor(Box2DX.Dynamics.MouseJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.Anchor1Get">
            <summary>Sets the shim of MouseJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.Anchor2Get">
            <summary>Sets the shim of MouseJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.ConstructorMouseJointDef">
            <summary>Sets the shim of MouseJoint.MouseJoint(MouseJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.GetReactionForceSingle">
            <summary>Sets the shim of MouseJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of MouseJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of MouseJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.SetTargetVec2">
            <summary>Sets the shim of MouseJoint.SetTarget(Vec2 target)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of MouseJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of MouseJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of MouseJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of MouseJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of MouseJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of MouseJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of MouseJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.SetTargetVec2">
            <summary>Sets the shim of MouseJoint.SetTarget(Vec2 target)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of MouseJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of MouseJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimMouseJointDef">
            <summary>Shim type of Box2DX.Dynamics.MouseJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJointDef.#ctor(Box2DX.Dynamics.MouseJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimMouseJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimMouseJointDef.Constructor">
            <summary>Sets the shim of MouseJointDef.MouseJointDef()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimMouseJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimNullContact">
            <summary>Shim type of Box2DX.Dynamics.NullContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimNullContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimNullContact.#ctor(Box2DX.Dynamics.NullContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimNullContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimNullContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimNullContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimNullContact.CollideManifoldRefShapeXFormShapeXForm">
            <summary>Sets the shim of NullContact.Collide(Manifold&amp; manifold, Shape shape1, XForm xf1, Shape shape2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimNullContact.Constructor">
            <summary>Sets the shim of NullContact.NullContact()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimNullContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact">
            <summary>Shim type of Box2DX.Dynamics.PolyAndCircleContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.#ctor(Box2DX.Dynamics.PolyAndCircleContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.CollidePolygonCircleManifoldRefShapeXFormShapeXForm">
            <summary>Sets the shim of PolyAndCircleContact.CollidePolygonCircle(Manifold&amp; manifold, Shape shape1, XForm xf1, Shape shape2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.ConstructorFixtureFixture">
            <summary>Sets the shim of PolyAndCircleContact.PolyAndCircleContact(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.CreateFixtureFixture">
            <summary>Sets the shim of PolyAndCircleContact.Create(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.DestroyContactRef">
            <summary>Sets the shim of PolyAndCircleContact.Destroy(Contact&amp; contact)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolyAndCircleContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact">
            <summary>Shim type of Box2DX.Dynamics.PolyAndEdgeContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.#ctor(Box2DX.Dynamics.PolyAndEdgeContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.CollidePolyAndEdgeContactManifoldRefShapeXFormShapeXForm">
            <summary>Sets the shim of PolyAndEdgeContact.CollidePolyAndEdgeContact(Manifold&amp; manifold, Shape shape1, XForm xf1, Shape shape2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.ConstructorFixtureFixture">
            <summary>Sets the shim of PolyAndEdgeContact.PolyAndEdgeContact(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.CreateFixtureFixture">
            <summary>Sets the shim of PolyAndEdgeContact.Create(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.DestroyContactRef">
            <summary>Sets the shim of PolyAndEdgeContact.Destroy(Contact&amp; contact)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolyAndEdgeContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolygonContact">
            <summary>Shim type of Box2DX.Dynamics.PolygonContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonContact.#ctor(Box2DX.Dynamics.PolygonContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonContact.CollidePolygonsManifoldRefShapeXFormShapeXForm">
            <summary>Sets the shim of PolygonContact.CollidePolygons(Manifold&amp; manifold, Shape shape1, XForm xf1, Shape shape2, XForm xf2)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonContact.ConstructorFixtureFixture">
            <summary>Sets the shim of PolygonContact.PolygonContact(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonContact.CreateFixtureFixture">
            <summary>Sets the shim of PolygonContact.Create(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonContact.DestroyContactRef">
            <summary>Sets the shim of PolygonContact.Destroy(Contact&amp; contact)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolygonContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolygonDef">
            <summary>Shim type of Box2DX.Dynamics.PolygonDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonDef.#ctor(Box2DX.Dynamics.PolygonDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPolygonDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonDef.Constructor">
            <summary>Sets the shim of PolygonDef.PolygonDef()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonDef.SetAsBoxSingleSingle">
            <summary>Sets the shim of PolygonDef.SetAsBox(Single hx, Single hy)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonDef.SetAsBoxSingleSingleVec2Single">
            <summary>Sets the shim of PolygonDef.SetAsBox(Single hx, Single hy, Vec2 center, Single angle)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPolygonDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonDef.AllInstances.SetAsBoxSingleSingle">
            <summary>Sets the shim of PolygonDef.SetAsBox(Single hx, Single hy)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPolygonDef.AllInstances.SetAsBoxSingleSingleVec2Single">
            <summary>Sets the shim of PolygonDef.SetAsBox(Single hx, Single hy, Vec2 center, Single angle)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPosition">
            <summary>Shim type of Box2DX.Dynamics.Position</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPosition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPosition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPosition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPosition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPosition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPrismaticJoint">
            <summary>Shim type of Box2DX.Dynamics.PrismaticJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.#ctor(Box2DX.Dynamics.PrismaticJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.Anchor1Get">
            <summary>Sets the shim of PrismaticJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.Anchor2Get">
            <summary>Sets the shim of PrismaticJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.ConstructorPrismaticJointDef">
            <summary>Sets the shim of PrismaticJoint.PrismaticJoint(PrismaticJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.EnableLimitBoolean">
            <summary>Sets the shim of PrismaticJoint.EnableLimit(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.EnableMotorBoolean">
            <summary>Sets the shim of PrismaticJoint.EnableMotor(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.GetReactionForceSingle">
            <summary>Sets the shim of PrismaticJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of PrismaticJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of PrismaticJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.IsLimitEnabledGet">
            <summary>Sets the shim of PrismaticJoint.get_IsLimitEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.IsMotorEnabledGet">
            <summary>Sets the shim of PrismaticJoint.get_IsMotorEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.JointSpeedGet">
            <summary>Sets the shim of PrismaticJoint.get_JointSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.JointTranslationGet">
            <summary>Sets the shim of PrismaticJoint.get_JointTranslation()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.LowerLimitGet">
            <summary>Sets the shim of PrismaticJoint.get_LowerLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.MotorForceGet">
            <summary>Sets the shim of PrismaticJoint.get_MotorForce()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.MotorSpeedGet">
            <summary>Sets the shim of PrismaticJoint.get_MotorSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.MotorSpeedSetSingle">
            <summary>Sets the shim of PrismaticJoint.set_MotorSpeed(Single value)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.SetLimitsSingleSingle">
            <summary>Sets the shim of PrismaticJoint.SetLimits(Single lower, Single upper)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.SetMaxMotorForceSingle">
            <summary>Sets the shim of PrismaticJoint.SetMaxMotorForce(Single force)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of PrismaticJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of PrismaticJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.UpperLimitGet">
            <summary>Sets the shim of PrismaticJoint.get_UpperLimit()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of PrismaticJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of PrismaticJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.EnableLimitBoolean">
            <summary>Sets the shim of PrismaticJoint.EnableLimit(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.EnableMotorBoolean">
            <summary>Sets the shim of PrismaticJoint.EnableMotor(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of PrismaticJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of PrismaticJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of PrismaticJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.IsLimitEnabledGet">
            <summary>Sets the shim of PrismaticJoint.get_IsLimitEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.IsMotorEnabledGet">
            <summary>Sets the shim of PrismaticJoint.get_IsMotorEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.JointSpeedGet">
            <summary>Sets the shim of PrismaticJoint.get_JointSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.JointTranslationGet">
            <summary>Sets the shim of PrismaticJoint.get_JointTranslation()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.LowerLimitGet">
            <summary>Sets the shim of PrismaticJoint.get_LowerLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.MotorForceGet">
            <summary>Sets the shim of PrismaticJoint.get_MotorForce()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.MotorSpeedGet">
            <summary>Sets the shim of PrismaticJoint.get_MotorSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.MotorSpeedSetSingle">
            <summary>Sets the shim of PrismaticJoint.set_MotorSpeed(Single value)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.SetLimitsSingleSingle">
            <summary>Sets the shim of PrismaticJoint.SetLimits(Single lower, Single upper)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.SetMaxMotorForceSingle">
            <summary>Sets the shim of PrismaticJoint.SetMaxMotorForce(Single force)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of PrismaticJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of PrismaticJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJoint.AllInstances.UpperLimitGet">
            <summary>Sets the shim of PrismaticJoint.get_UpperLimit()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef">
            <summary>Shim type of Box2DX.Dynamics.PrismaticJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.#ctor(Box2DX.Dynamics.PrismaticJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.Constructor">
            <summary>Sets the shim of PrismaticJointDef.PrismaticJointDef()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.InitializeBodyBodyVec2Vec2">
            <summary>Sets the shim of PrismaticJointDef.Initialize(Body body1, Body body2, Vec2 anchor, Vec2 axis)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPrismaticJointDef.AllInstances.InitializeBodyBodyVec2Vec2">
            <summary>Sets the shim of PrismaticJointDef.Initialize(Body body1, Body body2, Vec2 anchor, Vec2 axis)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPulleyJoint">
            <summary>Shim type of Box2DX.Dynamics.PulleyJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJoint.#ctor(Box2DX.Dynamics.PulleyJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.Anchor1Get">
            <summary>Sets the shim of PulleyJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.Anchor2Get">
            <summary>Sets the shim of PulleyJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.ConstructorPulleyJointDef">
            <summary>Sets the shim of PulleyJoint.PulleyJoint(PulleyJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.GetReactionForceSingle">
            <summary>Sets the shim of PulleyJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of PulleyJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.GroundAnchor1Get">
            <summary>Sets the shim of PulleyJoint.get_GroundAnchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.GroundAnchor2Get">
            <summary>Sets the shim of PulleyJoint.get_GroundAnchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of PulleyJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.Length1Get">
            <summary>Sets the shim of PulleyJoint.get_Length1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.Length2Get">
            <summary>Sets the shim of PulleyJoint.get_Length2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.RatioGet">
            <summary>Sets the shim of PulleyJoint.get_Ratio()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of PulleyJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of PulleyJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.StaticConstructor">
            <summary>Sets the shim of PulleyJoint.PulleyJoint()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of PulleyJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of PulleyJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of PulleyJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of PulleyJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.GroundAnchor1Get">
            <summary>Sets the shim of PulleyJoint.get_GroundAnchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.GroundAnchor2Get">
            <summary>Sets the shim of PulleyJoint.get_GroundAnchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of PulleyJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.Length1Get">
            <summary>Sets the shim of PulleyJoint.get_Length1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.Length2Get">
            <summary>Sets the shim of PulleyJoint.get_Length2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.RatioGet">
            <summary>Sets the shim of PulleyJoint.get_Ratio()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of PulleyJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of PulleyJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPulleyJointDef">
            <summary>Shim type of Box2DX.Dynamics.PulleyJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.#ctor(Box2DX.Dynamics.PulleyJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.Constructor">
            <summary>Sets the shim of PulleyJointDef.PulleyJointDef()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.InitializeBodyBodyVec2Vec2Vec2Vec2Single">
            <summary>Sets the shim of PulleyJointDef.Initialize(Body body1, Body body2, Vec2 groundAnchor1, Vec2 groundAnchor2, Vec2 anchor1, Vec2 anchor2, Single ratio)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimPulleyJointDef.AllInstances.InitializeBodyBodyVec2Vec2Vec2Vec2Single">
            <summary>Sets the shim of PulleyJointDef.Initialize(Body body1, Body body2, Vec2 groundAnchor1, Vec2 groundAnchor2, Vec2 anchor1, Vec2 anchor2, Single ratio)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimRevoluteJoint">
            <summary>Shim type of Box2DX.Dynamics.RevoluteJoint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.#ctor(Box2DX.Dynamics.RevoluteJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.Anchor1Get">
            <summary>Sets the shim of RevoluteJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.Anchor2Get">
            <summary>Sets the shim of RevoluteJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.ConstructorRevoluteJointDef">
            <summary>Sets the shim of RevoluteJoint.RevoluteJoint(RevoluteJointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.EnableLimitBoolean">
            <summary>Sets the shim of RevoluteJoint.EnableLimit(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.EnableMotorBoolean">
            <summary>Sets the shim of RevoluteJoint.EnableMotor(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.GetReactionForceSingle">
            <summary>Sets the shim of RevoluteJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.GetReactionTorqueSingle">
            <summary>Sets the shim of RevoluteJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of RevoluteJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.IsLimitEnabledGet">
            <summary>Sets the shim of RevoluteJoint.get_IsLimitEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.IsMotorEnabledGet">
            <summary>Sets the shim of RevoluteJoint.get_IsMotorEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.JointAngleGet">
            <summary>Sets the shim of RevoluteJoint.get_JointAngle()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.JointSpeedGet">
            <summary>Sets the shim of RevoluteJoint.get_JointSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.LowerLimitGet">
            <summary>Sets the shim of RevoluteJoint.get_LowerLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.MotorSpeedGet">
            <summary>Sets the shim of RevoluteJoint.get_MotorSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.MotorSpeedSetSingle">
            <summary>Sets the shim of RevoluteJoint.set_MotorSpeed(Single value)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.MotorTorqueGet">
            <summary>Sets the shim of RevoluteJoint.get_MotorTorque()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.SetLimitsSingleSingle">
            <summary>Sets the shim of RevoluteJoint.SetLimits(Single lower, Single upper)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.SetMaxMotorTorqueSingle">
            <summary>Sets the shim of RevoluteJoint.SetMaxMotorTorque(Single torque)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.SolvePositionConstraintsSingle">
            <summary>Sets the shim of RevoluteJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of RevoluteJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.UpperLimitGet">
            <summary>Sets the shim of RevoluteJoint.get_UpperLimit()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.Anchor1Get">
            <summary>Sets the shim of RevoluteJoint.get_Anchor1()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.Anchor2Get">
            <summary>Sets the shim of RevoluteJoint.get_Anchor2()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.EnableLimitBoolean">
            <summary>Sets the shim of RevoluteJoint.EnableLimit(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.EnableMotorBoolean">
            <summary>Sets the shim of RevoluteJoint.EnableMotor(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the shim of RevoluteJoint.GetReactionForce(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the shim of RevoluteJoint.GetReactionTorque(Single inv_dt)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.InitVelocityConstraintsTimeStep">
            <summary>Sets the shim of RevoluteJoint.InitVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.IsLimitEnabledGet">
            <summary>Sets the shim of RevoluteJoint.get_IsLimitEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.IsMotorEnabledGet">
            <summary>Sets the shim of RevoluteJoint.get_IsMotorEnabled()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.JointAngleGet">
            <summary>Sets the shim of RevoluteJoint.get_JointAngle()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.JointSpeedGet">
            <summary>Sets the shim of RevoluteJoint.get_JointSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.LowerLimitGet">
            <summary>Sets the shim of RevoluteJoint.get_LowerLimit()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.MotorSpeedGet">
            <summary>Sets the shim of RevoluteJoint.get_MotorSpeed()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.MotorSpeedSetSingle">
            <summary>Sets the shim of RevoluteJoint.set_MotorSpeed(Single value)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.MotorTorqueGet">
            <summary>Sets the shim of RevoluteJoint.get_MotorTorque()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.SetLimitsSingleSingle">
            <summary>Sets the shim of RevoluteJoint.SetLimits(Single lower, Single upper)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.SetMaxMotorTorqueSingle">
            <summary>Sets the shim of RevoluteJoint.SetMaxMotorTorque(Single torque)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.SolvePositionConstraintsSingle">
            <summary>Sets the shim of RevoluteJoint.SolvePositionConstraints(Single baumgarte)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.SolveVelocityConstraintsTimeStep">
            <summary>Sets the shim of RevoluteJoint.SolveVelocityConstraints(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJoint.AllInstances.UpperLimitGet">
            <summary>Sets the shim of RevoluteJoint.get_UpperLimit()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef">
            <summary>Shim type of Box2DX.Dynamics.RevoluteJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.#ctor(Box2DX.Dynamics.RevoluteJointDef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.Constructor">
            <summary>Sets the shim of RevoluteJointDef.RevoluteJointDef()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.InitializeBodyBodyVec2">
            <summary>Sets the shim of RevoluteJointDef.Initialize(Body body1, Body body2, Vec2 anchor)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimRevoluteJointDef.AllInstances.InitializeBodyBodyVec2">
            <summary>Sets the shim of RevoluteJointDef.Initialize(Body body1, Body body2, Vec2 anchor)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimTimeStep">
            <summary>Shim type of Box2DX.Dynamics.TimeStep</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimTimeStep.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimTimeStep.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimTimeStep.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimTimeStep.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimTimeStep.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimVelocity">
            <summary>Shim type of Box2DX.Dynamics.Velocity</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimVelocity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimVelocity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimVelocity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimVelocity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimVelocity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimWorld">
            <summary>Shim type of Box2DX.Dynamics.World</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimWorld.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimWorld.#ctor(Box2DX.Dynamics.World)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimWorld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimWorld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.ShimWorld.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AddControllerController">
            <summary>Sets the shim of World.AddController(Controller def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.ConstructorAABBVec2Boolean">
            <summary>Sets the shim of World.World(AABB worldAABB, Vec2 gravity, Boolean doSleep)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.CreateBodyBodyDef">
            <summary>Sets the shim of World.CreateBody(BodyDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.CreateJointJointDef">
            <summary>Sets the shim of World.CreateJoint(JointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.DestroyBodyBody">
            <summary>Sets the shim of World.DestroyBody(Body b)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.DestroyJointJoint">
            <summary>Sets the shim of World.DestroyJoint(Joint j)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.Dispose">
            <summary>Sets the shim of World.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.DrawDebugData">
            <summary>Sets the shim of World.DrawDebugData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.DrawFixtureFixtureXFormColorBoolean">
            <summary>Sets the shim of World.DrawFixture(Fixture fixture, XForm xf, Color color, Boolean core)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.DrawJointJoint">
            <summary>Sets the shim of World.DrawJoint(Joint joint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetBodyCount">
            <summary>Sets the shim of World.GetBodyCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetBodyList">
            <summary>Sets the shim of World.GetBodyList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetContactCount">
            <summary>Sets the shim of World.GetContactCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetControllerCount">
            <summary>Sets the shim of World.GetControllerCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetControllerList">
            <summary>Sets the shim of World.GetControllerList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetGroundBody">
            <summary>Sets the shim of World.GetGroundBody()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetJointCount">
            <summary>Sets the shim of World.GetJointCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetJointList">
            <summary>Sets the shim of World.GetJointList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetPairCount">
            <summary>Sets the shim of World.GetPairCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GetProxyCount">
            <summary>Sets the shim of World.GetProxyCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GravityGet">
            <summary>Sets the shim of World.get_Gravity()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.GravitySetVec2">
            <summary>Sets the shim of World.set_Gravity(Vec2 value)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.InRangeAABB">
            <summary>Sets the shim of World.InRange(AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.QueryAABBFixtureArrayInt32">
            <summary>Sets the shim of World.Query(AABB aabb, Fixture[] fixtures, Int32 maxCount)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.RaycastSortKeyObject">
            <summary>Sets the shim of World.RaycastSortKey(Object data)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.RefilterFixture">
            <summary>Sets the shim of World.Refilter(Fixture fixture)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.RemoveControllerController">
            <summary>Sets the shim of World.RemoveController(Controller controller)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetBoundaryListenerBoundaryListener">
            <summary>Sets the shim of World.SetBoundaryListener(BoundaryListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetContactFilterContactFilter">
            <summary>Sets the shim of World.SetContactFilter(ContactFilter filter)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetContactListenerContactListener">
            <summary>Sets the shim of World.SetContactListener(ContactListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetContinuousPhysicsBoolean">
            <summary>Sets the shim of World.SetContinuousPhysics(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetDebugDrawDebugDraw">
            <summary>Sets the shim of World.SetDebugDraw(DebugDraw debugDraw)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetDestructionListenerDestructionListener">
            <summary>Sets the shim of World.SetDestructionListener(DestructionListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SetWarmStartingBoolean">
            <summary>Sets the shim of World.SetWarmStarting(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SolveTOITimeStep">
            <summary>Sets the shim of World.SolveTOI(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.SolveTimeStep">
            <summary>Sets the shim of World.Solve(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.StepSingleInt32Int32">
            <summary>Sets the shim of World.Step(Single dt, Int32 velocityIterations, Int32 positionIteration)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.Validate">
            <summary>Sets the shim of World.Validate()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.AddControllerController">
            <summary>Sets the shim of World.AddController(Controller def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.CreateBodyBodyDef">
            <summary>Sets the shim of World.CreateBody(BodyDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.CreateJointJointDef">
            <summary>Sets the shim of World.CreateJoint(JointDef def)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.DestroyBodyBody">
            <summary>Sets the shim of World.DestroyBody(Body b)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.DestroyJointJoint">
            <summary>Sets the shim of World.DestroyJoint(Joint j)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.Dispose">
            <summary>Sets the shim of World.Dispose()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.DrawDebugData">
            <summary>Sets the shim of World.DrawDebugData()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.DrawFixtureFixtureXFormColorBoolean">
            <summary>Sets the shim of World.DrawFixture(Fixture fixture, XForm xf, Color color, Boolean core)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.DrawJointJoint">
            <summary>Sets the shim of World.DrawJoint(Joint joint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetBodyCount">
            <summary>Sets the shim of World.GetBodyCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetBodyList">
            <summary>Sets the shim of World.GetBodyList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetContactCount">
            <summary>Sets the shim of World.GetContactCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetControllerCount">
            <summary>Sets the shim of World.GetControllerCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetControllerList">
            <summary>Sets the shim of World.GetControllerList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetGroundBody">
            <summary>Sets the shim of World.GetGroundBody()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetJointCount">
            <summary>Sets the shim of World.GetJointCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetJointList">
            <summary>Sets the shim of World.GetJointList()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetPairCount">
            <summary>Sets the shim of World.GetPairCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GetProxyCount">
            <summary>Sets the shim of World.GetProxyCount()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GravityGet">
            <summary>Sets the shim of World.get_Gravity()</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.GravitySetVec2">
            <summary>Sets the shim of World.set_Gravity(Vec2 value)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.InRangeAABB">
            <summary>Sets the shim of World.InRange(AABB aabb)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.QueryAABBFixtureArrayInt32">
            <summary>Sets the shim of World.Query(AABB aabb, Fixture[] fixtures, Int32 maxCount)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.RaycastOneSegmentSingleOutVec2OutBooleanObject">
            <summary>Sets the shim of World.RaycastOne(Segment segment, Single&amp; lambda, Vec2&amp; normal, Boolean solidShapes, Object userData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.RaycastSegmentFixtureArrayOutInt32BooleanObject">
            <summary>Sets the shim of World.Raycast(Segment segment, Fixture[]&amp; fixtures, Int32 maxCount, Boolean solidShapes, Object userData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.RefilterFixture">
            <summary>Sets the shim of World.Refilter(Fixture fixture)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.RemoveControllerController">
            <summary>Sets the shim of World.RemoveController(Controller controller)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetBoundaryListenerBoundaryListener">
            <summary>Sets the shim of World.SetBoundaryListener(BoundaryListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetContactFilterContactFilter">
            <summary>Sets the shim of World.SetContactFilter(ContactFilter filter)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetContactListenerContactListener">
            <summary>Sets the shim of World.SetContactListener(ContactListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetContinuousPhysicsBoolean">
            <summary>Sets the shim of World.SetContinuousPhysics(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetDebugDrawDebugDraw">
            <summary>Sets the shim of World.SetDebugDraw(DebugDraw debugDraw)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetDestructionListenerDestructionListener">
            <summary>Sets the shim of World.SetDestructionListener(DestructionListener listener)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SetWarmStartingBoolean">
            <summary>Sets the shim of World.SetWarmStarting(Boolean flag)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SolveTOITimeStep">
            <summary>Sets the shim of World.SolveTOI(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.SolveTimeStep">
            <summary>Sets the shim of World.Solve(TimeStep step)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.StepSingleInt32Int32">
            <summary>Sets the shim of World.Step(Single dt, Int32 velocityIterations, Int32 positionIteration)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.ShimWorld.AllInstances.Validate">
            <summary>Sets the shim of World.Validate()</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubBoundaryListener">
            <summary>Stub type of Box2DX.Dynamics.BoundaryListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubBoundaryListener.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubBoundaryListener.InitializeStub">
            <summary>Initializes a new instance of type StubBoundaryListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubBoundaryListener.Violation(Box2DX.Dynamics.Body)">
            <summary>Sets the stub of BoundaryListener.Violation(Body body)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubBoundaryListener.ViolationBody">
            <summary>Sets the stub of BoundaryListener.Violation(Body body)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubBoundaryListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubBoundaryListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubBoundaryListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubCircleContact">
            <summary>Stub type of Box2DX.Dynamics.CircleContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubCircleContact.#ctor(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubCircleContact.InitializeStub">
            <summary>Initializes a new instance of type StubCircleContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubCircleContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubCircleContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubCircleContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubCircleDef">
            <summary>Stub type of Box2DX.Dynamics.CircleDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubCircleDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubCircleDef.InitializeStub">
            <summary>Initializes a new instance of type StubCircleDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubCircleDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubCircleDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubCircleDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContact">
            <summary>Stub type of Box2DX.Dynamics.Contact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContact.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContact.#ctor(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContact.InitializeStub">
            <summary>Initializes a new instance of type StubContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactConstraint">
            <summary>Stub type of Box2DX.Dynamics.ContactConstraint</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubContactConstraint</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactEdge">
            <summary>Stub type of Box2DX.Dynamics.ContactEdge</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactEdge.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactEdge.InitializeStub">
            <summary>Initializes a new instance of type StubContactEdge</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactEdge.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactEdge.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactEdge.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactFilter">
            <summary>Stub type of Box2DX.Dynamics.ContactFilter</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactFilter.InitializeStub">
            <summary>Initializes a new instance of type StubContactFilter</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactFilter.ShouldCollide(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Sets the stub of ContactFilter.ShouldCollide(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactFilter.ShouldCollideFixtureFixture">
            <summary>Sets the stub of ContactFilter.ShouldCollide(Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactImpulse">
            <summary>Stub type of Box2DX.Dynamics.ContactImpulse</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactImpulse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactImpulse.InitializeStub">
            <summary>Initializes a new instance of type StubContactImpulse</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactImpulse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactImpulse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactImpulse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactListener">
            <summary>Stub type of Box2DX.Dynamics.ContactListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactListener.#ctor">
            <summary>Initializes a new instance of type StubContactListener</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactListener.BeginContactContact">
            <summary>Sets the stub of ContactListener.BeginContact(Contact contact)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactListener.b2dx::Box2DX#Dynamics#ContactListener#BeginContact(Box2DX.Dynamics.Contact)">
            <summary>Sets the stub of ContactListener.BeginContact(Contact contact)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactListener.b2dx::Box2DX#Dynamics#ContactListener#EndContact(Box2DX.Dynamics.Contact)">
            <summary>Sets the stub of ContactListener.EndContact(Contact contact)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactListener.b2dx::Box2DX#Dynamics#ContactListener#PostSolve(Box2DX.Dynamics.Contact,Box2DX.Dynamics.ContactImpulse)">
            <summary>Sets the stub of ContactListener.PostSolve(Contact contact, ContactImpulse impulse)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactListener.b2dx::Box2DX#Dynamics#ContactListener#PreSolve(Box2DX.Dynamics.Contact,Box2DX.Collision.Manifold)">
            <summary>Sets the stub of ContactListener.PreSolve(Contact contact, Manifold oldManifold)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactListener.EndContactContact">
            <summary>Sets the stub of ContactListener.EndContact(Contact contact)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactListener.PostSolveContactContactImpulse">
            <summary>Sets the stub of ContactListener.PostSolve(Contact contact, ContactImpulse impulse)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactListener.PreSolveContactManifold">
            <summary>Sets the stub of ContactListener.PreSolve(Contact contact, Manifold oldManifold)</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactManager">
            <summary>Stub type of Box2DX.Dynamics.ContactManager</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactManager.InitializeStub">
            <summary>Initializes a new instance of type StubContactManager</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactManager.PairAdded(System.Object,System.Object)">
            <summary>Sets the stub of ContactManager.PairAdded(Object proxyUserDataA, Object proxyUserDataB)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactManager.PairAddedObjectObject">
            <summary>Sets the stub of ContactManager.PairAdded(Object proxyUserDataA, Object proxyUserDataB)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactManager.PairRemoved(System.Object,System.Object,System.Object)">
            <summary>Sets the stub of ContactManager.PairRemoved(Object proxyUserData1, Object proxyUserData2, Object pairUserData)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubContactManager.PairRemovedObjectObjectObject">
            <summary>Sets the stub of ContactManager.PairRemoved(Object proxyUserData1, Object proxyUserData2, Object pairUserData)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubContactSolver">
            <summary>Stub type of Box2DX.Dynamics.ContactSolver</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactSolver.#ctor(Box2DX.Dynamics.TimeStep,Box2DX.Dynamics.Contact[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubContactSolver.InitializeStub">
            <summary>Initializes a new instance of type StubContactSolver</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactSolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactSolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubContactSolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubDebugDraw">
            <summary>Stub type of Box2DX.Dynamics.DebugDraw</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawCircle(Box2DX.Common.Vec2,System.Single,Box2DX.Dynamics.Color)">
            <summary>Sets the stub of DebugDraw.DrawCircle(Vec2 center, Single radius, Color color)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawCircleVec2SingleColor">
            <summary>Sets the stub of DebugDraw.DrawCircle(Vec2 center, Single radius, Color color)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawPolygon(Box2DX.Common.Vec2[],System.Int32,Box2DX.Dynamics.Color)">
            <summary>Sets the stub of DebugDraw.DrawPolygon(Vec2[] vertices, Int32 vertexCount, Color color)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawPolygonVec2ArrayInt32Color">
            <summary>Sets the stub of DebugDraw.DrawPolygon(Vec2[] vertices, Int32 vertexCount, Color color)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawSegment(Box2DX.Common.Vec2,Box2DX.Common.Vec2,Box2DX.Dynamics.Color)">
            <summary>Sets the stub of DebugDraw.DrawSegment(Vec2 p1, Vec2 p2, Color color)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawSegmentVec2Vec2Color">
            <summary>Sets the stub of DebugDraw.DrawSegment(Vec2 p1, Vec2 p2, Color color)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawSolidCircle(Box2DX.Common.Vec2,System.Single,Box2DX.Common.Vec2,Box2DX.Dynamics.Color)">
            <summary>Sets the stub of DebugDraw.DrawSolidCircle(Vec2 center, Single radius, Vec2 axis, Color color)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawSolidCircleVec2SingleVec2Color">
            <summary>Sets the stub of DebugDraw.DrawSolidCircle(Vec2 center, Single radius, Vec2 axis, Color color)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawSolidPolygon(Box2DX.Common.Vec2[],System.Int32,Box2DX.Dynamics.Color)">
            <summary>Sets the stub of DebugDraw.DrawSolidPolygon(Vec2[] vertices, Int32 vertexCount, Color color)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawSolidPolygonVec2ArrayInt32Color">
            <summary>Sets the stub of DebugDraw.DrawSolidPolygon(Vec2[] vertices, Int32 vertexCount, Color color)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawXForm(Box2DX.Common.XForm)">
            <summary>Sets the stub of DebugDraw.DrawXForm(XForm xf)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDebugDraw.DrawXFormXForm">
            <summary>Sets the stub of DebugDraw.DrawXForm(XForm xf)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDebugDraw.InitializeStub">
            <summary>Initializes a new instance of type StubDebugDraw</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDebugDraw.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDebugDraw.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDebugDraw.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubDestructionListener">
            <summary>Stub type of Box2DX.Dynamics.DestructionListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDestructionListener.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDestructionListener.InitializeStub">
            <summary>Initializes a new instance of type StubDestructionListener</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDestructionListener.SayGoodbye(Box2DX.Dynamics.Fixture)">
            <summary>Sets the stub of DestructionListener.SayGoodbye(Fixture fixture)</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDestructionListener.SayGoodbye(Box2DX.Dynamics.Joint)">
            <summary>Sets the stub of DestructionListener.SayGoodbye(Joint joint)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDestructionListener.SayGoodbyeFixture">
            <summary>Sets the stub of DestructionListener.SayGoodbye(Fixture fixture)</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubDestructionListener.SayGoodbyeJoint">
            <summary>Sets the stub of DestructionListener.SayGoodbye(Joint joint)</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDestructionListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDestructionListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDestructionListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubDistanceJointDef">
            <summary>Stub type of Box2DX.Dynamics.DistanceJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDistanceJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubDistanceJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubDistanceJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDistanceJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDistanceJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubDistanceJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubEdgeAndCircleContact">
            <summary>Stub type of Box2DX.Dynamics.EdgeAndCircleContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubEdgeAndCircleContact.#ctor(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubEdgeAndCircleContact.InitializeStub">
            <summary>Initializes a new instance of type StubEdgeAndCircleContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubEdgeAndCircleContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubEdgeAndCircleContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubEdgeAndCircleContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubEdgeDef">
            <summary>Stub type of Box2DX.Dynamics.EdgeDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubEdgeDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubEdgeDef.InitializeStub">
            <summary>Initializes a new instance of type StubEdgeDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubEdgeDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubEdgeDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubEdgeDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubFixture">
            <summary>Stub type of Box2DX.Dynamics.Fixture</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubFixture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubFixture.Dispose">
            <summary>Sets the stub of Fixture.Dispose()</summary>
        </member>
        <member name="F:Box2DX.Dynamics.Fakes.StubFixture.Dispose01">
            <summary>Sets the stub of Fixture.Dispose()</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubFixture.InitializeStub">
            <summary>Initializes a new instance of type StubFixture</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubFixture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubFixture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubFixture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubFixtureDef">
            <summary>Stub type of Box2DX.Dynamics.FixtureDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubFixtureDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubFixtureDef.InitializeStub">
            <summary>Initializes a new instance of type StubFixtureDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubFixtureDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubFixtureDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubFixtureDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubGearJointDef">
            <summary>Stub type of Box2DX.Dynamics.GearJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubGearJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubGearJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubGearJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubGearJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubGearJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubGearJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubIsland">
            <summary>Stub type of Box2DX.Dynamics.Island</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubIsland.#ctor(System.Int32,System.Int32,System.Int32,Box2DX.Dynamics.ContactListener)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubIsland.InitializeStub">
            <summary>Initializes a new instance of type StubIsland</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubIsland.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubIsland.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubIsland.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubJointDef">
            <summary>Stub type of Box2DX.Dynamics.JointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubJointEdge">
            <summary>Stub type of Box2DX.Dynamics.JointEdge</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubJointEdge.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubJointEdge.InitializeStub">
            <summary>Initializes a new instance of type StubJointEdge</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubJointEdge.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubJointEdge.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubJointEdge.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubLineJointDef">
            <summary>Stub type of Box2DX.Dynamics.LineJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubLineJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubLineJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubLineJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubLineJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubLineJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubLineJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubMouseJointDef">
            <summary>Stub type of Box2DX.Dynamics.MouseJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubMouseJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubMouseJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubMouseJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubMouseJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubMouseJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubMouseJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubNullContact">
            <summary>Stub type of Box2DX.Dynamics.NullContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubNullContact.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubNullContact.InitializeStub">
            <summary>Initializes a new instance of type StubNullContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubNullContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubNullContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubNullContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubPolyAndCircleContact">
            <summary>Stub type of Box2DX.Dynamics.PolyAndCircleContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolyAndCircleContact.#ctor(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolyAndCircleContact.InitializeStub">
            <summary>Initializes a new instance of type StubPolyAndCircleContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolyAndCircleContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolyAndCircleContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolyAndCircleContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubPolyAndEdgeContact">
            <summary>Stub type of Box2DX.Dynamics.PolyAndEdgeContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolyAndEdgeContact.#ctor(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolyAndEdgeContact.InitializeStub">
            <summary>Initializes a new instance of type StubPolyAndEdgeContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolyAndEdgeContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolyAndEdgeContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolyAndEdgeContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubPolygonContact">
            <summary>Stub type of Box2DX.Dynamics.PolygonContact</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolygonContact.#ctor(Box2DX.Dynamics.Fixture,Box2DX.Dynamics.Fixture)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolygonContact.InitializeStub">
            <summary>Initializes a new instance of type StubPolygonContact</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolygonContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolygonContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolygonContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubPolygonDef">
            <summary>Stub type of Box2DX.Dynamics.PolygonDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolygonDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPolygonDef.InitializeStub">
            <summary>Initializes a new instance of type StubPolygonDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolygonDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolygonDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPolygonDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubPrismaticJointDef">
            <summary>Stub type of Box2DX.Dynamics.PrismaticJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPrismaticJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPrismaticJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubPrismaticJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPrismaticJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPrismaticJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPrismaticJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubPulleyJointDef">
            <summary>Stub type of Box2DX.Dynamics.PulleyJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPulleyJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubPulleyJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubPulleyJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPulleyJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPulleyJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubPulleyJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubRevoluteJointDef">
            <summary>Stub type of Box2DX.Dynamics.RevoluteJointDef</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubRevoluteJointDef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubRevoluteJointDef.InitializeStub">
            <summary>Initializes a new instance of type StubRevoluteJointDef</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubRevoluteJointDef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubRevoluteJointDef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubRevoluteJointDef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Dynamics.Fakes.StubWorld">
            <summary>Stub type of Box2DX.Dynamics.World</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubWorld.#ctor(Box2DX.Collision.AABB,Box2DX.Common.Vec2,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Box2DX.Dynamics.Fakes.StubWorld.InitializeStub">
            <summary>Initializes a new instance of type StubWorld</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubWorld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubWorld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Box2DX.Dynamics.Fakes.StubWorld.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Box2DX.Fakes.ShimBox2DXDebug">
            <summary>Shim type of Box2DX.Box2DXDebug</summary>
        </member>
        <member name="M:Box2DX.Fakes.ShimBox2DXDebug.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Box2DX.Fakes.ShimBox2DXDebug.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Box2DX.Fakes.ShimBox2DXDebug.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Fakes.ShimBox2DXDebug.AssertBoolean">
            <summary>Sets the shim of Box2DXDebug.Assert(Boolean condition)</summary>
        </member>
        <member name="P:Box2DX.Fakes.ShimBox2DXDebug.AssertBooleanString">
            <summary>Sets the shim of Box2DXDebug.Assert(Boolean condition, String message)</summary>
        </member>
        <member name="P:Box2DX.Fakes.ShimBox2DXDebug.AssertBooleanStringString">
            <summary>Sets the shim of Box2DXDebug.Assert(Boolean condition, String message, String detailMessage)</summary>
        </member>
        <member name="P:Box2DX.Fakes.ShimBox2DXDebug.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Box2DX.Fakes.ShimBox2DXDebug.ThrowBox2DXExceptionString">
            <summary>Sets the shim of Box2DXDebug.ThrowBox2DXException(String message)</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.Box2DXDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Box2DX</summary>
        </member>
    </members>
</doc>
